{"version":3,"sources":["Navbar.js","pages/EmployeeSidePanel.js","pages/employees/SearchAllForm.js","pages/employees/InsertForm.js","pages/employees/UpdateForm.js","pages/employees/GetForm.js","pages/employees/SearchManagersForm.js","pages/employees/EmployeesUnderManagerForm.js","pages/employees/DeleteEmployeeForm.js","pages/JobsSidePanel.js","pages/jobs/SearchAllJobsForm.js","pages/jobs/CreateJobForm.js","pages/jobs/UpdateJobForm.js","pages/jobs/DeleteJobForm.js","pages/jobs/SearchJobLocationsForm.js","pages/jobs/CreateJobLocationsForm.js","pages/LeaveSidePanel.js","pages/leave/SearchAllLeaveForm.js","pages/leave/SearchEmployeeLeaveForm.js","pages/leave/CreateLeaveForm.js","pages/leave/UpdateLeaveForm.js","pages/DepartmentSidePanel.js","pages/departments/CreateDepartmentForm.js","pages/departments/SearchDepartments.js","pages/departments/UpdateDepartment.js","pages/departments/DeleteDepartment.js","pages/BenefitsSidePanel.js","pages/benefits/CreateNewBenefitsForm.js","pages/benefits/SearchBenefitsPackagesForm.js","pages/benefits/UpdateBenefitsPackage.js","pages/PayrollSidePanel.js","pages/payroll/SearchAllPayrollForm.js","pages/payroll/CreatePayrollEntryForm.js","pages/payroll/CreateAllPayrollForm.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","handleInitializeDB","event","a","document","getElementById","style","display","classList","add","handleModalClose","remove","handleModalContinue","console","log","fetch","method","headers","response","json","success","Error","message","handleErrorModalClose","handleSuccessModalClose","bind","className","id","tabIndex","role","type","onClick","this","href","target","rel","React","Component","EmployeeSidePanel","align","SearchAllForm","toggleSQL","state","queries","setState","showSQL","handleChange","name","value","searchFirstName","searchMiddleInitial","searchLastName","searchID","searchTitle","searchDepartment","handleClear","handleSubmit","preventDefault","query","searchBy","trim","page","sort","order","limit","body","assertValidGETResponse","returnedEmployees","rows","querySelector","closeModal","listenForFormSubmission","form","addEventListener","checkValidity","stopPropagation","Array","isArray","pattern","placeholder","onChange","min","required","searchByInputElement","SearchByInputElement","onSubmit","noValidate","htmlFor","defaultValue","scope","map","employeeObj","index","first_name","last_name","m_initial","employee_id","job_title","department_name","queryText","whiteSpace","InsertForm","insertFirstName","insertLastName","gender","insertGender","dob","insertDOB","hourly_wage","insertHourlyWage","ssn","insertSSN","insertMiddleInitial","phone","insertPhone","email","insertEmail","job_id","insertJobID","manager_id","insertManagerID","annual_bonus","insertAnnualBonus","street_address","insertStreetAddress","city","insertCity","country","insertCountry","zip_code","insertZipCode","insertState","JSON","stringify","responseBody","assertValidDBResponse","insertedEmployee","step","UpdateForm","editFirstName","editLastName","editGender","editDOB","editHourlyWage","editSSN","editMiddleInitial","editPhone","editEmail","editJobID","editManagerID","editAnnualBonus","editStreetAddress","editCity","editCountry","editZipCode","editState","Object","entries","key","editEmployeeID","returnedEmployee","closeSuccessModal","disabled","GetForm","getID","handleCheckboxChange","checked","showFirstName","showMInitial","showLastName","showID","showDOB","showSSN","showGender","showEmail","showPhone","showStreetAddress","showCity","showState","showZipCode","showCountry","showJobTitle","showDepartmentName","showWeeklyHours","showHourlyWage","showAnnualBonus","showBenefitsAmount","showStockOptions","showHealthInsuranceProvider","showRetirementPlanNumber","db_to_state","keys","responseKey","SearchManagersForm","returnedManagers","managerObj","count","SearchEmployeesUnderManagerForm","managerID","DeleteEmployeeForm","deletedEmployee","JobsSidePanel","SearchAllJobsForm","searchJobTitle","searchLocation","returnedJobs","jobObj","department_id","location_id","weekly_hours","benefits_package_id","InsertJobForm","insertJobTitle","insertDepartmentID","insertLocationID","insertBenefitsPackageID","insertWeeklyHours","insertedJob","UpdateJobForm","editJobTitle","editDepartmentID","editLocationID","editBenefitsPackageID","editWeeklyHours","returnedJob","DeleteJobForm","deletedJob","SearchJobLocationsForm","returnedJobLocations","jobLocationObj","address_id","location_name","airport_id","flight_id","CreateJobLocationForm","insertedJobLocation","SearchAllLeaveForm","searchText","searchDate","searchStatus","searchReason","String","returnedLeaves","leaveObj","leave_id","date","split","reason","status","SearchEmployeeLeaveForm","employeeID","InsertLeaveForm","insertEmployeeID","insertDate","insertReason","insertStatus","insertedLeaveEntry","UpdateLeaveForm","editLeaveDate","editLeaveReason","editLeaveStatus","editLeaveID","returnedLeave","DepartmentsSidePanel","CreateDepartmentForm","createDepartmentName","creation_date","createDepartmentDate","department_head_id","createDepartmentHeadID","createdDepartment","deptObj","SearchDepartmentsForm","searchDepartmentName","returnedDepartments","job_count","employee_count","UpdateDepartmentForm","updateDepartmentName","updateCreationDate","updateDepartmentHeadID","departmentID","returnedDepartment","DeleteDepartmentForm","deletedDepartment","BenefitsSidePanel","CreateBenefitsForm","health_insurance_provider","amount","stock_options","retirement_plan","createdBenefitsPackage","benefitsObj","SearchBenefitsForm","searchAmount","searchStock","searchProvider","searchRetirement","returnedBenefits","UpdateBenefitsForm","benefitsPackageID","returnedBenefitPackage","PayrollSidePanel","SearchPayrollForm","searchPeriod","searchEmployee","searchIncome","returnedPayrollEntries","payrollObj","payroll_id","hours_worked","pay_period","tax_rate","gross_income","taxed_income","net_income","CreatePayrollEntryForm","createdPayrollEntry","CreateAllPayrollForm","createdPayrollEntries","slice","App","exact","path","element","CreateJobForm","LeaveSidePanel","CreateLeaveForm","SearchDepartments","UpdateDepartment","DeleteDepartment","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.cefe4359.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Outlet } from \"react-router-dom\";\r\n\r\n\r\nclass Navbar extends React.Component {\r\n  constructor(props) {\r\n    super(props);    \r\n    this.handleInitializeDB = this.handleInitializeDB.bind(this);\r\n    this.handleModalClose = this.handleModalClose.bind(this);\r\n    this.handleModalContinue = this.handleModalContinue.bind(this);\r\n    this.handleErrorModalClose = this.handleErrorModalClose.bind(this);\r\n    this.handleSuccessModalClose = this.handleSuccessModalClose.bind(this);\r\n  }\r\n\r\n  handleInitializeDB = async (event) => {\r\n    document.getElementById(\"initializeDBModal\").style.display = \"block\"\r\n    document.getElementById(\"initializeDBModal\").classList.add(\"show\")\r\n  };\r\n\r\n  handleModalClose = async (event) => {\r\n    document.getElementById(\"initializeDBModal\").style.display = \"none\"\r\n    document.getElementById(\"initializeDBModal\").classList.remove(\"show\");\r\n  };\r\n\r\n  handleModalContinue = async (event) => {\r\n    document.getElementById(\"initializeDBModal\").style.display = \"none\"\r\n    document.getElementById(\"initializeDBModal\").classList.remove(\"show\");\r\n    try {\r\n      console.log(\"Making DELETE request to /init endpoint.\");\r\n\r\n      const response = await fetch('/init', {\r\n        method: \"DELETE\",\r\n        headers: {\"Content-Type\": \"application/json\"},\r\n      });\r\n      const responseBody = await response.json();\r\n      // console.log(\"Response body:\", responseBody);\r\n\r\n      if (responseBody.success === true) {\r\n        console.log(\"Successfully reinitialized database.\");\r\n        document.getElementById(\"initializeDBSuccessModal\").style.display = \"block\"\r\n        document.getElementById(\"initializeDBSuccessModal\").classList.add(\"show\")\r\n      }\r\n      else {\r\n        throw new Error(\"Failed to reinitialize database\");\r\n      }\r\n    } \r\n    catch (error) {\r\n      console.log(\"Error occurred while making DELETE request to /init endpoint:\", error.message);\r\n      document.getElementById(\"initializeDBErrorModal\").style.display = \"block\"\r\n      document.getElementById(\"initializeDBErrorModal\").classList.add(\"show\")\r\n    }\r\n  };\r\n\r\n  handleErrorModalClose = async (event) => {\r\n    document.getElementById(\"initializeDBErrorModal\").style.display = \"none\"\r\n    document.getElementById(\"initializeDBErrorModal\").classList.remove(\"show\");\r\n  };\r\n\r\n  handleSuccessModalClose = async (event) => {\r\n    document.getElementById(\"initializeDBSuccessModal\").style.display = \"none\"\r\n    document.getElementById(\"initializeDBSuccessModal\").classList.remove(\"show\");\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"navbar-page-container\" >\r\n        <div className=\"modal fade\" id=\"initializeDBModal\" tabIndex=\"-1\" role=\"dialog\" aria-hidden=\"true\">\r\n          <div className=\"modal-dialog\" role=\"document\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header\">\r\n                <h5 className=\"modal-title\" >Warning</h5>\r\n              </div>\r\n              <div className=\"modal-body\">\r\n                Are you sure you want to continue? This will delete all current database data and reinitialize all relations in the database to their starting state with prepopulated data. This will take several seconds to complete.\r\n              </div>\r\n              <div className=\"modal-footer\">\r\n                <button type=\"button\" className=\"btn btn-primary\" onClick={this.handleModalClose} >Cancel</button>\r\n                <button type=\"button\" className=\"btn btn-primary\" onClick={this.handleModalContinue} >Continue</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"modal fade\" id=\"initializeDBErrorModal\" tabIndex=\"-1\" role=\"dialog\" aria-hidden=\"true\">\r\n          <div className=\"modal-dialog\" role=\"document\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header\">\r\n                <h5 className=\"modal-title\" id=\"exampleModalLabel\">Error Occurred</h5>\r\n              </div>\r\n              <div className=\"modal-body\">\r\n                Something went wrong with the request, system was not able to delete and recreate the database. <br />\r\n              </div>\r\n              <div className=\"modal-footer\">\r\n                <button type=\"button\" className=\"btn btn-primary\" onClick={this.handleErrorModalClose} >Close</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"modal fade\" id=\"initializeDBSuccessModal\" tabIndex=\"-1\" role=\"dialog\" aria-hidden=\"true\">\r\n          <div className=\"modal-dialog\" role=\"document\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header\">\r\n                <h5 className=\"modal-title\" >Success</h5>\r\n              </div>\r\n              <div className=\"modal-body\">\r\n                The database was successfully reset to its starting state with pre-populated data.\r\n              </div>\r\n              <div className=\"modal-footer\">\r\n                <button type=\"button\" className=\"btn btn-primary\" onClick={this.handleSuccessModalClose} >Close</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <nav className=\"navbar navbar-dark bg-dark navbar-expand-lg\">\r\n          <div className=\"container-fluid\">\r\n            <a className=\"navbar-brand mx-4\" href=\"/\">Airline HR Database System</a>\r\n            <button className=\"navbar-toggler collapsed\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\" >\r\n              <span className=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n\r\n            <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n              <ul className=\"navbar-nav\">\r\n                <li className=\"nav-item\">\r\n                  <a className=\"nav-link\" href=\"/employees/search\">Employees</a>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                  <a className=\"nav-link\" href=\"/jobs/search\">Jobs</a>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                  <a className=\"nav-link\" href=\"/department/search\">Departments</a>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                  <a className=\"nav-link\" href=\"/leave/search\">Leave</a>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                  <a className=\"nav-link\" href=\"/benefits/search\">Benefits</a>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                  <a className=\"nav-link\" href=\"/payroll/search\">Payroll</a>\r\n                </li>\r\n              </ul>\r\n              <ul className=\"navbar-nav ms-auto\">\r\n                <button type=\"button\" className=\"btn btn-outline-secondary\" onClick={this.handleInitializeDB} >Initialize DB</button>\r\n                <li className=\"nav-item\">\r\n                  <a className=\"nav-link\" target=\"_blank\" rel=\"noreferrer\" href=\"https://syedarizvi.com/team07.pdf\">PDF</a>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                  <a className=\"nav-link\" target=\"_blank\" rel=\"noreferrer\" href=\"https://www.youtube.com/watch?v=K2cJQ1I8Hcc\">Demo</a>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                  <a className=\"nav-link\" target=\"_blank\" rel=\"noreferrer\" href=\"https://github.com/SyedA5688/3380_airline_DB_system#3380_airline_system_project\">ReadME</a>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </nav>\r\n        <div className=\"page-container\" >\r\n          <Outlet />\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Navbar\r\n","import React, { Component } from 'react';\r\nimport { Outlet } from \"react-router-dom\";\r\nimport './sidePanels.css'\r\n\r\n\r\nclass EmployeeSidePanel extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"container-fluid\" >\r\n        <div className=\"row\">\r\n          <div className=\"col-3\" id=\"sidebar-wrapper\" >\r\n            <nav className=\"sidebar-nav\" align=\"center\" >\r\n              <ul className=\"sidebar-ul\" >\r\n                <li className=\"sidebar-li\" ><a href=\"/employees/search\" >Search All Employees</a></li>\r\n                <li className=\"sidebar-li\" ><a href=\"/employees/insert\" >Insert New Employee</a></li>\r\n                <li className=\"sidebar-li\" ><a href=\"/employees/get\" >Get Employee Details</a></li>\r\n                <li className=\"sidebar-li\" ><a href=\"/employees/update\" >Update Employee Information</a></li>\r\n                <li className=\"sidebar-li\" ><a href=\"/employees/delete\" >Delete an Employee</a></li>\r\n                <li className=\"sidebar-li\" ><a href=\"/employees/managers\" >Search All Managers</a></li>\r\n                <li className=\"sidebar-li\" ><a href=\"/employees/employeesUnderManagers\" >Search Manager Supervisees</a></li>\r\n              </ul>\r\n            </nav>\r\n          </div>\r\n          <div className=\"col-9\" >\r\n            <Outlet />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport default EmployeeSidePanel","import React, { Component } from 'react';\r\nimport './employeeForms.css'\r\n\r\n\r\nclass SearchAllForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      searchBy: 'all',\r\n      searchFirstName: '',\r\n      searchMiddleInitial: '',\r\n      searchLastName: '',\r\n      searchID: '',\r\n      searchTitle: '',\r\n      searchDepartment: '',\r\n      sort: 'id',\r\n      order: 'asc',\r\n      limit: 10,\r\n      page: 1,\r\n      showSQL: false,\r\n    };\r\n    \r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleClear = this.handleClear.bind(this);\r\n    this.toggleSQL = this.toggleSQL.bind(this);\r\n  }\r\n\r\n  toggleSQL = async(event) => {\r\n    if (this.state.queries) {\r\n      this.setState({\r\n        showSQL: !this.state.showSQL\r\n      });\r\n    }\r\n  }\r\n\r\n  handleChange = async (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n\r\n    if (event.target.name === \"searchBy\") {\r\n      this.setState({\r\n        searchFirstName: '',\r\n        searchMiddleInitial: '',\r\n        searchLastName: '',\r\n        searchID: '',\r\n        searchTitle: '',\r\n        searchDepartment: ''\r\n      });\r\n      this.handleClear();\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.listenForFormSubmission();\r\n  }\r\n\r\n  listenForFormSubmission() {\r\n    // Fetch HTML form we want to check and validate\r\n    const form = document.querySelector('#searchFormHTML');\r\n\r\n    // Add event listener for form submissions, prevent submission if input is invalid\r\n    form.addEventListener('submit', (event) => {\r\n      if (!form.checkValidity()) {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n      }\r\n      form.classList.add('was-validated');\r\n    }, false);\r\n  }\r\n\r\n  assertValidGETResponse(body) {\r\n    if (!(\"rows\" in body)) {\r\n      throw new Error(\"Something went wrong; GET Request to Database did not return results object.\");\r\n    }\r\n    else if (!Array.isArray(body.rows)) {\r\n      throw new Error(\"Something went wrong; GET Request to Database returned results object that is not recognized by webpage.\");\r\n    }\r\n  }\r\n\r\n  handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    // Event listener will recognize submit and validate input, along with providing feedback on form about user's input\r\n\r\n    let query = \"\";\r\n    switch(this.state.searchBy) {\r\n      case \"all\":\r\n        query = \"\";\r\n        break;\r\n      \r\n      case \"name\": {\r\n        query = \"\";\r\n        if (this.state.searchFirstName !== '') {\r\n          query += this.state.searchFirstName.trim();\r\n        }\r\n        if (this.state.searchMiddleInitial !== '') {\r\n          query += \" \" + this.state.searchMiddleInitial.trim();\r\n        }\r\n        if (this.state.searchLastName !== '') {\r\n          query += \" \" + this.state.searchLastName.trim();\r\n        }\r\n        query = query.trim();\r\n        break;\r\n      }\r\n\r\n      case \"id\":\r\n        query = this.state.searchID;\r\n        break;\r\n      \r\n      case \"title\":\r\n        query = this.state.searchTitle.trim();\r\n        break;\r\n      \r\n      case \"department\":\r\n        query = this.state.searchDepartment.trim();\r\n        break;\r\n      \r\n      default:\r\n        query = \"\";\r\n    }\r\n    \r\n    // Attempt GET request, catch and display any errors in popup modal\r\n    try {\r\n      // console.log(\"Making GET request to /employee API endpoint\")\r\n      const response = await fetch(`/employee?q=${query}&searchBy=${this.state.searchBy}&page=${this.state.page}&sort=${this.state.sort}&order=${this.state.order}&limit=${this.state.limit}`);\r\n      const body = await response.json();\r\n      // console.log(\"response body:\", body);\r\n\r\n      this.assertValidGETResponse(body);\r\n      this.setState({\r\n        returnedEmployees: body.rows,\r\n        queries: body.queries\r\n      });\r\n    }\r\n    catch (e) {\r\n      console.log(\"Error occurred while sending GET request to /employee endpoint,\", e);\r\n      document.getElementById(\"errorModal\").style.display = \"block\"\r\n      document.getElementById(\"errorModal\").classList.add(\"show\")\r\n    }\r\n\r\n    // Remove was-validated class from form to reset its appearance\r\n    const form = document.querySelector('#searchFormHTML');\r\n    form.classList.remove('was-validated');\r\n  };\r\n\r\n  closeModal = () => {\r\n    document.getElementById(\"errorModal\").style.display = \"none\"\r\n    document.getElementById(\"errorModal\").classList.remove(\"show\");\r\n  }\r\n\r\n  handleClear = async (event) => {\r\n    this.setState({\r\n      searchFirstName: '',\r\n      searchMiddleInitial: '',\r\n      searchLastName: '',\r\n      searchID: '',\r\n      searchTitle: '',\r\n      searchDepartment: '',\r\n      returnedEmployees: null,\r\n      queries: null,\r\n      showSQL: false\r\n    });\r\n\r\n    // Remove was-validated class from form to reset its appearance\r\n    const form = document.querySelector('#searchFormHTML');\r\n    form.classList.remove('was-validated');\r\n  }\r\n\r\n  SearchByInputElement(searchBy) {\r\n    if (searchBy === \"all\") {\r\n      return <div></div>\r\n    }\r\n    else if (searchBy === \"name\") {\r\n      return (\r\n        <div className=\"input-group\" >\r\n          <div className=\"input-group-prepend\">\r\n            <span className=\"input-group-text\" id=\"\">First, MI, Last</span>\r\n          </div>\r\n          <input type=\"text\" pattern=\"[A-Za-z ]+\" className=\"form-control\" id=\"inputSearchFirstName\" placeholder=\"John (Optional)\" name=\"searchFirstName\" value={this.state.searchFirstName} onChange={this.handleChange} />\r\n          <input type=\"text\" pattern=\"[A-Z]{1}\" className=\"form-control\" id=\"inputSearchMiddleInitial\" placeholder=\"M (Optional)\" name=\"searchMiddleInitial\" value={this.state.searchMiddleInitial} onChange={this.handleChange} />\r\n          <input type=\"text\" pattern=\"[A-Za-z ]+\" className=\"form-control\" id=\"inputSearchLastName\" placeholder=\"Doe (Optional)\" name=\"searchLastName\"  value={this.state.searchLastName} onChange={this.handleChange} />\r\n          <div className=\"invalid-feedback\">Please provide valid possible names (a-z, A-Z).</div>\r\n          <div className=\"valid-feedback\">Valid name.</div>\r\n        </div>\r\n      )\r\n    }\r\n    else if (searchBy === \"id\") {\r\n      return <div className=\"form-group\">\r\n        <input type=\"number\" min=\"1\" pattern=\"[0-9]+\"  className=\"form-control\" id=\"inputSearchID\" placeholder=\"(e.g. 1000003)\" name=\"searchID\" value={this.state.searchID} onChange={this.handleChange} required />\r\n        <div className=\"invalid-feedback\">Please provide a valid employee id number.</div>\r\n        <div className=\"valid-feedback\">Valid employee id number.</div>\r\n      </div>\r\n    }\r\n    else if (searchBy === \"title\") {\r\n      return <div className=\"form-group\">\r\n        <input type=\"text\" pattern=\"[A-Za-z0-9-_ ]+\"  className=\"form-control\" id=\"inputSearchTitle\" placeholder=\"(e.g. Pilot)\" name=\"searchTitle\" value={this.state.searchTitle} onChange={this.handleChange} required />\r\n        <div className=\"invalid-feedback\">Please provide a valid job title.</div>\r\n        <div className=\"valid-feedback\">Valid job title.</div>\r\n      </div>\r\n    }\r\n    else if (searchBy === \"department\") {\r\n      return <div className=\"form-group\">\r\n        <input type=\"text\" pattern=\"[A-Za-z0-9-_ ]+\" className=\"form-control\" id=\"inputSearchDepartment\" placeholder=\"(e.g. Flight Crew)\" name=\"searchDepartment\" value={this.state.searchDepartment} onChange={this.handleChange} required />\r\n        <div className=\"invalid-feedback\">Please provide a valid department name.</div>\r\n        <div className=\"valid-feedback\">Valid department name.</div>\r\n      </div>\r\n    }\r\n    else {\r\n      return <div></div>\r\n    }\r\n  } \r\n  \r\n  render() {\r\n    let searchByInputElement = this.SearchByInputElement(this.state.searchBy)\r\n    return (\r\n      <div className=\"container mt-5 px-5\">\r\n        {/* Error Modal popup, only shows up if React state is toggled by some error in try-catch of GET request */}\r\n        <div className=\"modal fade\" id=\"errorModal\" tabIndex=\"-1\" role=\"dialog\" aria-hidden=\"true\">\r\n          <div className=\"modal-dialog\" role=\"document\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header\">\r\n                <h5 className=\"modal-title\" id=\"exampleModalLabel\">Error Occurred</h5>\r\n              </div>\r\n              <div className=\"modal-body\">\r\n                Something went wrong while processing your database request, please try again later. <br />\r\n\r\n              </div>\r\n              <div className=\"modal-footer\">\r\n                <button type=\"button\" className=\"btn btn-primary\" onClick={this.closeModal} >Close</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <h3>Search Database for Employee(s)</h3>\r\n\r\n        <form className=\"border border-secondary mt-3 px-5 py-4 rounded needs-validation\" id=\"searchFormHTML\" onSubmit={this.handleSubmit} noValidate>\r\n\r\n          <div className=\"form-group mb-2\" >\r\n            <label className=\"sr-only\" htmlFor=\"inputSearchBy\">Search by:</label>\r\n            <select name=\"searchBy\" className=\"form-select \" id=\"inputSearchBy\" defaultValue=\"all\" onChange={this.handleChange}>\r\n              <option value=\"all\">Get All Employees</option>\r\n              <option value=\"name\">Name</option>\r\n              <option value=\"id\">Employee ID</option>\r\n              <option value=\"title\">Job Title</option>\r\n              <option value=\"department\">Department</option>\r\n            </select>\r\n          </div>\r\n          {searchByInputElement}\r\n            \r\n          <div className=\"form-group mt-2\" >\r\n            <label className=\"sr-only\" htmlFor=\"inputSortBy\">Sort by:</label>\r\n            <select name=\"sort\" className=\"form-select\" id=\"inputSortBy\" defaultValue=\"id\" onChange={this.handleChange}>\r\n              <option value=\"id\">Employee ID</option>\r\n              <option value=\"fname\">First Name</option>\r\n              <option value=\"lname\">Last Name</option>\r\n              <option value=\"title\">Job Title</option>\r\n              <option value=\"department\">Department</option>\r\n            </select>\r\n          </div>\r\n\r\n          <div className=\"form-group mt-2\" >\r\n            <label className=\"sr-only\" htmlFor=\"inputOrderBy\">Order:</label>\r\n            <select name=\"order\" className=\"form-select\" id=\"inputOrderBy\" defaultValue=\"asc\" onChange={this.handleChange}>\r\n              <option value=\"asc\">Ascending</option>\r\n              <option value=\"desc\">Descending</option>\r\n            </select>\r\n          </div>\r\n\r\n          <div className=\"input-group mt-3\" >\r\n            <div className=\"input-group-prepend\">\r\n              <span className=\"input-group-text\" id=\"\">Results per Page, Page Number</span>\r\n            </div>\r\n            <input type=\"number\" min=\"1\" className=\"form-control\" id=\"inputSearchLimit\" name=\"limit\" value={this.state.limit} onChange={this.handleChange} />\r\n            <input type=\"number\" min=\"1\" className=\"form-control\" id=\"inputSearchPage\" name=\"page\" value={this.state.page} onChange={this.handleChange} />\r\n          </div>\r\n\r\n          <button type=\"submit\" className=\"btn btn-outline-secondary mt-3\">Submit</button>\r\n          <button type=\"button\" className=\"btn btn-outline-secondary mt-3 mx-3\" onClick={this.handleClear} >Clear</button>\r\n        </form>\r\n\r\n        {this.state.returnedEmployees ? \r\n        <div>\r\n          <table align=\"center\" className=\"table mt-5 border\" >\r\n            <thead className=\"table-dark\">\r\n              <tr>\r\n                <th scope=\"col\">#</th>\r\n                <th scope=\"col\">First Name</th>\r\n                <th scope=\"col\">Last Name</th>\r\n                <th scope=\"col\">Middle Initial</th>\r\n                <th scope=\"col\">Employee ID</th>\r\n                <th scope=\"col\">Job Title</th>\r\n                <th scope=\"col\">Department Name</th>\r\n              </tr>\r\n            </thead>\r\n            {/* Add Employees in tbody through HTML injection in main.js */}\r\n            <tbody>\r\n              {this.state.returnedEmployees && this.state.returnedEmployees.map((employeeObj, index) => (\r\n                <tr key={employeeObj.employee_id}>\r\n                  <th scope=\"col\">{index}</th>\r\n                  <th scope=\"col\">{employeeObj.first_name}</th>\r\n                  <th scope=\"col\">{employeeObj.last_name}</th>\r\n                  <th scope=\"col\">{employeeObj.m_initial}</th>\r\n                  <th scope=\"col\">{employeeObj.employee_id}</th>\r\n                  <th scope=\"col\">{employeeObj.job_title}</th>\r\n                  <th scope=\"col\">{employeeObj.department_name}</th>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table> \r\n\r\n          <button type=\"button\" className=\"btn btn-outline-secondary mx-3 mb-3\" onClick={this.toggleSQL} >Toggle SQL</button>\r\n          {this.state.showSQL ? \r\n          <div className=\"mb-5\" >\r\n            {this.state.queries.map((queryText, index) => (\r\n              <span style={{whiteSpace: 'pre-wrap'}} key={index}>{queryText}<br/></span>\r\n            ))}\r\n          </div> : <div></div>}\r\n        </div> :\r\n        <div className=\"mb-5\"></div>}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchAllForm\r\n","import React, { Component } from 'react';\r\nimport './employeeForms.css'\r\n\r\n\r\nclass InsertForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      insertFirstName: '',\r\n      insertLastName: '',\r\n      insertGender: 'M',\r\n      insertDOB: '',\r\n      insertHourlyWage: '',\r\n      insertSSN: '',\r\n      insertMiddleInitial: '',\r\n      insertPhone: '',\r\n      insertEmail: '',\r\n      insertJobID: '',\r\n      insertManagerID: '',\r\n      insertAnnualBonus: '',\r\n      insertStreetAddress: '',\r\n      insertCity: '',\r\n      insertCountry: '',\r\n      insertZipCode: '',\r\n      insertState: '',\r\n      showSQL: false,\r\n    };\r\n    \r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleClear = this.handleClear.bind(this);\r\n    this.toggleSQL = this.toggleSQL.bind(this);\r\n  }\r\n\r\n  toggleSQL = async(event) => {\r\n    if (this.state.queries) {\r\n      this.setState({\r\n        showSQL: !this.state.showSQL\r\n      });\r\n    }\r\n  }\r\n\r\n  handleChange = async (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.listenForFormSubmission();\r\n  }\r\n\r\n  listenForFormSubmission() {\r\n    const form = document.querySelector('#insertFormHTML');\r\n\r\n    form.addEventListener('submit', (event) => {\r\n      if (!form.checkValidity()) {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n      }\r\n      form.classList.add('was-validated');\r\n    }, false);\r\n  }\r\n\r\n  assertValidDBResponse(body) {\r\n    if (!(\"rows\" in body)) {\r\n      throw new Error(\"Something went wrong; GET Request to Database did not return results object.\");\r\n    }\r\n    else if (!Array.isArray(body.rows)) {\r\n      throw new Error(\"Something went wrong; GET Request to Database returned results object that is not recognized by webpage.\");\r\n    }\r\n  }\r\n\r\n  handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      const body = { \r\n        first_name: this.state.insertFirstName, \r\n        last_name: this.state.insertLastName,\r\n        gender: this.state.insertGender,\r\n        dob: this.state.insertDOB,\r\n        hourly_wage: this.state.insertHourlyWage,\r\n        ssn: this.state.insertSSN,\r\n        m_initial: this.state.insertMiddleInitial,\r\n        phone: this.state.insertPhone,\r\n        email: this.state.insertEmail,\r\n        job_id: this.state.insertJobID,\r\n        manager_id: this.state.insertManagerID,\r\n        annual_bonus: this.state.insertAnnualBonus,\r\n        street_address: this.state.insertStreetAddress,\r\n        city: this.state.insertCity,\r\n        country: this.state.insertCountry,\r\n        zip_code: this.state.insertZipCode,\r\n        state: this.state.insertState,\r\n      };\r\n      // console.log(\"Sending inserting new employee POST request with:\", body);\r\n  \r\n      const response = await fetch(\"/employee\", {\r\n        method: \"POST\",\r\n        headers: {\"Content-Type\": \"application/json\"},\r\n        body: JSON.stringify(body)\r\n      });\r\n  \r\n      const responseBody = await response.json();\r\n      // console.log(responseBody);\r\n      this.assertValidDBResponse(responseBody);\r\n  \r\n      this.setState({\r\n        insertedEmployee: responseBody.rows,\r\n        queries: responseBody.queries\r\n      });\r\n    }\r\n    catch (err) {\r\n      console.log(\"Error occurred while sending Insert Employee POST request to server:\", err.message);\r\n      document.getElementById(\"errorModal\").style.display = \"block\"\r\n      document.getElementById(\"errorModal\").classList.add(\"show\")\r\n    }\r\n  };\r\n\r\n  closeModal = () => {\r\n    document.getElementById(\"errorModal\").style.display = \"none\"\r\n    document.getElementById(\"errorModal\").classList.remove(\"show\");\r\n  }\r\n\r\n  handleClear = async (event) => {\r\n    this.setState({\r\n      insertFirstName: '',\r\n      insertLastName: '',\r\n      insertGender: 'M',\r\n      insertDOB: '',\r\n      insertHourlyWage: '',\r\n      insertSSN: '',\r\n      insertMiddleInitial: '',\r\n      insertPhone: '',\r\n      insertEmail: '',\r\n      insertJobID: '',\r\n      insertManagerID: '',\r\n      insertAnnualBonus: '',\r\n      insertStreetAddress: '',\r\n      insertCity: '',\r\n      insertCountry: '',\r\n      insertZipCode: '',\r\n      insertState: '',\r\n      insertedEmployee: null,\r\n      queries: null,\r\n      showSQL: false\r\n    });\r\n\r\n    // Remove was-validated class from form to reset its appearance\r\n    const form = document.querySelector('#insertFormHTML');\r\n    form.classList.remove('was-validated');\r\n  }\r\n  \r\n  render() {\r\n    return (\r\n      <div className=\"container mt-5 px-5\">\r\n        <div className=\"modal fade\" id=\"errorModal\" tabIndex=\"-1\" role=\"dialog\" aria-hidden=\"true\">\r\n          <div className=\"modal-dialog\" role=\"document\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header\">\r\n                <h5 className=\"modal-title\" id=\"exampleModalLabel\">Error Occurred</h5>\r\n              </div>\r\n              <div className=\"modal-body\">\r\n                Something went wrong while processing your database request. Please try again and check your form inputs, especially Manager ID! <br />\r\n              </div>\r\n              <div className=\"modal-footer\">\r\n                <button type=\"button\" className=\"btn btn-primary\" onClick={this.closeModal} >Close</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <h3>Insert New Employee Into Database</h3>\r\n\r\n        <form className=\"border border-secondary mt-3 px-5 py-4 rounded needs-validation\" id=\"insertFormHTML\" onSubmit={this.handleSubmit} noValidate>\r\n\r\n          <div className=\"input-group\" >\r\n            <div className=\"input-group-prepend\">\r\n              <span className=\"input-group-text\" id=\"\">First*, MI, Last*</span>\r\n            </div>\r\n            <input type=\"text\" pattern=\"[A-Za-z ]+\" className=\"form-control\" id=\"inputEmployeeFirstName\" placeholder=\"John\" value={this.state.insertFirstName} name=\"insertFirstName\" onChange={this.handleChange} required />\r\n            <input type=\"text\" pattern=\"[A-Z]{0,1}\" className=\"form-control\" id=\"inputEmployeeMiddleInitial\" placeholder=\"M (Optional)\" value={this.state.insertMiddleInitial} name=\"insertMiddleInitial\" onChange={this.handleChange} />\r\n            <input type=\"text\" pattern=\"[A-Za-z ]+\" className=\"form-control\" id=\"inputEmployeeLastName\" placeholder=\"Doe\" value={this.state.insertLastName} name=\"insertLastName\" onChange={this.handleChange} required />\r\n            <div className=\"invalid-feedback\">Please provide valid possible names (a-z, A-Z).</div>\r\n          </div>\r\n\r\n          <div className=\"form-group mt-2\" >\r\n            <label className=\"sr-only\" htmlFor=\"inputEmployeeGender\">Gender*</label>\r\n            <select  className=\"form-select\" id=\"inputEmployeeGender\" value={this.state.insertGender} name=\"insertGender\" onChange={this.handleChange } required >\r\n              <option value=\"M\">Male</option>\r\n              <option value=\"F\">Female</option>\r\n              <option value=\"O\">Other</option>\r\n            </select>\r\n            <div className=\"invalid-feedback\">Please select a gender option.</div>\r\n          </div>\r\n          \r\n          <div className=\"form-group\">\r\n            <label className=\"sr-only\" htmlFor=\"inputEmployeeDOB\">Date of Birth*</label>\r\n            <input type=\"date\" className=\"form-control\" id=\"inputEmployeeDOB\" value={this.state.insertDOB} name=\"insertDOB\" onChange={this.handleChange} required />\r\n            <div className=\"invalid-feedback\">Please select your date of birth.</div>\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label className=\"sr-only\" htmlFor=\"inputEmployeeSSN\">Social Security Number</label>\r\n            <input type=\"text\" pattern=\"[0-9]*\" className=\"form-control\" id=\"inputEmployeeSSN\" placeholder=\"123456789 (Optional)\" value={this.state.insertSSN} name=\"insertSSN\" onChange={this.handleChange} />\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label className=\"sr-only\" htmlFor=\"inputEmployeeHourlyWage\">Hourly Wage*</label>\r\n            <input type=\"number\" step=\".01\" pattern=\"[0-9.]+\" className=\"form-control\" id=\"inputEmployeeHourlyWage\" placeholder=\"15.25\" value={this.state.insertHourlyWage} name=\"insertHourlyWage\" onChange={this.handleChange} required />\r\n            <div className=\"invalid-feedback\">Please provide valid hourly wage.</div>\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label className=\"sr-only\" htmlFor=\"inputEmployeeAnnualBonus\">Annual Bonus*</label>\r\n            <input type=\"number\" step=\"1\" pattern=\"[0-9]+\" className=\"form-control\" id=\"inputEmployeeAnnualBonus\" placeholder=\"20000\" value={this.state.insertAnnualBonus} name=\"insertAnnualBonus\" onChange={this.handleChange} required />\r\n            <div className=\"invalid-feedback\">Please provide valid annual bonus.</div>\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label className=\"sr-only\" htmlFor=\"inputEmployeePhone\">Phone</label>\r\n            <input type=\"text\" pattern=\"[0-9+]*\" className=\"form-control\" id=\"inputEmployeePhone\" placeholder=\"8321111111\" value={this.state.insertPhone} name=\"insertPhone\" onChange={this.handleChange} />\r\n            <div className=\"invalid-feedback\">Please provide valid phone number.</div>\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label className=\"sr-only\" htmlFor=\"inputEmployeeEmail\">Email</label>\r\n            <input type=\"email\" className=\"form-control\" id=\"inputEmployeeEmail\" placeholder=\"example@gmail.com\" value={this.state.insertEmail} name=\"insertEmail\" onChange={this.handleChange} />\r\n            <div className=\"invalid-feedback\">Please provide valid email.</div>\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label className=\"sr-only\" htmlFor=\"inputEmployeeJobID\">Job ID</label>\r\n            <input type=\"number\" step=\"1\"  pattern=\"[0-9]*\" className=\"form-control\" id=\"inputEmployeeJobID\" placeholder=\"1\" value={this.state.insertJobID} name=\"insertJobID\" onChange={this.handleChange} />\r\n            <div className=\"invalid-feedback\">Please provide valid job ID.</div>\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label className=\"sr-only\" htmlFor=\"inputEmployeeManagerID\">Manager ID</label>\r\n            <input type=\"number\" step=\"1\"  pattern=\"[0-9]*\" className=\"form-control\" id=\"inputEmployeeManagerID\" placeholder=\"1000000 (Must be an existing ID)\" value={this.state.insertManagerID} name=\"insertManagerID\" onChange={this.handleChange} />\r\n            <div className=\"invalid-feedback\">Please provide valid manager ID.</div>\r\n          </div>\r\n\r\n          <div className=\"input-group mt-2\" >\r\n            <div className=\"input-group-prepend\">\r\n              <span className=\"input-group-text\" id=\"\">Street Address*, City*</span>\r\n            </div>\r\n            <input type=\"text\" pattern=\"[A-Za-z0-9#-. ]+\" className=\"form-control\" id=\"inputEmployeeStreetAddress\" placeholder=\"12345 Some Street LN.\" value={this.state.insertStreetAddress} name=\"insertStreetAddress\" onChange={this.handleChange} required />\r\n            <input type=\"text\" pattern=\"[A-Za-z ]+\" className=\"form-control\" id=\"inputEmployeeCity\" placeholder=\"Houston\" value={this.state.insertCity} name=\"insertCity\" onChange={this.handleChange} required />\r\n            <div className=\"invalid-feedback\">Please provide valid street address and city.</div>\r\n          </div>\r\n\r\n          <div className=\"input-group mt-1\" >\r\n            <div className=\"input-group-prepend\">\r\n              <span className=\"input-group-text\" id=\"\">State, Zip Code</span>\r\n            </div>\r\n            <input type=\"text\" pattern=\"[A-Za-z ]*\" className=\"form-control\" id=\"inputEmployeeState\" placeholder=\"Texas\" value={this.state.insertState} name=\"insertState\" onChange={this.handleChange} />\r\n            <input type=\"text\"  pattern=\"[A-Za-z0-9]*\" className=\"form-control\" id=\"inputEmployeeZipCode\" placeholder=\"77777\" value={this.state.insertZipCode} name=\"insertZipCode\" onChange={this.handleChange} />\r\n            <div className=\"invalid-feedback\">Please provide valid state and zip code.</div>\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label className=\"sr-only\" htmlFor=\"inputEmployeeCountry\">Country*</label>\r\n            <input type=\"text\" pattern=\"[A-Za-z ]+\" className=\"form-control\" id=\"inputEmployeeCountry\" placeholder=\"United States\" value={this.state.insertCountry} name=\"insertCountry\" onChange={this.handleChange} required />\r\n            <div className=\"invalid-feedback\">Please provide valid country name.</div>\r\n          </div>\r\n\r\n          <button type=\"submit\" className=\"btn btn-outline-secondary mt-3\">Submit</button>\r\n          <button type=\"button\" className=\"btn btn-outline-secondary mt-3 mx-3\" onClick={this.handleClear} >Clear</button>\r\n        </form>\r\n\r\n        {this.state.insertedEmployee ? \r\n        <div>\r\n          <h3 className=\"mt-5 \">Inserted Employee</h3>\r\n          <table align=\"center\" className=\"table border mt-3 mb-5\" >\r\n            <thead className=\"table-dark\">\r\n              <tr>\r\n                <th scope=\"col\">First Name</th>\r\n                <th scope=\"col\">Last Name</th>\r\n                <th scope=\"col\">Middle Initial</th>\r\n                <th scope=\"col\">Employee ID</th>\r\n                <th scope=\"col\">Job Title</th>\r\n                <th scope=\"col\">Department Name</th>\r\n              </tr>\r\n            </thead>\r\n            {/* Add Employees in tbody through HTML injection in main.js */}\r\n            <tbody>\r\n              {this.state.insertedEmployee && this.state.insertedEmployee.map((employeeObj, index) => (\r\n                <tr key={employeeObj.employee_id}>\r\n                  <th scope=\"col\">{employeeObj.first_name}</th>\r\n                  <th scope=\"col\">{employeeObj.last_name}</th>\r\n                  <th scope=\"col\">{employeeObj.m_initial}</th>\r\n                  <th scope=\"col\">{employeeObj.employee_id}</th>\r\n                  <th scope=\"col\">{employeeObj.job_title}</th>\r\n                  <th scope=\"col\">{employeeObj.department_name}</th>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n\r\n          <button type=\"button\" className=\"btn btn-outline-secondary mx-3 mb-3\" onClick={this.toggleSQL} >Toggle SQL</button>\r\n          {this.state.showSQL ? \r\n          <div className=\"mb-5\" >\r\n            {this.state.queries.map((queryText, index) => (\r\n              <span style={{whiteSpace: 'pre-wrap'}} key={index}>{queryText}<br/></span>\r\n            ))}\r\n          </div> : <div></div>}\r\n        </div>:\r\n        <div></div>}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default InsertForm\r\n","import React, { Component } from 'react';\r\nimport './employeeForms.css'\r\n\r\n\r\nclass UpdateForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      editEmployeeID: '',\r\n      editFirstName: '',\r\n      editLastName: '',\r\n      editGender: '',\r\n      editDOB: '',\r\n      editHourlyWage: '',\r\n      editSSN: '',\r\n      editMiddleInitial: '',\r\n      editPhone: '',\r\n      editEmail: '',\r\n      editJobID: '',\r\n      editManagerID: '',\r\n      editAnnualBonus: '',\r\n      editStreetAddress: '',\r\n      editCity: '',\r\n      editCountry: '',\r\n      editZipCode: '',\r\n      editState: '',\r\n      showSQL: false,\r\n    };\r\n    \r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleClear = this.handleClear.bind(this);\r\n    this.toggleSQL = this.toggleSQL.bind(this);\r\n  }\r\n\r\n  toggleSQL = async(event) => {\r\n    if (this.state.queries) {\r\n      this.setState({\r\n        showSQL: !this.state.showSQL\r\n      });\r\n    }\r\n  }\r\n\r\n  handleChange = async (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.listenForFormSubmission();\r\n  }\r\n\r\n  listenForFormSubmission() {\r\n    const form = document.querySelector('#updateFormHTML');\r\n\r\n    form.addEventListener('submit', (event) => {\r\n      if (!form.checkValidity()) {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n      }\r\n      form.classList.add('was-validated');\r\n    }, false);\r\n  }\r\n\r\n  assertValidDBResponse(body) {\r\n    if (!(\"rows\" in body)) {\r\n      throw new Error(\"Something went wrong; GET Request to Database did not return results object.\");\r\n    }\r\n    else if (!Array.isArray(body.rows)) {\r\n      throw new Error(\"Something went wrong; GET Request to Database returned results object that is not recognized by webpage.\");\r\n    }\r\n  }\r\n\r\n  handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      let body = { \r\n        first_name: this.state.editFirstName, \r\n        last_name: this.state.editLastName,\r\n        gender: this.state.editGender,\r\n        dob: this.state.editDOB,\r\n        hourly_wage: this.state.editHourlyWage,\r\n        ssn: this.state.editSSN,\r\n        m_initial: this.state.editMiddleInitial,\r\n        phone: this.state.editPhone,\r\n        email: this.state.editEmail,\r\n        job_id: this.state.editJobID,\r\n        manager_id: this.state.editManagerID,\r\n        annual_bonus: this.state.editAnnualBonus,\r\n        street_address: this.state.editStreetAddress,\r\n        city: this.state.editCity,\r\n        country: this.state.editCountry,\r\n        zip_code: this.state.editZipCode,\r\n        state: this.state.editState,\r\n      };\r\n\r\n      for (let [key, value] of Object.entries(body)) {\r\n        // If value is empty string, then delete key-value pair from body object\r\n        if (value===\"\") {\r\n          delete body[key];\r\n        }\r\n      }\r\n      // console.log(\"Updating employee with \", body);\r\n  \r\n      const response = await fetch(`/employee/${this.state.editEmployeeID}`, {\r\n        method: \"PUT\",\r\n        headers: {\"Content-Type\": \"application/json\"},\r\n        body: JSON.stringify(body)\r\n      });\r\n      const responseBody = await response.json();\r\n\r\n      this.assertValidDBResponse(responseBody);\r\n\r\n      this.setState({\r\n        returnedEmployee: responseBody.rows,\r\n        queries: responseBody.queries\r\n      });\r\n\r\n      document.getElementById(\"successModal\").style.display = \"block\"\r\n      document.getElementById(\"successModal\").classList.add(\"show\")\r\n    }\r\n    catch (err) {\r\n      console.log(\"Error occurred while sending Update Employee POST request to server:\", err.message);\r\n      document.getElementById(\"errorModal\").style.display = \"block\"\r\n      document.getElementById(\"errorModal\").classList.add(\"show\")\r\n    }\r\n  };\r\n\r\n  closeModal = () => {\r\n    document.getElementById(\"errorModal\").style.display = \"none\"\r\n    document.getElementById(\"errorModal\").classList.remove(\"show\");\r\n  }\r\n\r\n  closeSuccessModal = () => {\r\n    document.getElementById(\"successModal\").style.display = \"none\"\r\n    document.getElementById(\"successModal\").classList.remove(\"show\");\r\n  }\r\n\r\n  handleClear = async (event) => {\r\n    this.setState({\r\n      editEmployeeID: '',\r\n      editFirstName: '',\r\n      editLastName: '',\r\n      editGender: '',\r\n      editDOB: '',\r\n      editHourlyWage: '',\r\n      editSSN: '',\r\n      editMiddleInitial: '',\r\n      editPhone: '',\r\n      editEmail: '',\r\n      editJobID: '',\r\n      editManagerID: '',\r\n      editAnnualBonus: '',\r\n      editStreetAddress: '',\r\n      editCity: '',\r\n      editCountry: '',\r\n      editZipCode: '',\r\n      editState: '',\r\n      returnedEmployee: null,\r\n      queries: null,\r\n      showSQL: false\r\n    });\r\n\r\n    // Remove was-validated class from form to reset its appearance\r\n    const form = document.querySelector('#updateFormHTML');\r\n    form.classList.remove('was-validated');\r\n  }\r\n  \r\n  render() {\r\n    return (\r\n      <div className=\"container mt-5 px-5\">\r\n        <div className=\"modal fade\" id=\"errorModal\" tabIndex=\"-1\" role=\"dialog\" aria-hidden=\"true\">\r\n          <div className=\"modal-dialog\" role=\"document\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header\">\r\n                <h5 className=\"modal-title\" id=\"exampleModalLabel\">Error Occurred</h5>\r\n              </div>\r\n              <div className=\"modal-body\">\r\n                Something went wrong while processing your database request, one of your inputs may have been invalid. Please check your inputs, especially manager ID! Contact airport database assistance if necessary. <br />\r\n              </div>\r\n              <div className=\"modal-footer\">\r\n                <button type=\"button\" className=\"btn btn-primary\" onClick={this.closeModal} >Close</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"modal fade\" id=\"successModal\" tabIndex=\"-1\" role=\"dialog\" aria-hidden=\"true\">\r\n          <div className=\"modal-dialog\" role=\"document\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header\">\r\n                <h5 className=\"modal-title\" >Success</h5>\r\n              </div>\r\n              { this.state.returnedEmployee ? <div className=\"modal-body\">\r\n                Employee with ID {this.state.returnedEmployee[0][\"employee_id\"]} was updated. <br />\r\n              </div> : <div></div>}\r\n              <div className=\"modal-footer\">\r\n                <button type=\"button\" className=\"btn btn-primary\" onClick={this.closeSuccessModal} >Close</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <h3>Update an Employee's Information</h3>\r\n\r\n        <form className=\"border border-secondary mt-3 px-5 py-4 rounded needs-validation\" id=\"updateFormHTML\" onSubmit={this.handleSubmit} noValidate>\r\n\r\n          <h5>Employee to Update</h5>\r\n          <div className=\"form-group\">\r\n            <label className=\"sr-only\" htmlFor=\"inputEmployeeEditID\">Employee ID</label>\r\n            <input type=\"number\" step=\"1\"  pattern=\"[0-9]+\" className=\"form-control\" id=\"inputEmployeeEditID\" placeholder=\"1000000\" value={this.state.editEmployeeID} name=\"editEmployeeID\" onChange={this.handleChange} required />\r\n            <div className=\"invalid-feedback\">Please provide valid Employee ID to edit.</div>\r\n          </div>\r\n\r\n          <h5 className=\"mt-3\" >Update Fields:</h5>\r\n          <small className=\"form-text text-muted\">Note: Only enter in fields that you want updated.</small>\r\n          <div className=\"input-group\" >\r\n            <div className=\"input-group-prepend\">\r\n              <span className=\"input-group-text\" id=\"\">First, MI, Last</span>\r\n            </div>\r\n            <input type=\"text\" pattern=\"[A-Za-z ]*\" className=\"form-control\" id=\"inputEmployeeFirstName\" placeholder=\"John\" value={this.state.editFirstName} name=\"editFirstName\" onChange={this.handleChange} />\r\n            <input type=\"text\" pattern=\"[A-Z]{0,1}\" className=\"form-control\" id=\"inputEmployeeMiddleInitial\" placeholder=\"M\" value={this.state.editMiddleInitial} name=\"editMiddleInitial\" onChange={this.handleChange} />\r\n            <input type=\"text\" pattern=\"[A-Za-z ]*\" className=\"form-control\" id=\"inputEmployeeLastName\" placeholder=\"Doe\" value={this.state.editLastName} name=\"editLastName\" onChange={this.handleChange} />\r\n            <div className=\"invalid-feedback\">Please provide valid possible names (a-z, A-Z).</div>\r\n          </div>\r\n\r\n          <div className=\"form-group mt-2\" >\r\n            <label className=\"sr-only\" htmlFor=\"inputEmployeeGender\">Gender</label>\r\n            <select  className=\"form-select\" id=\"inputEmployeeGender\" defaultValue=\"select\" name=\"editGender\" onChange={this.handleChange } >\r\n              <option disabled value=\"select\"> -- Select an option -- </option>\r\n              <option value=\"M\">Male</option>\r\n              <option value=\"F\">Female</option>\r\n              <option value=\"O\">Other</option>\r\n            </select>\r\n            <div className=\"invalid-feedback\">Please select a gender option.</div>\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label className=\"sr-only\" htmlFor=\"inputEmployeeDOB\">Date of Birth</label>\r\n            <input type=\"date\" className=\"form-control\" id=\"inputEmployeeDOB\" value={this.state.editDOB} name=\"editDOB\" onChange={this.handleChange} />\r\n            <div className=\"invalid-feedback\">Please select your date of birth.</div>\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label className=\"sr-only\" htmlFor=\"inputEmployeeSSN\">Social Security Number</label>\r\n            <input type=\"text\" pattern=\"[0-9]*\" className=\"form-control\" id=\"inputEmployeeSSN\" placeholder=\"123456789\" value={this.state.editSSN} name=\"editSSN\" onChange={this.handleChange} />\r\n          </div>\r\n\r\n          <div className=\"input-group mt-2\" >\r\n            <div className=\"input-group-prepend\">\r\n              <span className=\"input-group-text\" id=\"\">Hourly Wage, Annual Bonus</span>\r\n            </div>\r\n            <input type=\"number\" step=\".01\" pattern=\"[0-9.]*\" className=\"form-control\" id=\"inputEmployeeHourlyWage\" placeholder=\"15.25\" value={this.state.editHourlyWage} name=\"editHourlyWage\" onChange={this.handleChange} />\r\n            <input type=\"number\" step=\"1\" pattern=\"[0-9]*\" className=\"form-control\" id=\"inputEmployeeAnnualBonus\" placeholder=\"20000\" value={this.state.editAnnualBonus} name=\"editAnnualBonus\" onChange={this.handleChange} />\r\n            <div className=\"invalid-feedback\">Please provide valid hourly wage and/or annual bonus.</div>\r\n          </div>\r\n\r\n          <div className=\"input-group mt-2\" >\r\n            <div className=\"input-group-prepend\">\r\n              <span className=\"input-group-text\" id=\"\">Phone, Email</span>\r\n            </div>\r\n            <input type=\"text\" pattern=\"[0-9+]*\" className=\"form-control\" id=\"inputEmployeePhone\" placeholder=\"8321111111\" value={this.state.editPhone} name=\"editPhone\" onChange={this.handleChange} />\r\n            <input type=\"email\" className=\"form-control\" id=\"inputEmployeeEmail\" placeholder=\"example@gmail.com\" value={this.state.editEmail} name=\"editEmail\" onChange={this.handleChange} />\r\n            <div className=\"invalid-feedback\">Please provide valid phone and/or email.</div>\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label className=\"sr-only\" htmlFor=\"inputEmployeeJobID\">Job ID</label>\r\n            <input type=\"number\" step=\"1\"  pattern=\"[0-9]*\" className=\"form-control\" id=\"inputEmployeeJobID\" placeholder=\"1\" value={this.state.editJobID} name=\"editJobID\" onChange={this.handleChange} />\r\n            <div className=\"invalid-feedback\">Please provide valid job ID.</div>\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label className=\"sr-only\" htmlFor=\"inputEmployeeManagerID\">Manager ID</label>\r\n            <input type=\"number\" step=\"1\"  pattern=\"[0-9]*\" className=\"form-control\" id=\"inputEmployeeManagerID\" placeholder=\"1000000 (Must be an existing ID)\" value={this.state.editManagerID} name=\"editManagerID\" onChange={this.handleChange} />\r\n            <div className=\"invalid-feedback\">Please provide valid manager ID.</div>\r\n          </div>\r\n\r\n          <div className=\"input-group mt-2\" >\r\n            <div className=\"input-group-prepend\">\r\n              <span className=\"input-group-text\" id=\"\">Street Address, City</span>\r\n            </div>\r\n            <input type=\"text\" pattern=\"[A-Za-z0-9#-. ]*\" className=\"form-control\" id=\"inputEmployeeStreetAddress\" placeholder=\"12345 Some Street LN.\" value={this.state.editStreetAddress} name=\"editStreetAddress\" onChange={this.handleChange} />\r\n            <input type=\"text\" pattern=\"[A-Za-z ]*\" className=\"form-control\" id=\"inputEmployeeCity\" placeholder=\"Houston\" value={this.state.editCity} name=\"editCity\" onChange={this.handleChange} />\r\n            <div className=\"invalid-feedback\">Please provide valid street address and city.</div>\r\n          </div>\r\n\r\n          <div className=\"input-group mt-1\" >\r\n            <div className=\"input-group-prepend\">\r\n              <span className=\"input-group-text\" id=\"\">State, Zip Code</span>\r\n            </div>\r\n            <input type=\"text\" pattern=\"[A-Za-z ]*\" className=\"form-control\" id=\"inputEmployeeState\" placeholder=\"Texas\" value={this.state.editState} name=\"editState\" onChange={this.handleChange} />\r\n            <input type=\"text\"  pattern=\"[A-Za-z0-9]*\" className=\"form-control\" id=\"inputEmployeeZipCode\" placeholder=\"77777\" value={this.state.editZipCode} name=\"editZipCode\" onChange={this.handleChange} />\r\n            <div className=\"invalid-feedback\">Please provide valid state and zip code.</div>\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label className=\"sr-only\" htmlFor=\"inputEmployeeCountry\">Country</label>\r\n            <input type=\"text\" pattern=\"[A-Za-z ]*\" className=\"form-control\" id=\"inputEmployeeCountry\" placeholder=\"United States\" value={this.state.editCountry} name=\"editCountry\" onChange={this.handleChange} />\r\n            <div className=\"invalid-feedback\">Please provide valid country name.</div>\r\n          </div>\r\n\r\n          <button type=\"submit\" className=\"btn btn-outline-secondary mt-3\">Submit</button>\r\n          <button type=\"button\" className=\"btn btn-outline-secondary mt-3 mx-3\" onClick={this.handleClear} >Clear</button>\r\n        </form>\r\n\r\n        <button type=\"button\" className=\"btn btn-outline-secondary mt-3 mx-3 mb-3\" onClick={this.toggleSQL} >Toggle SQL</button>\r\n        {this.state.showSQL ? \r\n        <div className=\"mb-5\" >\r\n          {this.state.queries.map((queryText, index) => (\r\n            <span style={{whiteSpace: 'pre-wrap'}} key={index}>{queryText}<br/></span>\r\n          ))}\r\n        </div> : <div></div>}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UpdateForm\r\n","import React, { Component } from 'react';\r\nimport './employeeForms.css'\r\n\r\n\r\nclass GetForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      getID: '',\r\n      showFirstName: false,\r\n      showMInitial: false,\r\n      showLastName: false,\r\n      showID: false,\r\n      showDOB: false,\r\n      showSSN: false,\r\n      showGender: false,\r\n      showEmail: false,\r\n      showPhone: false,\r\n      showStreetAddress: false,\r\n      showCity: false,\r\n      showState: false,\r\n      showZipCode: false,\r\n      showCountry: false,\r\n      showJobTitle: false,\r\n      showDepartmentName: false,\r\n      showWeeklyHours: false,\r\n      showHourlyWage: false,\r\n      showAnnualBonus: false,\r\n      showBenefitsAmount: false,\r\n      showStockOptions: false,\r\n      showHealthInsuranceProvider: false,\r\n      showRetirementPlanNumber: false,\r\n      showSQL: false\r\n    };\r\n    \r\n    // Bad coupling if DB response changes names/details, but need to control which response attributes are shown\r\n    this.db_to_state = {\r\n      \"first_name\": \"showFirstName\",\r\n      \"m_initial\": \"showMInitial\",\r\n      \"last_name\": \"showLastName\",\r\n      \"employee_id\": \"showID\",\r\n      \"dob\": \"showDOB\",\r\n      \"ssn\": \"showSSN\",\r\n      \"gender\": \"showGender\",\r\n      \"email\": \"showEmail\",\r\n      \"phone\": \"showPhone\",\r\n      \"street_address\": \"showStreetAddress\",\r\n      \"city\": \"showCity\",\r\n      \"state\": \"showState\",\r\n      \"zip_code\": \"showZipCode\",\r\n      \"country\": \"showCountry\",\r\n      \"job_title\": \"showJobTitle\",\r\n      \"department_name\": \"showDepartmentName\",\r\n      \"weekly_hours\": \"showWeeklyHours\",\r\n      \"hourly_wage\": \"showHourlyWage\",\r\n      \"annual_bonus\": \"showAnnualBonus\",\r\n      \"amount\": \"showBenefitsAmount\",\r\n      \"stock_options\": \"showStockOptions\",\r\n      \"health_insurance_provider\": \"showHealthInsuranceProvider\",\r\n      \"retirement_plan\": \"showRetirementPlanNumber\"\r\n    }\r\n    \r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleClear = this.handleClear.bind(this);\r\n    this.toggleSQL = this.toggleSQL.bind(this);\r\n  }\r\n\r\n  toggleSQL = async(event) => {\r\n    if (this.state.queries) {\r\n      this.setState({\r\n        showSQL: !this.state.showSQL\r\n      });\r\n    }\r\n  }\r\n\r\n  handleChange = async (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.listenForFormSubmission();\r\n  }\r\n\r\n  listenForFormSubmission() {\r\n    const form = document.querySelector('#getFormHTML');\r\n\r\n    form.addEventListener('submit', (event) => {\r\n      if (!form.checkValidity()) {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n      }\r\n      form.classList.add('was-validated');\r\n    }, false);\r\n  }\r\n\r\n  assertValidDBResponse(body) {\r\n    if (!(\"rows\" in body)) {\r\n      throw new Error(\"Something went wrong; GET Request to Database did not return results object.\");\r\n    }\r\n    else if (!Array.isArray(body.rows)) {\r\n      throw new Error(\"Something went wrong; GET Request to Database returned results object that is not recognized by webpage.\");\r\n    }\r\n  }\r\n\r\n  handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    try {  \r\n      const response = await fetch(`/employee/${this.state.getID}`);  \r\n      const responseBody = await response.json();\r\n\r\n      this.assertValidDBResponse(responseBody);\r\n      // console.log(responseBody.rows);\r\n\r\n      this.setState({\r\n        returnedEmployee: responseBody.rows,\r\n        queries: responseBody.queries\r\n      });\r\n    }\r\n    catch (err) {\r\n      console.log(\"Error occurred while sending Get Employee GET request to server:\", err.message);\r\n      document.getElementById(\"errorModal\").style.display = \"block\"\r\n      document.getElementById(\"errorModal\").classList.add(\"show\")\r\n    }\r\n  };\r\n\r\n  closeModal = () => {\r\n    document.getElementById(\"errorModal\").style.display = \"none\"\r\n    document.getElementById(\"errorModal\").classList.remove(\"show\");\r\n  }\r\n\r\n  handleClear = async (event) => {\r\n    this.setState({\r\n      getID: '',\r\n      returnedEmployee: null,\r\n      queries: null,\r\n      showSQL: false\r\n    });\r\n\r\n    // Remove was-validated class from form to reset its appearance\r\n    const form = document.querySelector('#getFormHTML');\r\n    form.classList.remove('was-validated');\r\n  }\r\n\r\n  handleCheckboxChange = async (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.checked\r\n    });\r\n  };\r\n  \r\n  render() {\r\n    return (\r\n      <div className=\"container mt-5 px-5\">\r\n        <div className=\"modal fade\" id=\"errorModal\" tabIndex=\"-1\" role=\"dialog\" aria-hidden=\"true\">\r\n          <div className=\"modal-dialog\" role=\"document\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header\">\r\n                <h5 className=\"modal-title\" id=\"exampleModalLabel\">Error Occurred</h5>\r\n              </div>\r\n              <div className=\"modal-body\">\r\n                Something went wrong while processing your database request. Please try again or contact airport database assistance. <br />\r\n              </div>\r\n              <div className=\"modal-footer\">\r\n                <button type=\"button\" className=\"btn btn-primary\" onClick={this.closeModal} >Close</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <h3 className=\"mt-3\" >Get an Employee's Details</h3>\r\n\r\n        <form className=\"border border-secondary mt-3 px-5 py-4 rounded needs-validation\" id=\"getFormHTML\" onSubmit={this.handleSubmit} noValidate>\r\n          \r\n          <div className=\"form-group mb-3\">\r\n            <label className=\"sr-only\" htmlFor=\"getEmployeeID\">Employee ID</label>\r\n            <input type=\"number\" step=\"1\" min=\"0\" pattern=\"[0-9]+\" className=\"form-control\" id=\"getEmployeeID\" value={this.state.getID} name=\"getID\" onChange={this.handleChange} required />\r\n            <div className=\"invalid-feedback\">Please input a valid Employee ID.</div>\r\n          </div>\r\n\r\n          <div className=\"custom-control custom-checkbox\">\r\n            <input type=\"checkbox\" className=\"custom-control-input\" id=\"checkbox1\" name=\"showFirstName\" onChange={this.handleCheckboxChange} />\r\n            <label className=\"custom-control-label mx-2\" htmlFor=\"checkbox1\">First Name</label>\r\n          </div>\r\n\r\n          <div className=\"custom-control custom-checkbox\">\r\n            <input type=\"checkbox\" className=\"custom-control-input\" id=\"checkbox2\" name=\"showMInitial\" onChange={this.handleCheckboxChange} />\r\n            <label className=\"custom-control-label mx-2\" htmlFor=\"checkbox2\">Middle Initial</label>\r\n          </div>\r\n\r\n          <div className=\"custom-control custom-checkbox\">\r\n            <input type=\"checkbox\" className=\"custom-control-input\" id=\"checkbox3\" name=\"showLastName\" onChange={this.handleCheckboxChange} />\r\n            <label className=\"custom-control-label mx-2\" htmlFor=\"checkbox3\">Last Name</label>\r\n          </div>\r\n\r\n          <div className=\"custom-control custom-checkbox\">\r\n            <input type=\"checkbox\" className=\"custom-control-input\" id=\"checkbox4\" name=\"showID\" onChange={this.handleCheckboxChange} />\r\n            <label className=\"custom-control-label mx-2\" htmlFor=\"checkbox4\">Employee ID</label>\r\n          </div>\r\n\r\n          <div className=\"custom-control custom-checkbox\">\r\n            <input type=\"checkbox\" className=\"custom-control-input\" id=\"checkbox5\" name=\"showDOB\" onChange={this.handleCheckboxChange} />\r\n            <label className=\"custom-control-label mx-2\" htmlFor=\"checkbox5\">Date of Birth</label>\r\n          </div>\r\n\r\n          <div className=\"custom-control custom-checkbox\">\r\n            <input type=\"checkbox\" className=\"custom-control-input\" id=\"checkbox6\" name=\"showSSN\" onChange={this.handleCheckboxChange} />\r\n            <label className=\"custom-control-label mx-2\" htmlFor=\"checkbox6\">Social Security Number</label>\r\n          </div>\r\n\r\n          <div className=\"custom-control custom-checkbox\">\r\n            <input type=\"checkbox\" className=\"custom-control-input\" id=\"checkbox7\" name=\"showGender\" onChange={this.handleCheckboxChange} />\r\n            <label className=\"custom-control-label mx-2\" htmlFor=\"checkbox7\">Gender</label>\r\n          </div>\r\n\r\n          <div className=\"custom-control custom-checkbox\">\r\n            <input type=\"checkbox\" className=\"custom-control-input\" id=\"checkbox8\" name=\"showEmail\" onChange={this.handleCheckboxChange} />\r\n            <label className=\"custom-control-label mx-2\" htmlFor=\"checkbox8\">Email</label>\r\n          </div>\r\n\r\n          <div className=\"custom-control custom-checkbox\">\r\n            <input type=\"checkbox\" className=\"custom-control-input\" id=\"checkbox10\" name=\"showPhone\" onChange={this.handleCheckboxChange} />\r\n            <label className=\"custom-control-label mx-2\" htmlFor=\"checkbox10\">Phone</label>\r\n          </div>\r\n\r\n          <div className=\"custom-control custom-checkbox\">\r\n            <input type=\"checkbox\" className=\"custom-control-input\" id=\"checkbox11\" name=\"showStreetAddress\" onChange={this.handleCheckboxChange} />\r\n            <label className=\"custom-control-label mx-2\" htmlFor=\"checkbox11\">Street Address</label>\r\n          </div>\r\n\r\n          <div className=\"custom-control custom-checkbox\">\r\n            <input type=\"checkbox\" className=\"custom-control-input\" id=\"checkbox12\" name=\"showCity\" onChange={this.handleCheckboxChange} />\r\n            <label className=\"custom-control-label mx-2\" htmlFor=\"checkbox12\">City</label>\r\n          </div>\r\n\r\n          <div className=\"custom-control custom-checkbox\">\r\n            <input type=\"checkbox\" className=\"custom-control-input\" id=\"checkbox13\" name=\"showState\" onChange={this.handleCheckboxChange} />\r\n            <label className=\"custom-control-label mx-2\" htmlFor=\"checkbox13\">State</label>\r\n          </div>\r\n\r\n          <div className=\"custom-control custom-checkbox\">\r\n            <input type=\"checkbox\" className=\"custom-control-input\" id=\"checkbox14\" name=\"showZipCode\" onChange={this.handleCheckboxChange} />\r\n            <label className=\"custom-control-label mx-2\" htmlFor=\"checkbox14\">Zip Code</label>\r\n          </div>\r\n\r\n          <div className=\"custom-control custom-checkbox\">\r\n            <input type=\"checkbox\" className=\"custom-control-input\" id=\"checkbox15\" name=\"showCountry\" onChange={this.handleCheckboxChange} />\r\n            <label className=\"custom-control-label mx-2\" htmlFor=\"checkbox15\">Country</label>\r\n          </div>\r\n\r\n          <div className=\"custom-control custom-checkbox\">\r\n            <input type=\"checkbox\" className=\"custom-control-input\" id=\"checkbox16\" name=\"showJobTitle\" onChange={this.handleCheckboxChange} />\r\n            <label className=\"custom-control-label mx-2\" htmlFor=\"checkbox16\">Job Title</label>\r\n          </div>\r\n\r\n          <div className=\"custom-control custom-checkbox\">\r\n            <input type=\"checkbox\" className=\"custom-control-input\" id=\"checkbox17\" name=\"showDepartmentName\" onChange={this.handleCheckboxChange} />\r\n            <label className=\"custom-control-label mx-2\" htmlFor=\"checkbox17\">Department Name</label>\r\n          </div>\r\n\r\n          <div className=\"custom-control custom-checkbox\">\r\n            <input type=\"checkbox\" className=\"custom-control-input\" id=\"checkbox18\" name=\"showWeeklyHours\" onChange={this.handleCheckboxChange} />\r\n            <label className=\"custom-control-label mx-2\" htmlFor=\"checkbox18\">Weekly Hours</label>\r\n          </div>\r\n\r\n          <div className=\"custom-control custom-checkbox\">\r\n            <input type=\"checkbox\" className=\"custom-control-input\" id=\"checkbox19\" name=\"showHourlyWage\" onChange={this.handleCheckboxChange} />\r\n            <label className=\"custom-control-label mx-2\" htmlFor=\"checkbox19\">Hourly Wage</label>\r\n          </div>\r\n\r\n          <div className=\"custom-control custom-checkbox\">\r\n            <input type=\"checkbox\" className=\"custom-control-input\" id=\"checkbox20\" name=\"showAnnualBonus\" onChange={this.handleCheckboxChange} />\r\n            <label className=\"custom-control-label mx-2\" htmlFor=\"checkbox20\">Annual Bonus</label>\r\n          </div>\r\n\r\n          <div className=\"custom-control custom-checkbox\">\r\n            <input type=\"checkbox\" className=\"custom-control-input\" id=\"checkbox21\" name=\"showBenefitsAmount\" onChange={this.handleCheckboxChange} />\r\n            <label className=\"custom-control-label mx-2\" htmlFor=\"checkbox21\">Benefits Amount</label>\r\n          </div>\r\n\r\n          <div className=\"custom-control custom-checkbox\">\r\n            <input type=\"checkbox\" className=\"custom-control-input\" id=\"checkbox22\" name=\"showStockOptions\" onChange={this.handleCheckboxChange} />\r\n            <label className=\"custom-control-label mx-2\" htmlFor=\"checkbox22\">Stock Options</label>\r\n          </div>\r\n\r\n          <div className=\"custom-control custom-checkbox\">\r\n            <input type=\"checkbox\" className=\"custom-control-input\" id=\"checkbox23\" name=\"showHealthInsuranceProvider\" onChange={this.handleCheckboxChange} />\r\n            <label className=\"custom-control-label mx-2\" htmlFor=\"checkbox23\">Health Insurance Provider</label>\r\n          </div>\r\n\r\n          <div className=\"custom-control custom-checkbox\">\r\n            <input type=\"checkbox\" className=\"custom-control-input\" id=\"checkbox24\" name=\"showRetirementPlanNumber\" onChange={this.handleCheckboxChange} />\r\n            <label className=\"custom-control-label mx-2\" htmlFor=\"checkbox24\">Retirement Plan Number</label>\r\n          </div>\r\n\r\n          <button type=\"submit\" className=\"btn btn-outline-secondary mt-3\">Submit</button>\r\n          <button type=\"button\" className=\"btn btn-outline-secondary mt-3 mx-3\" onClick={this.handleClear} >Clear</button>\r\n        </form>\r\n\r\n        {this.state.returnedEmployee ? \r\n        <div>\r\n          <h3 className=\"mt-4\" >Employee Details:</h3>\r\n          <table align=\"center\" className=\"table mt-1 border\" >\r\n            <thead className=\"table-dark\">\r\n              <tr>\r\n                <th scope=\"col\">Employee Attribute</th>\r\n                <th scope=\"col\">Returned Value</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {this.state.returnedEmployee && this.state.returnedEmployee.rows > 0 && Object.keys(this.state.returnedEmployee[0]).map(responseKey => {\r\n                let elem = null;\r\n                if (this.state[this.db_to_state[responseKey]]) {\r\n                  elem = (<tr key={responseKey + \"_row_key\"}>\r\n                    <th scope=\"col\">{responseKey}</th>\r\n                    <th scope=\"col\">{this.state.returnedEmployee[0][responseKey]}</th>\r\n                  </tr>)\r\n                }\r\n                else {\r\n                  elem = null\r\n                }\r\n                return elem\r\n              })}\r\n            </tbody>\r\n          </table>\r\n\r\n          <button type=\"button\" className=\"btn btn-outline-secondary mx-3 mb-3\" onClick={this.toggleSQL} >Toggle SQL</button>\r\n          {this.state.showSQL ? \r\n          <div className=\"mb-5\" >\r\n            {this.state.queries.map((queryText, index) => (\r\n              <span style={{whiteSpace: 'pre-wrap'}} key={index}>{queryText}<br/></span>\r\n            ))}\r\n          </div> : <div></div>}\r\n        </div>:\r\n        <div></div>}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GetForm\r\n","import React, { Component } from 'react';\r\nimport './employeeForms.css'\r\n\r\n\r\nclass SearchManagersForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      searchBy: 'all',\r\n      searchID: '',\r\n      searchFirstName: '',\r\n      searchMiddleInitial: '',\r\n      searchLastName: '',\r\n      searchTitle: '',\r\n      searchDepartment: '',\r\n      page: 1,\r\n      sort: 'id',\r\n      order: 'asc',\r\n      limit: 10,\r\n      showSQL: false,\r\n    };\r\n    \r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleClear = this.handleClear.bind(this);\r\n    this.toggleSQL = this.toggleSQL.bind(this);\r\n  }\r\n\r\n  toggleSQL = async(event) => {\r\n    if (this.state.queries) {\r\n      this.setState({\r\n        showSQL: !this.state.showSQL\r\n      });\r\n    }\r\n  }\r\n\r\n  handleChange = async (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n\r\n    if (event.target.name === \"searchBy\") {\r\n      this.setState({\r\n        searchID: '',\r\n        searchFirstName: '',\r\n        searchMiddleInitial: '',\r\n        searchLastName: '',\r\n        searchTitle: '',\r\n        searchDepartment: '',\r\n      });\r\n      this.handleClear();\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.listenForFormSubmission();\r\n  }\r\n\r\n  listenForFormSubmission() {\r\n    const form = document.querySelector('#searchFormHTML');\r\n\r\n    form.addEventListener('submit', (event) => {\r\n      if (!form.checkValidity()) {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n      }\r\n      form.classList.add('was-validated');\r\n    }, false);\r\n  }\r\n\r\n  assertValidGETResponse(body) {\r\n    if (!(\"rows\" in body)) {\r\n      throw new Error(\"Something went wrong; GET Request to Database did not return results object.\");\r\n    }\r\n    else if (!Array.isArray(body.rows)) {\r\n      throw new Error(\"Something went wrong; GET Request to Database returned results object that is not recognized by webpage.\");\r\n    }\r\n  }\r\n\r\n  handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    \r\n    let query = \"\";\r\n    switch(this.state.searchBy) {\r\n      case \"all\":\r\n        query = \"\";\r\n        break;\r\n      \r\n      case \"id\":\r\n        query = this.state.searchID;\r\n        break;\r\n      \r\n      case \"name\": {\r\n        query = \"\";\r\n        if (this.state.searchFirstName !== '') {\r\n          query += this.state.searchFirstName.trim();\r\n        }\r\n        if (this.state.searchMiddleInitial !== '') {\r\n          query += \" \" + this.state.searchMiddleInitial.trim();\r\n        }\r\n        if (this.state.searchLastName !== '') {\r\n          query += \" \" + this.state.searchLastName.trim();\r\n        }\r\n        query = query.trim();\r\n        break;\r\n      }\r\n      \r\n      case \"title\":\r\n        query = this.state.searchTitle.trim();\r\n        break;\r\n      \r\n      case \"department\":\r\n        query = this.state.searchDepartment.trim();\r\n        break;\r\n      \r\n      default:\r\n        query = \"\";\r\n    }\r\n    // console.log(\"Sending query:\", query);\r\n    \r\n    try {\r\n      const response = await fetch(`/manager?q=${query}&searchBy=${this.state.searchBy}&page=${this.state.page}&sort=${this.state.sort}&order=${this.state.order}&limit=${this.state.limit}`);\r\n      const body = await response.json();\r\n      // console.log(\"Response Body:\", body);\r\n\r\n      this.assertValidGETResponse(body);\r\n      this.setState({\r\n        returnedManagers: body.rows,\r\n        queries: body.queries\r\n      });\r\n    }\r\n    catch (e) {\r\n      console.log(\"Error occurred while sending GET request to /manager endpoint,\", e);\r\n      document.getElementById(\"errorModal\").style.display = \"block\"\r\n      document.getElementById(\"errorModal\").classList.add(\"show\")\r\n    }\r\n\r\n    const form = document.querySelector('#searchFormHTML');\r\n    form.classList.remove('was-validated');\r\n  };\r\n\r\n  closeModal = () => {\r\n    document.getElementById(\"errorModal\").style.display = \"none\"\r\n    document.getElementById(\"errorModal\").classList.remove(\"show\");\r\n  }\r\n\r\n  handleClear = async (event) => {\r\n    this.setState({\r\n      searchID: '',\r\n      searchFirstName: '',\r\n      searchMiddleInitial: '',\r\n      searchLastName: '',\r\n      searchTitle: '',\r\n      searchDepartment: '',\r\n      returnedManagers: null,\r\n      queries: null,\r\n      showSQL: false\r\n    });\r\n\r\n    const form = document.querySelector('#searchFormHTML');\r\n    form.classList.remove('was-validated');\r\n  }\r\n\r\n  SearchByInputElement(searchBy) {\r\n    if (searchBy === \"all\") {\r\n      return <div></div>\r\n    }\r\n    else if (searchBy === \"name\") {\r\n      return (\r\n        <div className=\"input-group\" >\r\n          <div className=\"input-group-prepend\">\r\n            <span className=\"input-group-text\" id=\"\">First, MI, Last</span>\r\n          </div>\r\n          <input type=\"text\" pattern=\"[A-Za-z]*\" className=\"form-control\" id=\"inputSearchFirstName\" placeholder=\"John (Optional)\" name=\"searchFirstName\" value={this.state.searchFirstName} onChange={this.handleChange} />\r\n\r\n          <input type=\"text\" pattern=\"[A-Z]{1}\" className=\"form-control\" id=\"inputSearchMiddleInitial\" placeholder=\"M (Optional)\" name=\"searchMiddleInitial\" value={this.state.searchMiddleInitial} onChange={this.handleChange} />\r\n\r\n          <input type=\"text\" pattern=\"[A-Za-z]*\" className=\"form-control\" id=\"inputSearchLastName\" placeholder=\"Doe (Optional)\" name=\"searchLastName\"  value={this.state.searchLastName} onChange={this.handleChange} />\r\n          <div className=\"invalid-feedback\">Please provide valid possible names (a-z, A-Z).</div>\r\n          <div className=\"valid-feedback\">Valid name.</div>\r\n        </div>\r\n      )\r\n    }\r\n    else if (searchBy === \"id\") {\r\n      return <div className=\"form-group\">\r\n        <input type=\"number\" min=\"1\" step=\"1\" pattern=\"[0-9]+\"  className=\"form-control\" id=\"inputSearchID\" placeholder=\"(e.g. 1000003)\" name=\"searchID\" value={this.state.searchID} onChange={this.handleChange} required />\r\n        <div className=\"invalid-feedback\">Please provide a valid ID number.</div>\r\n        <div className=\"valid-feedback\">Valid ID number.</div>\r\n      </div>\r\n    }\r\n    else if (searchBy === \"title\") {\r\n      return <div className=\"form-group\">\r\n        <input type=\"text\" pattern=\"[A-Za-z0-9-_ ]+\"  className=\"form-control\" id=\"inputSearchTitle\" placeholder=\"(e.g. Pilot)\" name=\"searchTitle\" value={this.state.searchTitle} onChange={this.handleChange} required />\r\n        <div className=\"invalid-feedback\">Please provide a valid job title.</div>\r\n        <div className=\"valid-feedback\">Valid job title.</div>\r\n      </div>\r\n    }\r\n    else if (searchBy === \"department\") {\r\n      return <div className=\"form-group\">\r\n        <input type=\"text\" pattern=\"[A-Za-z0-9-_ ]+\" className=\"form-control\" id=\"inputSearchDepartment\" placeholder=\"(e.g. Flight Crew)\" name=\"searchDepartment\" value={this.state.searchDepartment} onChange={this.handleChange} required />\r\n        <div className=\"invalid-feedback\">Please provide a valid department name.</div>\r\n        <div className=\"valid-feedback\">Valid department name.</div>\r\n      </div>\r\n    }\r\n    else {\r\n      return <div></div>\r\n    }\r\n  } \r\n  \r\n  render() {\r\n    let searchByInputElement = this.SearchByInputElement(this.state.searchBy)\r\n    return (\r\n      <div className=\"container mt-5 px-5\">\r\n        <div className=\"modal fade\" id=\"errorModal\" tabIndex=\"-1\" role=\"dialog\" aria-hidden=\"true\">\r\n          <div className=\"modal-dialog\" role=\"document\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header\">\r\n                <h5 className=\"modal-title\" id=\"exampleModalLabel\">Error Occurred</h5>\r\n              </div>\r\n              <div className=\"modal-body\">\r\n                Something went wrong while processing your database request, please check your inputs, especially any ID numbers, these must be existing IDs in the database. Contact airline database assistance for further help. <br />\r\n\r\n              </div>\r\n              <div className=\"modal-footer\">\r\n                <button type=\"button\" className=\"btn btn-primary\" onClick={this.closeModal} >Close</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <h3>Search Database for Managers(s)</h3>\r\n\r\n        <form className=\"border border-secondary mt-3 px-5 py-4 rounded needs-validation\" id=\"searchFormHTML\" onSubmit={this.handleSubmit} noValidate>\r\n\r\n          <div className=\"form-group mb-2\" >\r\n            <label className=\"sr-only\" htmlFor=\"inputSearchBy\">Search by:</label>\r\n            <select name=\"searchBy\" className=\"form-select \" id=\"inputSearchBy\" defaultValue=\"all\" onChange={this.handleChange}>\r\n              <option value=\"all\">Get All Employees</option>\r\n              <option value=\"name\">Name</option>\r\n              <option value=\"id\">Manager ID</option>\r\n              <option value=\"title\">Job Title</option>\r\n              <option value=\"department\">Department</option>\r\n            </select>\r\n          </div>\r\n          {searchByInputElement}\r\n            \r\n          <div className=\"form-group mt-2\" >\r\n            <label className=\"sr-only\" htmlFor=\"inputSortBy\">Sort by:</label>\r\n            <select name=\"sort\" className=\"form-select\" id=\"inputSortBy\" defaultValue=\"id\" onChange={this.handleChange}>\r\n              <option value=\"id\">Manager ID</option>\r\n              <option value=\"fname\">First Name</option>\r\n              <option value=\"lname\">Last Name</option>\r\n              <option value=\"title\">Job Title</option>\r\n              <option value=\"department\">Department</option>\r\n            </select>\r\n          </div>\r\n\r\n          <div className=\"form-group mt-2\" >\r\n            <label className=\"sr-only\" htmlFor=\"inputOrderBy\">Order:</label>\r\n            <select name=\"order\" className=\"form-select\" id=\"inputOrderBy\" defaultValue=\"asc\" onChange={this.handleChange}>\r\n              <option value=\"asc\">Ascending</option>\r\n              <option value=\"desc\">Descending</option>\r\n            </select>\r\n          </div>\r\n\r\n          <div className=\"input-group mt-3\" >\r\n            <div className=\"input-group-prepend\">\r\n              <span className=\"input-group-text\" id=\"\">Results per Page, Page Number</span>\r\n            </div>\r\n            <input type=\"number\" min=\"1\" className=\"form-control\" id=\"inputSearchLimit\" name=\"limit\" value={this.state.limit} onChange={this.handleChange} />\r\n            <input type=\"number\" min=\"1\" className=\"form-control\" id=\"inputSearchPage\" name=\"page\" value={this.state.page} onChange={this.handleChange} />\r\n          </div>\r\n\r\n          <button type=\"submit\" className=\"btn btn-outline-secondary mt-3\">Submit</button>\r\n          <button type=\"button\" className=\"btn btn-outline-secondary mt-3 mx-3\" onClick={this.handleClear} >Clear</button>\r\n        </form>\r\n\r\n        {this.state.returnedManagers ? \r\n        <div>\r\n          <table align=\"center\" className=\"table mt-5 border\" >\r\n            <thead className=\"table-dark\">\r\n              <tr>\r\n                <th scope=\"col\">#</th>\r\n                <th scope=\"col\">Supervisee Count</th>\r\n                <th scope=\"col\">ID</th>\r\n                <th scope=\"col\">First Name</th>\r\n                <th scope=\"col\">Last name</th>\r\n                <th scope=\"col\">Job Title</th>\r\n                <th scope=\"col\">Department Name</th>\r\n              </tr>\r\n            </thead>\r\n            \r\n            <tbody>\r\n              {this.state.returnedManagers && this.state.returnedManagers.map((managerObj, index) => (\r\n                <tr key={managerObj.employee_id\t\t}>\r\n                  <th scope=\"col\">{index + 1}</th>\r\n                  <th scope=\"col\">{managerObj.count}</th>\r\n                  <th scope=\"col\">{managerObj.employee_id}</th>\r\n                  <th scope=\"col\">{managerObj.first_name}</th>\r\n                  <th scope=\"col\">{managerObj.last_name}</th>\r\n                  <th scope=\"col\">{managerObj.job_title}</th>\r\n                  <th scope=\"col\">{managerObj.department_name}</th>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table> \r\n\r\n          <button type=\"button\" className=\"btn btn-outline-secondary mx-3 mb-3\" onClick={this.toggleSQL} >Toggle SQL</button>\r\n          {this.state.showSQL ? \r\n          <div className=\"mb-5\" >\r\n            {this.state.queries.map((queryText, index) => (\r\n              <span style={{whiteSpace: 'pre-wrap'}} key={index}>{queryText}<br/></span>\r\n            ))}\r\n          </div> : <div></div>}\r\n        </div>:\r\n        <div></div>}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchManagersForm\r\n","import React, { Component } from 'react';\r\nimport './employeeForms.css'\r\n\r\n\r\nclass SearchEmployeesUnderManagerForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      managerID: '',\r\n      searchBy: 'all',\r\n      searchID: '',\r\n      searchFirstName: '',\r\n      searchMiddleInitial: '',\r\n      searchLastName: '',\r\n      searchTitle: '',\r\n      searchDepartment: '',\r\n      page: 1,\r\n      sort: 'id',\r\n      order: 'asc',\r\n      limit: 10,\r\n      showSQL: false,\r\n    };\r\n    \r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleClear = this.handleClear.bind(this);\r\n    this.toggleSQL = this.toggleSQL.bind(this);\r\n  }\r\n\r\n  toggleSQL = async(event) => {\r\n    if (this.state.queries) {\r\n      this.setState({\r\n        showSQL: !this.state.showSQL\r\n      });\r\n    }\r\n  }\r\n\r\n  handleChange = async (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n\r\n    if (event.target.name === \"searchBy\") {\r\n      this.setState({\r\n        searchID: '',\r\n        searchFirstName: '',\r\n        searchMiddleInitial: '',\r\n        searchLastName: '',\r\n        searchTitle: '',\r\n        searchDepartment: '',\r\n      });\r\n      this.handleClear();\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.listenForFormSubmission();\r\n  }\r\n\r\n  listenForFormSubmission() {\r\n    const form = document.querySelector('#searchFormHTML');\r\n\r\n    form.addEventListener('submit', (event) => {\r\n      if (!form.checkValidity()) {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n      }\r\n      form.classList.add('was-validated');\r\n    }, false);\r\n  }\r\n\r\n  assertValidGETResponse(body) {\r\n    if (!(\"rows\" in body)) {\r\n      throw new Error(\"Something went wrong; GET Request to Database did not return results object.\");\r\n    }\r\n    else if (!Array.isArray(body.rows)) {\r\n      throw new Error(\"Something went wrong; GET Request to Database returned results object that is not recognized by webpage.\");\r\n    }\r\n  }\r\n\r\n  handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    \r\n    let query = \"\";\r\n    switch(this.state.searchBy) {\r\n      case \"all\":\r\n        query = \"\";\r\n        break;\r\n      \r\n      case \"id\":\r\n        query = this.state.searchID;\r\n        break;\r\n      \r\n      case \"name\": {\r\n        query = \"\";\r\n        if (this.state.searchFirstName !== '') {\r\n          query += this.state.searchFirstName.trim();\r\n        }\r\n        if (this.state.searchMiddleInitial !== '') {\r\n          query += \" \" + this.state.searchMiddleInitial.trim();\r\n        }\r\n        if (this.state.searchLastName !== '') {\r\n          query += \" \" + this.state.searchLastName.trim();\r\n        }\r\n        query = query.trim();\r\n        break;\r\n      }\r\n      \r\n      case \"title\":\r\n        query = this.state.searchTitle.trim();\r\n        break;\r\n      \r\n      case \"department\":\r\n        query = this.state.searchDepartment.trim();\r\n        break;\r\n      \r\n      default:\r\n        query = \"\";\r\n    }\r\n    // console.log(\"Sending query:\", query);\r\n    \r\n    try {\r\n      // let querySearchStr = query === \"\" ? `searchBy=${this.state.searchBy}` : `q=${query}&searchBy=${this.state.searchBy}`\r\n      const response = await fetch(`/manager/${this.state.managerID}?q=${query}&searchBy=${this.state.searchBy}&page=${this.state.page}&sort=${this.state.sort}&order=${this.state.order}&limit=${this.state.limit}`);\r\n      const body = await response.json();\r\n      // console.log(\"Response Body:\", body);\r\n\r\n      this.assertValidGETResponse(body);\r\n      this.setState({\r\n        returnedEmployees: body.rows,\r\n        queries: body.queries\r\n      });\r\n    }\r\n    catch (e) {\r\n      console.log(\"Error occurred while sending GET request to /manager/:id endpoint,\", e);\r\n      document.getElementById(\"errorModal\").style.display = \"block\"\r\n      document.getElementById(\"errorModal\").classList.add(\"show\")\r\n    }\r\n\r\n    const form = document.querySelector('#searchFormHTML');\r\n    form.classList.remove('was-validated');\r\n  };\r\n\r\n  closeModal = () => {\r\n    document.getElementById(\"errorModal\").style.display = \"none\"\r\n    document.getElementById(\"errorModal\").classList.remove(\"show\");\r\n  }\r\n\r\n  handleClear = async (event) => {\r\n    this.setState({\r\n      managerID: '',\r\n      searchBy: 'all',\r\n      searchID: '',\r\n      searchFirstName: '',\r\n      searchMiddleInitial: '',\r\n      searchLastName: '',\r\n      searchTitle: '',\r\n      searchDepartment: '',\r\n      returnedEmployees: null,\r\n      queries: null,\r\n      showSQL: false\r\n    });\r\n\r\n    const form = document.querySelector('#searchFormHTML');\r\n    form.classList.remove('was-validated');\r\n  }\r\n\r\n  SearchByInputElement(searchBy) {\r\n    if (searchBy === \"all\") {\r\n      return <div></div>\r\n    }\r\n    else if (searchBy === \"name\") {\r\n      return (\r\n        <div className=\"input-group\" >\r\n          <div className=\"input-group-prepend\">\r\n            <span className=\"input-group-text\" id=\"\">First, MI, Last</span>\r\n          </div>\r\n          <input type=\"text\" pattern=\"[A-Za-z]*\" className=\"form-control\" id=\"inputSearchFirstName\" placeholder=\"John (Optional)\" name=\"searchFirstName\" value={this.state.searchFirstName} onChange={this.handleChange} />\r\n\r\n          <input type=\"text\" pattern=\"[A-Z]{1}\" className=\"form-control\" id=\"inputSearchMiddleInitial\" placeholder=\"M (Optional)\" name=\"searchMiddleInitial\" value={this.state.searchMiddleInitial} onChange={this.handleChange} />\r\n\r\n          <input type=\"text\" pattern=\"[A-Za-z]*\" className=\"form-control\" id=\"inputSearchLastName\" placeholder=\"Doe (Optional)\" name=\"searchLastName\"  value={this.state.searchLastName} onChange={this.handleChange} />\r\n          <div className=\"invalid-feedback\">Please provide valid possible names (a-z, A-Z).</div>\r\n          <div className=\"valid-feedback\">Valid name.</div>\r\n        </div>\r\n      )\r\n    }\r\n    else if (searchBy === \"id\") {\r\n      return <div className=\"form-group\">\r\n        <input type=\"number\" min=\"1\" step=\"1\" pattern=\"[0-9]+\"  className=\"form-control\" id=\"inputSearchID\" placeholder=\"(e.g. 1000003)\" name=\"searchID\" value={this.state.searchID} onChange={this.handleChange} required />\r\n        <div className=\"invalid-feedback\">Please provide a valid ID number.</div>\r\n        <div className=\"valid-feedback\">Valid ID number.</div>\r\n      </div>\r\n    }\r\n    else if (searchBy === \"title\") {\r\n      return <div className=\"form-group\">\r\n        <input type=\"text\" pattern=\"[A-Za-z0-9-_ ]+\"  className=\"form-control\" id=\"inputSearchTitle\" placeholder=\"(e.g. Pilot)\" name=\"searchTitle\" value={this.state.searchTitle} onChange={this.handleChange} required />\r\n        <div className=\"invalid-feedback\">Please provide a valid job title.</div>\r\n        <div className=\"valid-feedback\">Valid job title.</div>\r\n      </div>\r\n    }\r\n    else if (searchBy === \"department\") {\r\n      return <div className=\"form-group\">\r\n        <input type=\"text\" pattern=\"[A-Za-z0-9-_ ]+\" className=\"form-control\" id=\"inputSearchDepartment\" placeholder=\"(e.g. Flight Crew)\" name=\"searchDepartment\" value={this.state.searchDepartment} onChange={this.handleChange} required />\r\n        <div className=\"invalid-feedback\">Please provide a valid department name.</div>\r\n        <div className=\"valid-feedback\">Valid department name.</div>\r\n      </div>\r\n    }\r\n    else {\r\n      return <div></div>\r\n    }\r\n  } \r\n  \r\n  render() {\r\n    let searchByInputElement = this.SearchByInputElement(this.state.searchBy)\r\n    return (\r\n      <div className=\"container mt-5 px-5\">\r\n        <div className=\"modal fade\" id=\"errorModal\" tabIndex=\"-1\" role=\"dialog\" aria-hidden=\"true\">\r\n          <div className=\"modal-dialog\" role=\"document\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header\">\r\n                <h5 className=\"modal-title\" id=\"exampleModalLabel\">Error Occurred</h5>\r\n              </div>\r\n              <div className=\"modal-body\">\r\n                Something went wrong while processing your database request, please check your inputs, especially any ID numbers, these must be existing IDs in the database. Contact airline database assistance for further help. <br />\r\n\r\n              </div>\r\n              <div className=\"modal-footer\">\r\n                <button type=\"button\" className=\"btn btn-primary\" onClick={this.closeModal} >Close</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <h3>Search Database for Managers(s)</h3>\r\n\r\n        <form className=\"border border-secondary mt-3 px-5 py-4 rounded needs-validation\" id=\"searchFormHTML\" onSubmit={this.handleSubmit} noValidate>\r\n\r\n        <h5>Manager to Query Under:</h5>\r\n          <div className=\"form-group\">\r\n            <label className=\"sr-only\" htmlFor=\"inputManagerID\">Manager ID</label>\r\n            <input type=\"number\" step=\"1\" min=\"0\" pattern=\"[0-9]+\" className=\"form-control\" id=\"inputManagerID\" placeholder=\"(e.g. 1000000)\" value={this.state.managerID} name=\"managerID\" onChange={this.handleChange} required />\r\n            <div className=\"invalid-feedback\">Please provide valid existing Manager ID.</div>\r\n          </div>\r\n\r\n        <h5 className=\"mt-3\" >Sort Employees Options:</h5>\r\n          <div className=\"form-group mb-2\" >\r\n            <label className=\"sr-only\" htmlFor=\"inputSearchBy\">Search by:</label>\r\n            <select name=\"searchBy\" className=\"form-select \" id=\"inputSearchBy\" defaultValue=\"all\" onChange={this.handleChange}>\r\n              <option value=\"all\">Get All Employees</option>\r\n              <option value=\"name\">Name</option>\r\n              <option value=\"id\">Manager ID</option>\r\n              <option value=\"title\">Job Title</option>\r\n              <option value=\"department\">Department</option>\r\n            </select>\r\n          </div>\r\n          {searchByInputElement}\r\n            \r\n          <div className=\"form-group mt-2\" >\r\n            <label className=\"sr-only\" htmlFor=\"inputSortBy\">Sort by:</label>\r\n            <select name=\"sort\" className=\"form-select\" id=\"inputSortBy\" defaultValue=\"id\" onChange={this.handleChange}>\r\n              <option value=\"id\">Manager ID</option>\r\n              <option value=\"fname\">First Name</option>\r\n              <option value=\"lname\">Last Name</option>\r\n              <option value=\"title\">Job Title</option>\r\n              <option value=\"department\">Department</option>\r\n            </select>\r\n          </div>\r\n\r\n          <div className=\"form-group mt-2\" >\r\n            <label className=\"sr-only\" htmlFor=\"inputOrderBy\">Order:</label>\r\n            <select name=\"order\" className=\"form-select\" id=\"inputOrderBy\" defaultValue=\"asc\" onChange={this.handleChange}>\r\n              <option value=\"asc\">Ascending</option>\r\n              <option value=\"desc\">Descending</option>\r\n            </select>\r\n          </div>\r\n\r\n          <div className=\"input-group mt-3\" >\r\n            <div className=\"input-group-prepend\">\r\n              <span className=\"input-group-text\" id=\"\">Results per Page, Page Number</span>\r\n            </div>\r\n            <input type=\"number\" min=\"1\" className=\"form-control\" id=\"inputSearchLimit\" name=\"limit\" value={this.state.limit} onChange={this.handleChange} />\r\n            <input type=\"number\" min=\"1\" className=\"form-control\" id=\"inputSearchPage\" name=\"page\" value={this.state.page} onChange={this.handleChange} />\r\n          </div>\r\n\r\n          <button type=\"submit\" className=\"btn btn-outline-secondary mt-3\">Submit</button>\r\n          <button type=\"button\" className=\"btn btn-outline-secondary mt-3 mx-3\" onClick={this.handleClear} >Clear</button>\r\n        </form>\r\n\r\n        {this.state.returnedEmployees ? \r\n        <div>\r\n          <h3>Employees Under Manager:</h3>\r\n          <table align=\"center\" className=\"table mt-5 border\" >\r\n            <thead className=\"table-dark\">\r\n              <tr>\r\n                <th scope=\"col\">#</th>\r\n                <th scope=\"col\">First Name</th>\r\n                <th scope=\"col\">Last Name</th>\r\n                <th scope=\"col\">Middle Initial</th>\r\n                <th scope=\"col\">Employee ID</th>\r\n                <th scope=\"col\">Job Title</th>\r\n                <th scope=\"col\">Department Name</th>\r\n              </tr>\r\n            </thead>\r\n            \r\n            <tbody>\r\n            {this.state.returnedEmployees && this.state.returnedEmployees.map((employeeObj, index) => (\r\n                <tr key={employeeObj.employee_id}>\r\n                  <th scope=\"col\">{index}</th>\r\n                  <th scope=\"col\">{employeeObj.first_name}</th>\r\n                  <th scope=\"col\">{employeeObj.last_name}</th>\r\n                  <th scope=\"col\">{employeeObj.m_initial}</th>\r\n                  <th scope=\"col\">{employeeObj.employee_id}</th>\r\n                  <th scope=\"col\">{employeeObj.job_title}</th>\r\n                  <th scope=\"col\">{employeeObj.department_name}</th>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table> \r\n\r\n          <button type=\"button\" className=\"btn btn-outline-secondary mx-3 mb-3\" onClick={this.toggleSQL} >Toggle SQL</button>\r\n          {this.state.showSQL ? \r\n          <div className=\"mb-5\" >\r\n            {this.state.queries.map((queryText, index) => (\r\n              <span style={{whiteSpace: 'pre-wrap'}} key={index}>{queryText}<br/></span>\r\n            ))}\r\n          </div> : <div></div>}\r\n        </div>:\r\n        <div></div>}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchEmployeesUnderManagerForm\r\n","import React, { Component } from 'react';\r\nimport './employeeForms.css'\r\n\r\n\r\nclass DeleteEmployeeForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      id: '',\r\n      showSQL: false,\r\n    };\r\n    \r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleClear = this.handleClear.bind(this);\r\n    this.toggleSQL = this.toggleSQL.bind(this);\r\n  }\r\n\r\n  toggleSQL = async(event) => {\r\n    if (this.state.queries) {\r\n      this.setState({\r\n        showSQL: !this.state.showSQL\r\n      });\r\n    }\r\n  }\r\n\r\n  handleChange = async (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.listenForFormSubmission();\r\n  }\r\n\r\n  listenForFormSubmission() {\r\n    const form = document.querySelector('#deleteFormHTML');\r\n\r\n    form.addEventListener('submit', (event) => {\r\n      if (!form.checkValidity()) {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n      }\r\n      form.classList.add('was-validated');\r\n    }, false);\r\n  }\r\n\r\n  assertValidDBResponse(body) {\r\n    if (!(\"rowCount\" in body)) {\r\n      throw new Error(\"Something went wrong; DELETE Request to Database did not return results object.\");\r\n    }\r\n  }\r\n\r\n  handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      const response = await fetch(`/employee/${this.state.id}`, {\r\n        method: \"DELETE\",\r\n        headers: {\"Content-Type\": \"application/json\"}\r\n      });\r\n  \r\n      const responseBody = await response.json();\r\n      console.log(\"Response body:\", responseBody);\r\n      this.assertValidDBResponse(responseBody);\r\n      \r\n      if (responseBody[\"rowCount\"] === 1) {\r\n        this.setState({\r\n          deletedEmployee: responseBody,\r\n          queries: responseBody.queries\r\n        });\r\n        \r\n        document.getElementById(\"successModal\").style.display = \"block\"\r\n        document.getElementById(\"successModal\").classList.add(\"show\")\r\n      }\r\n      else {\r\n        document.getElementById(\"errorModal\").style.display = \"block\"\r\n        document.getElementById(\"errorModal\").classList.add(\"show\")\r\n      }\r\n    }\r\n    catch (err) {\r\n      console.log(\"Error occurred while sending create Department POST request to server:\", err.message);\r\n      document.getElementById(\"errorModal\").style.display = \"block\"\r\n      document.getElementById(\"errorModal\").classList.add(\"show\")\r\n    }\r\n  };\r\n\r\n  closeModal = () => {\r\n    document.getElementById(\"errorModal\").style.display = \"none\"\r\n    document.getElementById(\"errorModal\").classList.remove(\"show\");\r\n  }\r\n\r\n  closeSuccessModal = () => {\r\n    document.getElementById(\"successModal\").style.display = \"none\"\r\n    document.getElementById(\"successModal\").classList.remove(\"show\");\r\n  }\r\n\r\n  handleClear = async (event) => {\r\n    this.setState({\r\n      id: '',\r\n      deletedEmployee: null,\r\n      queries: null,\r\n      showSQL: false\r\n    });\r\n\r\n    const form = document.querySelector('#deleteFormHTML');\r\n    form.classList.remove('was-validated');\r\n  }\r\n  \r\n  render() {\r\n    return (\r\n      <div className=\"container mt-5 px-5\">\r\n        <div className=\"modal fade\" id=\"errorModal\" tabIndex=\"-1\" role=\"dialog\" aria-hidden=\"true\">\r\n          <div className=\"modal-dialog\" role=\"document\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header\">\r\n                <h5 className=\"modal-title\" id=\"exampleModalLabel\">Error Occurred</h5>\r\n              </div>\r\n              <div className=\"modal-body\">\r\n                Something went wrong while processing your database request. Please check that the inputted Employee ID exists in the database. Contact airport database assistance if further problems persist. <br />\r\n              </div>\r\n              <div className=\"modal-footer\">\r\n                <button type=\"button\" className=\"btn btn-primary\" onClick={this.closeModal} >Close</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"modal fade\" id=\"successModal\" tabIndex=\"-1\" role=\"dialog\" aria-hidden=\"true\">\r\n          <div className=\"modal-dialog\" role=\"document\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header\">\r\n                <h5 className=\"modal-title\" >Success</h5>\r\n              </div>\r\n              { this.state.deletedEmployee ? <div className=\"modal-body\">\r\n                Employee with ID {this.state.id} was deleted. <br />\r\n              </div> : <div></div>}\r\n              <div className=\"modal-footer\">\r\n                <button type=\"button\" className=\"btn btn-primary\" onClick={this.closeSuccessModal} >Close</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <h3>Delete an Employee</h3>\r\n        <form className=\"border border-secondary mt-3 px-5 py-4 rounded needs-validation\" id=\"deleteFormHTML\" onSubmit={this.handleSubmit} noValidate>\r\n\r\n          <div className=\"form-group\">\r\n            <label className=\"sr-only\" htmlFor=\"inputEmployeeID\">Employee ID</label>\r\n            <input type=\"number\" step=\"1\" min=\"0\" pattern=\"[0-9]+\" className=\"form-control\" id=\"inputEmployeeID\" placeholder=\"(e.g. 1000000)\" value={this.state.id} name=\"id\" onChange={this.handleChange} required />\r\n            <div className=\"invalid-feedback\">Please provide an existing employee ID.</div>\r\n          </div>\r\n\r\n          <button type=\"submit\" className=\"btn btn-outline-secondary mt-3\">Submit</button>\r\n          <button type=\"button\" className=\"btn btn-outline-secondary mt-3 mx-3\" onClick={this.handleClear} >Clear</button>\r\n        </form>\r\n\r\n        <button type=\"button\" className=\"btn btn-outline-secondary mt-3 mx-3 mb-3\" onClick={this.toggleSQL} >Toggle SQL</button>\r\n        {this.state.showSQL ? \r\n        <div className=\"mb-5\" >\r\n          {this.state.queries.map((queryText, index) => (\r\n            <span style={{whiteSpace: 'pre-wrap'}} key={index}>{queryText}<br/></span>\r\n          ))}\r\n        </div> : <div></div>}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DeleteEmployeeForm\r\n","import React, { Component } from 'react';\r\nimport { Outlet } from \"react-router-dom\";\r\nimport './sidePanels.css'\r\n\r\n\r\nclass JobsSidePanel extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"container-fluid\" >\r\n        <div className=\"row\">\r\n          <div className=\"col-3\" id=\"sidebar-wrapper\" >\r\n            <nav className=\"sidebar-nav\" align=\"center\" >\r\n              <ul className=\"sidebar-ul\" >\r\n                <li className=\"sidebar-li\"><a href=\"/jobs/search\" >Search All Jobs</a></li>\r\n                <li className=\"sidebar-li\"><a href=\"/jobs/create\" >Create New Job</a></li>\r\n                <li className=\"sidebar-li\"><a href=\"/jobs/update\" >Update Job Details</a></li>\r\n                <li className=\"sidebar-li\"><a href=\"/jobs/delete\" >Delete a Job</a></li>\r\n                <li className=\"sidebar-li\"><a href=\"/jobs/searchLocations\" >View All Job Locations</a></li>\r\n                <li className=\"sidebar-li\"><a href=\"/jobs/createLocation\" >Create a Job Location</a></li>\r\n              </ul>\r\n            </nav>\r\n          </div>\r\n          <div className=\"col-9\" >\r\n            <Outlet />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport default JobsSidePanel","import React, { Component } from 'react';\r\nimport './jobForms.css'\r\n\r\n\r\nclass SearchAllJobsForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      searchBy: 'all',\r\n      searchID: '',\r\n      searchJobTitle: '',\r\n      searchDepartment: '',\r\n      searchLocation: '',\r\n      page: 1,\r\n      sort: 'id',\r\n      order: 'asc',\r\n      limit: 10,\r\n      showSQL: false,\r\n    };\r\n    \r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleClear = this.handleClear.bind(this);\r\n    this.toggleSQL = this.toggleSQL.bind(this);\r\n  }\r\n\r\n  toggleSQL = async(event) => {\r\n    if (this.state.queries) {\r\n      this.setState({\r\n        showSQL: !this.state.showSQL\r\n      });\r\n    }\r\n  }\r\n\r\n  handleChange = async (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n\r\n    if (event.target.name === \"searchBy\") {\r\n      this.setState({\r\n        searchID: '',\r\n        searchJobTitle: '',\r\n        searchDepartment: '',\r\n        searchLocation: '',\r\n      });\r\n      this.handleClear();\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.listenForFormSubmission();\r\n  }\r\n\r\n  listenForFormSubmission() {\r\n    // Fetch HTML form we want to check and validate\r\n    const form = document.querySelector('#searchFormHTML');\r\n\r\n    // Add event listener for form submissions, prevent submission if input is invalid\r\n    form.addEventListener('submit', (event) => {\r\n      if (!form.checkValidity()) {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n      }\r\n      form.classList.add('was-validated');\r\n    }, false);\r\n  }\r\n\r\n  assertValidGETResponse(body) {\r\n    if (!(\"rows\" in body)) {\r\n      throw new Error(\"Something went wrong; GET Request to Database did not return results object.\");\r\n    }\r\n    else if (!Array.isArray(body.rows)) {\r\n      throw new Error(\"Something went wrong; GET Request to Database returned results object that is not recognized by webpage.\");\r\n    }\r\n  }\r\n\r\n  handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    \r\n    let query = \"\";\r\n    switch(this.state.searchBy) {\r\n      case \"all\":\r\n        query = \"\";\r\n        break;\r\n      \r\n      case \"id\": {\r\n        query = this.state.searchID;\r\n        break;\r\n      }\r\n\r\n      case \"title\":\r\n        query = this.state.searchJobTitle.trim();\r\n        break;\r\n      \r\n      case \"department\":\r\n        query = this.state.searchDepartment.trim();\r\n        break;\r\n        \r\n      case \"location\":\r\n        query = this.state.searchLocation.trim();\r\n        break;\r\n\r\n      default:\r\n        query = \"\";\r\n    }\r\n    \r\n    try {\r\n      const response = await fetch(`/job?q=${query}&searchBy=${this.state.searchBy}&page=${this.state.page}&sort=${this.state.sort}&order=${this.state.order}&limit=${this.state.limit}`);\r\n      const body = await response.json();\r\n      // console.log(\"Body rows:\", body.rows);\r\n\r\n      this.assertValidGETResponse(body);\r\n      this.setState({\r\n        returnedJobs: body.rows,\r\n        queries: body.queries\r\n      });\r\n    }\r\n    catch (e) {\r\n      console.log(\"Error occurred while sending GET request to /job endpoint,\", e);\r\n      document.getElementById(\"errorModal\").style.display = \"block\"\r\n      document.getElementById(\"errorModal\").classList.add(\"show\")\r\n    }\r\n\r\n    // Remove was-validated class from form to reset its appearance\r\n    const form = document.querySelector('#searchFormHTML');\r\n    form.classList.remove('was-validated');\r\n  };\r\n\r\n  closeModal = () => {\r\n    document.getElementById(\"errorModal\").style.display = \"none\"\r\n    document.getElementById(\"errorModal\").classList.remove(\"show\");\r\n  }\r\n\r\n  handleClear = async (event) => {\r\n    this.setState({\r\n      searchID: '',\r\n      searchJobTitle: '',\r\n      searchDepartment: '',\r\n      searchLocation: '',\r\n      returnedJobs: null,\r\n      queries: null,\r\n      showSQL: false\r\n    });\r\n\r\n    const form = document.querySelector('#searchFormHTML');\r\n    form.classList.remove('was-validated');\r\n  }\r\n\r\n  SearchByInputElement(searchBy) {\r\n    if (searchBy === \"all\") {\r\n      return <div></div>\r\n    }\r\n    else if (searchBy === \"id\") {\r\n      return (<div className=\"form-group\">\r\n      <input type=\"number\" min=\"0\" pattern=\"[0-9]+\"  className=\"form-control\" id=\"inputSearchID\" placeholder=\"0\" name=\"searchID\" value={this.state.searchID} onChange={this.handleChange} required />\r\n      <div className=\"invalid-feedback\">Please provide a valid employee id number.</div>\r\n      <div className=\"valid-feedback\">Valid employee id number.</div>\r\n    </div>\r\n      )\r\n    }\r\n    else if (searchBy === \"title\") {\r\n      return <div className=\"form-group\">\r\n        <input type=\"text\" pattern=\"[A-Za-z0-9-_ ]+\"  className=\"form-control\" id=\"inputSearchJobTitle\" placeholder=\"(e.g. Pilot)\" name=\"searchTitle\" value={this.state.searchJobTitle} onChange={this.handleChange} required />\r\n        <div className=\"invalid-feedback\">Please provide a valid job title.</div>\r\n        <div className=\"valid-feedback\">Valid job title.</div>\r\n      </div>\r\n    }\r\n    else if (searchBy === \"department\") {\r\n      return <div className=\"form-group\">\r\n      <input type=\"text\" pattern=\"[A-Za-z0-9 ]+\"  className=\"form-control\" id=\"inputDepartmentName\" placeholder=\"(e.g. Engineering)\" name=\"searchDepartment\" value={this.state.searchDepartment} onChange={this.handleChange} required />\r\n      <div className=\"invalid-feedback\">Please provide a valid job title.</div>\r\n      <div className=\"valid-feedback\">Valid job title.</div>\r\n    </div>\r\n    }\r\n    else if (searchBy === \"location\") {\r\n      return <div className=\"form-group\">\r\n        <input type=\"number\" min=\"0\" pattern=\"[0-9]+\"  className=\"form-control\" id=\"inputSearchLocation\" placeholder=\"(e.g. 0)\" name=\"searchLocation\" value={this.state.searchLocation} onChange={this.handleChange} required />\r\n        <div className=\"invalid-feedback\">Please provide a valid job location ID.</div>\r\n        <div className=\"valid-feedback\">Valid job location ID.</div>\r\n      </div>\r\n    }\r\n    else {\r\n      return <div></div>\r\n    }\r\n  } \r\n  \r\n  render() {\r\n    let searchByInputElement = this.SearchByInputElement(this.state.searchBy)\r\n    return (\r\n      <div className=\"container mt-5 px-5\">\r\n        <div className=\"modal fade\" id=\"errorModal\" tabIndex=\"-1\" role=\"dialog\" aria-hidden=\"true\">\r\n          <div className=\"modal-dialog\" role=\"document\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header\">\r\n                <h5 className=\"modal-title\" id=\"exampleModalLabel\">Error Occurred</h5>\r\n              </div>\r\n              <div className=\"modal-body\">\r\n                Something went wrong while processing your database request, please try again later. <br />\r\n\r\n              </div>\r\n              <div className=\"modal-footer\">\r\n                <button type=\"button\" className=\"btn btn-primary\" onClick={this.closeModal} >Close</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <h3>Search Database for Jobs</h3>\r\n\r\n        <form className=\"border border-secondary mt-3 px-5 py-4 rounded needs-validation\" id=\"searchFormHTML\" onSubmit={this.handleSubmit} noValidate>\r\n\r\n          <div className=\"form-group mb-2\" >\r\n            <label className=\"sr-only\" htmlFor=\"inputSearchBy\">Search by:</label>\r\n            <select name=\"searchBy\" className=\"form-select \" id=\"inputSearchBy\" defaultValue=\"all\" onChange={this.handleChange}>\r\n              <option value=\"all\">Get All Jobs</option>\r\n              <option value=\"id\">Job ID</option>\r\n              <option value=\"title\">Job Title</option>\r\n              <option value=\"department\">Department</option>\r\n              <option value=\"location\">Location</option>\r\n            </select>\r\n          </div>\r\n          {searchByInputElement}\r\n            \r\n          <div className=\"form-group mt-2\" >\r\n            <label className=\"sr-only\" htmlFor=\"inputSortBy\">Sort by:</label>\r\n            <select name=\"sort\" className=\"form-select\" id=\"inputSortBy\" defaultValue=\"id\" onChange={this.handleChange}>\r\n              <option value=\"id\">Job ID</option>\r\n              <option value=\"title\">Job Title</option>\r\n              <option value=\"department\">Job Department</option>\r\n              <option value=\"location\">Job Location</option>\r\n            </select>\r\n          </div>\r\n\r\n          <div className=\"form-group mt-2\" >\r\n            <label className=\"sr-only\" htmlFor=\"inputOrderBy\">Order:</label>\r\n            <select name=\"order\" className=\"form-select\" id=\"inputOrderBy\" defaultValue=\"asc\" onChange={this.handleChange}>\r\n              <option value=\"asc\">Ascending</option>\r\n              <option value=\"desc\">Descending</option>\r\n            </select>\r\n          </div>\r\n\r\n          <div className=\"input-group mt-3\" >\r\n            <div className=\"input-group-prepend\">\r\n              <span className=\"input-group-text\" id=\"\">Results per Page, Page Number</span>\r\n            </div>\r\n            <input type=\"number\" min=\"1\" className=\"form-control\" id=\"inputSearchLimit\" name=\"limit\" value={this.state.limit} onChange={this.handleChange} />\r\n            <input type=\"number\" min=\"1\" className=\"form-control\" id=\"inputSearchPage\" name=\"page\" value={this.state.page} onChange={this.handleChange} />\r\n          </div>\r\n\r\n          <button type=\"submit\" className=\"btn btn-outline-secondary mt-3\">Submit</button>\r\n          <button type=\"button\" className=\"btn btn-outline-secondary mt-3 mx-3\" onClick={this.handleClear} >Clear</button>\r\n        </form>\r\n\r\n        {this.state.returnedJobs ? \r\n        <div>\r\n          <table align=\"center\" className=\"table mt-5 border\" >\r\n            <thead className=\"table-dark\">\r\n              <tr>\r\n                <th scope=\"col\">#</th>\r\n                <th scope=\"col\">Job ID</th>\r\n                <th scope=\"col\">Job Title</th>\r\n                <th scope=\"col\">Department ID</th>\r\n                <th scope=\"col\">Department Name</th>\r\n                <th scope=\"col\">Location ID</th>\r\n                <th scope=\"col\">Weekly Hours</th>\r\n                <th scope=\"col\">Benefits Package ID</th>\r\n              </tr>\r\n            </thead>\r\n            \r\n            <tbody>\r\n              {this.state.returnedJobs && this.state.returnedJobs.map((jobObj, index) => (\r\n                <tr key={jobObj.job_id}>\r\n                  <th scope=\"col\">{index + 1}</th>\r\n                  <th scope=\"col\">{jobObj.job_id\t}</th>\r\n                  <th scope=\"col\">{jobObj.job_title\t}</th>\r\n                  <th scope=\"col\">{jobObj.department_id\t}</th>\r\n                  <th scope=\"col\">{jobObj.department_name\t}</th>\r\n                  <th scope=\"col\">{jobObj.location_id\t}</th>\r\n                  <th scope=\"col\">{jobObj.weekly_hours}</th>\r\n                  <th scope=\"col\">{jobObj.benefits_package_id}</th>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n\r\n          <button type=\"button\" className=\"btn btn-outline-secondary mx-3 mb-3\" onClick={this.toggleSQL} >Toggle SQL</button>\r\n          {this.state.showSQL ? \r\n          <div className=\"mb-5\" >\r\n            {this.state.queries.map((queryText, index) => (\r\n              <span style={{whiteSpace: 'pre-wrap'}} key={index}>{queryText}<br/></span>\r\n            ))}\r\n          </div> : <div></div>}\r\n        </div> :\r\n        <div></div>}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchAllJobsForm\r\n","import React, { Component } from 'react';\r\nimport './jobForms.css'\r\n\r\n\r\nclass InsertJobForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      insertJobTitle: '',\r\n      insertDepartmentID: '',\r\n      insertLocationID: '',\r\n      insertBenefitsPackageID: '',\r\n      insertWeeklyHours: '',\r\n      showSQL: false,\r\n    };\r\n    \r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleClear = this.handleClear.bind(this);\r\n    this.toggleSQL = this.toggleSQL.bind(this);\r\n  }\r\n\r\n  toggleSQL = async(event) => {\r\n    if (this.state.queries) {\r\n      this.setState({\r\n        showSQL: !this.state.showSQL\r\n      });\r\n    }\r\n  }\r\n\r\n  handleChange = async (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.listenForFormSubmission();\r\n  }\r\n\r\n  listenForFormSubmission() {\r\n    const form = document.querySelector('#insertFormHTML');\r\n\r\n    form.addEventListener('submit', (event) => {\r\n      if (!form.checkValidity()) {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n      }\r\n      form.classList.add('was-validated');\r\n    }, false);\r\n  }\r\n\r\n  assertValidDBResponse(body) {\r\n    if (!(\"rows\" in body)) {\r\n      throw new Error(\"Something went wrong; GET Request to Database did not return results object.\");\r\n    }\r\n    else if (!Array.isArray(body.rows)) {\r\n      throw new Error(\"Something went wrong; GET Request to Database returned results object that is not recognized by webpage.\");\r\n    }\r\n  }\r\n\r\n  handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      const body = { \r\n        job_title: this.state.insertJobTitle, \r\n        department_id: this.state.insertDepartmentID,\r\n        location_id: this.state.insertLocationID,\r\n        benefits_package_id: this.state.insertBenefitsPackageID,\r\n        weekly_hours: this.state.insertWeeklyHours\r\n      };\r\n      // console.log(\"Sending inserting new employee POST request with:\", body);\r\n  \r\n      const response = await fetch(\"/job\", {\r\n        method: \"POST\",\r\n        headers: {\"Content-Type\": \"application/json\"},\r\n        body: JSON.stringify(body)\r\n      });\r\n  \r\n      const responseBody = await response.json();\r\n      // console.log(responseBody);\r\n      this.assertValidDBResponse(responseBody);\r\n  \r\n      this.setState({\r\n        insertedJob: responseBody.rows,\r\n        queries: responseBody.queries\r\n      });\r\n    }\r\n    catch (err) {\r\n      console.log(\"Error occurred while sending Insert Employee POST request to server:\", err.message);\r\n      document.getElementById(\"errorModal\").style.display = \"block\"\r\n      document.getElementById(\"errorModal\").classList.add(\"show\")\r\n    }\r\n  };\r\n\r\n  closeModal = () => {\r\n    document.getElementById(\"errorModal\").style.display = \"none\"\r\n    document.getElementById(\"errorModal\").classList.remove(\"show\");\r\n  }\r\n\r\n  handleClear = async (event) => {\r\n    this.setState({\r\n      insertJobTitle: '',\r\n      insertDepartmentID: '',\r\n      insertLocationID: '',\r\n      insertBenefitsPackageID: '',\r\n      insertWeeklyHours: '',\r\n      insertedJob: null,\r\n      queries: null,\r\n      showSQL: false\r\n    });\r\n\r\n    // Remove was-validated class from form to reset its appearance\r\n    const form = document.querySelector('#insertFormHTML');\r\n    form.classList.remove('was-validated');\r\n  }\r\n  \r\n  render() {\r\n    return (\r\n      <div className=\"container mt-5 px-5\">\r\n        <div className=\"modal fade\" id=\"errorModal\" tabIndex=\"-1\" role=\"dialog\" aria-hidden=\"true\">\r\n          <div className=\"modal-dialog\" role=\"document\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header\">\r\n                <h5 className=\"modal-title\" id=\"exampleModalLabel\">Error Occurred</h5>\r\n              </div>\r\n              <div className=\"modal-body\">\r\n                Something went wrong while processing your database request. Please try again and check your form inputs, especially Manager ID! <br />\r\n              </div>\r\n              <div className=\"modal-footer\">\r\n                <button type=\"button\" className=\"btn btn-primary\" onClick={this.closeModal} >Close</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <h3>Insert New Employee Into Database</h3>\r\n\r\n        <form className=\"border border-secondary mt-3 px-5 py-4 rounded needs-validation\" id=\"insertFormHTML\" onSubmit={this.handleSubmit} noValidate>\r\n\r\n          <div className=\"form-group\">\r\n            <label className=\"sr-only\" htmlFor=\"inputJobTitle\">Job Title</label>\r\n            <input type=\"text\" pattern=\"[A-Za-z ]+\" className=\"form-control\" id=\"inputJobTitle\" placeholder=\"Pilot\" value={this.state.insertJobTitle} name=\"insertJobTitle\" onChange={this.handleChange} required />\r\n            <div className=\"invalid-feedback\">Please provide a valid job title.</div>\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label className=\"sr-only\" htmlFor=\"inputDepartmentID\">Department ID</label>\r\n            <input type=\"number\" step=\"1\"  pattern=\"[0-9]+\" className=\"form-control\" id=\"inputDepartmentID\" placeholder=\"0 (Must be an existing ID)\" value={this.state.insertDepartmentID} name=\"insertDepartmentID\" onChange={this.handleChange} required />\r\n            <div className=\"invalid-feedback\">Please provide a valid department ID.</div>\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label className=\"sr-only\" htmlFor=\"inputJobLocationID\">Location ID</label>\r\n            <input type=\"number\" step=\"1\"  pattern=\"[0-9]+\" className=\"form-control\" id=\"inputEmployeeManagerID\" placeholder=\"0 (Must be an existing ID)\" value={this.state.insertLocationID} name=\"insertLocationID\" onChange={this.handleChange} required />\r\n            <div className=\"invalid-feedback\">Please provide a valid location ID.</div>\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label className=\"sr-only\" htmlFor=\"inputJobBenefitsPackageID\">Benefits Package ID</label>\r\n            <input type=\"number\" step=\"1\"  pattern=\"[0-9]+\" className=\"form-control\" id=\"inputJobBenefitsPackageID\" placeholder=\"0 (Must be an existing ID)\" value={this.state.insertBenefitsPackageID} name=\"insertBenefitsPackageID\" onChange={this.handleChange} required />\r\n            <div className=\"invalid-feedback\">Please provide valid Benefits Package ID.</div>\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label className=\"sr-only\" htmlFor=\"inputJobWeeklyHours\">Weekly Hours (Optional)</label>\r\n            <input type=\"number\" step=\"1\"  pattern=\"[0-9]*\" className=\"form-control\" id=\"inputJobWeeklyHours\" placeholder=\"40\" value={this.state.insertWeeklyHours} name=\"insertWeeklyHours\" onChange={this.handleChange} />\r\n            <div className=\"invalid-feedback\">Please provide a valid weekly hours value.</div>\r\n          </div>\r\n\r\n          <button type=\"submit\" className=\"btn btn-outline-secondary mt-3\">Submit</button>\r\n          <button type=\"button\" className=\"btn btn-outline-secondary mt-3 mx-3\" onClick={this.handleClear} >Clear</button>\r\n        </form>\r\n\r\n        {this.state.insertedJob ? \r\n        <div>\r\n          <h3 className=\"mt-5 \">Inserted Job</h3>\r\n          <table align=\"center\" className=\"table border mt-3 mb-5\" >\r\n            <thead className=\"table-dark\">\r\n              <tr>\r\n                <th scope=\"col\">Job ID</th>\r\n                <th scope=\"col\">Job Title</th>\r\n                <th scope=\"col\">Department ID</th>\r\n                <th scope=\"col\">Department Name</th>\r\n                <th scope=\"col\">Location ID</th>\r\n                <th scope=\"col\">Weekly Hours</th>\r\n                <th scope=\"col\">Benefits Package ID</th>\r\n              </tr>\r\n            </thead>\r\n            \r\n            <tbody>\r\n              {this.state.insertedJob && this.state.insertedJob.map(jobObj => (\r\n                <tr key={jobObj.job_id}>\r\n                  <th scope=\"col\">{jobObj.job_id}</th>\r\n                  <th scope=\"col\">{jobObj.job_title}</th>\r\n                  <th scope=\"col\">{jobObj.department_id}</th>\r\n                  <th scope=\"col\">{jobObj.department_name}</th>\r\n                  <th scope=\"col\">{jobObj.location_id}</th>\r\n                  <th scope=\"col\">{jobObj.weekly_hours}</th>\r\n                  <th scope=\"col\">{jobObj.benefits_package_id}</th>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n\r\n          <button type=\"button\" className=\"btn btn-outline-secondary mx-3 mb-3\" onClick={this.toggleSQL} >Toggle SQL</button>\r\n          {this.state.showSQL ? \r\n          <div className=\"mb-5\" >\r\n            {this.state.queries.map((queryText, index) => (\r\n              <span style={{whiteSpace: 'pre-wrap'}} key={index}>{queryText}<br/></span>\r\n            ))}\r\n          </div> : <div></div>}\r\n        </div>:\r\n        <div></div>}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default InsertJobForm\r\n","import React, { Component } from 'react';\r\nimport './jobForms.css'\r\n\r\n\r\nclass UpdateJobForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      editJobID: '',\r\n      editJobTitle: '',\r\n      editDepartmentID: '',\r\n      editLocationID: '',\r\n      editBenefitsPackageID: '',\r\n      editWeeklyHours: '',\r\n      showSQL: false,\r\n    };\r\n    \r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleClear = this.handleClear.bind(this);\r\n    this.toggleSQL = this.toggleSQL.bind(this);\r\n  }\r\n\r\n  toggleSQL = async(event) => {\r\n    if (this.state.queries) {\r\n      this.setState({\r\n        showSQL: !this.state.showSQL\r\n      });\r\n    }\r\n  }\r\n\r\n  handleChange = async (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.listenForFormSubmission();\r\n  }\r\n\r\n  listenForFormSubmission() {\r\n    const form = document.querySelector('#updateFormHTML');\r\n\r\n    form.addEventListener('submit', (event) => {\r\n      if (!form.checkValidity()) {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n      }\r\n      form.classList.add('was-validated');\r\n    }, false);\r\n  }\r\n\r\n  assertValidDBResponse(body) {\r\n    if (!(\"rows\" in body)) {\r\n      throw new Error(\"Something went wrong; PUT Request to Database did not return results object.\");\r\n    }\r\n    else if (!Array.isArray(body.rows)) {\r\n      throw new Error(\"Something went wrong; PUT Request to Database returned results object that is not recognized by webpage.\");\r\n    }\r\n  }\r\n\r\n  handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      let body = { \r\n        job_title: this.state.editJobTitle, \r\n        department_id: this.state.editDepartmentID,\r\n        location_id: this.state.editLocationID,\r\n        benefits_package_id: this.state.editBenefitsPackageID,\r\n        weekly_hours: this.state.editWeeklyHours,\r\n      };\r\n\r\n      for (let [key, value] of Object.entries(body)) {\r\n        if (value===\"\") {\r\n          delete body[key];\r\n        }\r\n      }\r\n      // console.log(\"Updating job with \", body);\r\n  \r\n      const response = await fetch(`/job/${this.state.editJobID}`, {\r\n        method: \"PUT\",\r\n        headers: {\"Content-Type\": \"application/json\"},\r\n        body: JSON.stringify(body)\r\n      });\r\n      const responseBody = await response.json();\r\n\r\n      this.assertValidDBResponse(responseBody);\r\n\r\n      this.setState({\r\n        returnedJob: responseBody.rows,\r\n        queries: responseBody.queries\r\n      });\r\n\r\n      document.getElementById(\"successModal\").style.display = \"block\"\r\n      document.getElementById(\"successModal\").classList.add(\"show\")\r\n    }\r\n    catch (err) {\r\n      console.log(\"Error occurred while sending Update Employee POST request to server:\", err.message);\r\n      document.getElementById(\"errorModal\").style.display = \"block\"\r\n      document.getElementById(\"errorModal\").classList.add(\"show\")\r\n    }\r\n  };\r\n\r\n  closeModal = () => {\r\n    document.getElementById(\"errorModal\").style.display = \"none\"\r\n    document.getElementById(\"errorModal\").classList.remove(\"show\");\r\n  }\r\n\r\n  closeSuccessModal = () => {\r\n    document.getElementById(\"successModal\").style.display = \"none\"\r\n    document.getElementById(\"successModal\").classList.remove(\"show\");\r\n  }\r\n\r\n  handleClear = async (event) => {\r\n    this.setState({\r\n      editJobID: '',\r\n      editJobTitle: '',\r\n      editDepartmentID: '',\r\n      editLocationID: '',\r\n      editBenefitsPackageID: '',\r\n      editWeeklyHours: '',\r\n      returnedJob: null,\r\n      queries: null,\r\n      showSQL: false\r\n    });\r\n\r\n    // Remove was-validated class from form to reset its appearance\r\n    const form = document.querySelector('#updateFormHTML');\r\n    form.classList.remove('was-validated');\r\n  }\r\n  \r\n  render() {\r\n    return (\r\n      <div className=\"container mt-5 px-5\">\r\n        <div className=\"modal fade\" id=\"errorModal\" tabIndex=\"-1\" role=\"dialog\" aria-hidden=\"true\">\r\n          <div className=\"modal-dialog\" role=\"document\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header\">\r\n                <h5 className=\"modal-title\" id=\"exampleModalLabel\">Error Occurred</h5>\r\n              </div>\r\n              <div className=\"modal-body\">\r\n                Something went wrong while processing your database request, one of your inputs may have been invalid. Please check your inputs, especially inputted IDs! These need to be existing IDs in the database. Cross reference IDs by searching through other tables, and contact airport database assistance if necessary. <br />\r\n              </div>\r\n              <div className=\"modal-footer\">\r\n                <button type=\"button\" className=\"btn btn-primary\" onClick={this.closeModal} >Close</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"modal fade\" id=\"successModal\" tabIndex=\"-1\" role=\"dialog\" aria-hidden=\"true\">\r\n          <div className=\"modal-dialog\" role=\"document\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header\">\r\n                <h5 className=\"modal-title\" >Success</h5>\r\n              </div>\r\n              { this.state.returnedJob ? <div className=\"modal-body\">\r\n                Job with ID {this.state.returnedJob[0][\"job_id\"]} was updated. <br />\r\n              </div> : <div></div>}\r\n              <div className=\"modal-footer\">\r\n                <button type=\"button\" className=\"btn btn-primary\" onClick={this.closeSuccessModal} >Close</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <h3>Update an Job's Information</h3>\r\n\r\n        <form className=\"border border-secondary mt-3 px-5 py-4 rounded needs-validation\" id=\"updateFormHTML\" onSubmit={this.handleSubmit} noValidate>\r\n\r\n          <h5>Job to Update</h5>\r\n          <div className=\"form-group\">\r\n            <label className=\"sr-only\" htmlFor=\"inputJobID\">Job ID</label>\r\n            <input type=\"number\" step=\"1\" min=\"0\"  pattern=\"[0-9]+\" className=\"form-control\" id=\"inputJobID\" placeholder=\"0\" value={this.state.editJobID} name=\"editJobID\" onChange={this.handleChange} required />\r\n            <div className=\"invalid-feedback\">Please provide a valid Job ID to update.</div>\r\n          </div>\r\n\r\n          <h5 className=\"mt-3\" >Update Fields:</h5>\r\n          <small className=\"form-text text-muted\">Note: Only enter in fields that you want updated.</small>\r\n\r\n          <div className=\"form-group\">\r\n            <label className=\"sr-only\" htmlFor=\"inputJobTitle\">Job Title</label>\r\n            <input type=\"text\" pattern=\"[A-Za-z0-9-_ ]*\" className=\"form-control\" id=\"inputJobTitle\" placeholder=\"Copilot\" value={this.state.editJobTitle} name=\"editJobTitle\" onChange={this.handleChange} />\r\n            <div className=\"invalid-feedback\">Please provide a valid job title.</div>\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label className=\"sr-only\" htmlFor=\"inputDepartmentID\">Department ID</label>\r\n            <input type=\"number\" step=\"1\" min=\"0\"  pattern=\"[0-9]*\" className=\"form-control\" id=\"inputDepartmentID\" placeholder=\"0 (Needs to be an existing ID)\" value={this.state.editDepartmentID} name=\"editDepartmentID\" onChange={this.handleChange} />\r\n            <div className=\"invalid-feedback\">Please provide a valid department ID.</div>\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label className=\"sr-only\" htmlFor=\"inputLocationID\">Location ID</label>\r\n            <input type=\"number\" step=\"1\" min=\"0\"  pattern=\"[0-9]*\" className=\"form-control\" id=\"inputLocationID\" placeholder=\"0 (Needs to be an existing ID)\" value={this.state.editLocationID} name=\"editLocationID\" onChange={this.handleChange} />\r\n            <div className=\"invalid-feedback\">Please provide valid location ID.</div>\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label className=\"sr-only\" htmlFor=\"inputBenefitsPackageID\">Benefits Package ID</label>\r\n            <input type=\"number\" step=\"1\" min=\"0\"  pattern=\"[0-9]*\" className=\"form-control\" id=\"inputBenefitsPackageID\" placeholder=\"0 (Needs to be an existing ID)\" value={this.state.editBenefitsPackageID} name=\"editBenefitsPackageID\" onChange={this.handleChange} />\r\n            <div className=\"invalid-feedback\">Please provide valid benefits package ID.</div>\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label className=\"sr-only\" htmlFor=\"inputWeeklyHours\">Weekly Hours</label>\r\n            <input type=\"number\" step=\"1\" min=\"0\"  pattern=\"[0-9]*\" className=\"form-control\" id=\"inputWeeklyHours\" placeholder=\"0 (Needs to be an existing ID)\" value={this.state.editWeeklyHours} name=\"editWeeklyHours\" onChange={this.handleChange} />\r\n            <div className=\"invalid-feedback\">Please provide a valid weekly hours value.</div>\r\n          </div>\r\n\r\n          <button type=\"submit\" className=\"btn btn-outline-secondary mt-3\">Submit</button>\r\n          <button type=\"button\" className=\"btn btn-outline-secondary mt-3 mx-3\" onClick={this.handleClear} >Clear</button>\r\n          </form>\r\n\r\n          <button type=\"button\" className=\"btn btn-outline-secondary mt-3 mx-3 mb-3\" onClick={this.toggleSQL} >Toggle SQL</button>\r\n          {this.state.showSQL ? \r\n          <div className=\"mb-5\" >\r\n            {this.state.queries.map((queryText, index) => (\r\n              <span style={{whiteSpace: 'pre-wrap'}} key={index}>{queryText}<br/></span>\r\n            ))}\r\n          </div> : <div></div>}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UpdateJobForm\r\n","import React, { Component } from 'react';\r\nimport './jobForms.css'\r\n\r\n\r\nclass DeleteJobForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      id: '',\r\n      showSQL: false,\r\n    };\r\n    \r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleClear = this.handleClear.bind(this);\r\n    this.toggleSQL = this.toggleSQL.bind(this);\r\n  }\r\n\r\n  toggleSQL = async(event) => {\r\n    if (this.state.queries) {\r\n      this.setState({\r\n        showSQL: !this.state.showSQL\r\n      });\r\n    }\r\n  }\r\n\r\n  handleChange = async (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.listenForFormSubmission();\r\n  }\r\n\r\n  listenForFormSubmission() {\r\n    const form = document.querySelector('#deleteFormHTML');\r\n\r\n    form.addEventListener('submit', (event) => {\r\n      if (!form.checkValidity()) {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n      }\r\n      form.classList.add('was-validated');\r\n    }, false);\r\n  }\r\n\r\n  assertValidDBResponse(body) {\r\n    if (!(\"rowCount\" in body)) {\r\n      throw new Error(\"Something went wrong; DELETE Request to Database did not return results object.\");\r\n    }\r\n  }\r\n\r\n  handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      const response = await fetch(`/job/${this.state.id}`, {\r\n        method: \"DELETE\",\r\n        headers: {\"Content-Type\": \"application/json\"}\r\n      });\r\n  \r\n      const responseBody = await response.json();\r\n      // console.log(\"Response body:\", responseBody);\r\n      this.assertValidDBResponse(responseBody);\r\n      \r\n      if (responseBody[\"rowCount\"] === 1) {\r\n        this.setState({\r\n          deletedJob: responseBody,\r\n          queries: responseBody.queries\r\n        });\r\n        \r\n        document.getElementById(\"successModal\").style.display = \"block\"\r\n        document.getElementById(\"successModal\").classList.add(\"show\")\r\n      }\r\n      else {\r\n        document.getElementById(\"errorModal\").style.display = \"block\"\r\n        document.getElementById(\"errorModal\").classList.add(\"show\")\r\n      }\r\n    }\r\n    catch (err) {\r\n      console.log(\"Error occurred while sending create Department POST request to server:\", err.message);\r\n      document.getElementById(\"errorModal\").style.display = \"block\"\r\n      document.getElementById(\"errorModal\").classList.add(\"show\")\r\n    }\r\n  };\r\n\r\n  closeModal = () => {\r\n    document.getElementById(\"errorModal\").style.display = \"none\"\r\n    document.getElementById(\"errorModal\").classList.remove(\"show\");\r\n  }\r\n\r\n  closeSuccessModal = () => {\r\n    document.getElementById(\"successModal\").style.display = \"none\"\r\n    document.getElementById(\"successModal\").classList.remove(\"show\");\r\n  }\r\n\r\n  handleClear = async (event) => {\r\n    this.setState({\r\n      id: '',\r\n      deletedJob: null,\r\n      queries: null,\r\n      showSQL: false\r\n    });\r\n\r\n    const form = document.querySelector('#deleteFormHTML');\r\n    form.classList.remove('was-validated');\r\n  }\r\n  \r\n  render() {\r\n    return (\r\n      <div className=\"container mt-5 px-5\">\r\n        <div className=\"modal fade\" id=\"errorModal\" tabIndex=\"-1\" role=\"dialog\" aria-hidden=\"true\">\r\n          <div className=\"modal-dialog\" role=\"document\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header\">\r\n                <h5 className=\"modal-title\" id=\"exampleModalLabel\">Error Occurred</h5>\r\n              </div>\r\n              <div className=\"modal-body\">\r\n                Something went wrong while processing your database request. Please check that the inputted Job ID exists in the database. Contact airport database assistance if further problems persist. <br />\r\n              </div>\r\n              <div className=\"modal-footer\">\r\n                <button type=\"button\" className=\"btn btn-primary\" onClick={this.closeModal} >Close</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"modal fade\" id=\"successModal\" tabIndex=\"-1\" role=\"dialog\" aria-hidden=\"true\">\r\n          <div className=\"modal-dialog\" role=\"document\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header\">\r\n                <h5 className=\"modal-title\" >Success</h5>\r\n              </div>\r\n              { this.state.deletedJob ? <div className=\"modal-body\">\r\n                Job with ID {this.state.id} was deleted. <br />\r\n              </div> : <div></div>}\r\n              <div className=\"modal-footer\">\r\n                <button type=\"button\" className=\"btn btn-primary\" onClick={this.closeSuccessModal} >Close</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <h3>Delete a Job</h3>\r\n        <form className=\"border border-secondary mt-3 px-5 py-4 rounded needs-validation\" id=\"deleteFormHTML\" onSubmit={this.handleSubmit} noValidate>\r\n\r\n          <div className=\"form-group\">\r\n            <label className=\"sr-only\" htmlFor=\"inputJobID\">Job ID</label>\r\n            <input type=\"number\" step=\"1\" min=\"0\" pattern=\"[0-9]+\" className=\"form-control\" id=\"inputJobID\" placeholder=\"(e.g. 1)\" value={this.state.id} name=\"id\" onChange={this.handleChange} required />\r\n            <div className=\"invalid-feedback\">Please provide an existing job ID.</div>\r\n          </div>\r\n\r\n          <button type=\"submit\" className=\"btn btn-outline-secondary mt-3\">Submit</button>\r\n          <button type=\"button\" className=\"btn btn-outline-secondary mt-3 mx-3\" onClick={this.handleClear} >Clear</button>\r\n        </form>\r\n\r\n        <button type=\"button\" className=\"btn btn-outline-secondary mt-3 mx-3 mb-3\" onClick={this.toggleSQL} >Toggle SQL</button>\r\n        {this.state.showSQL ? \r\n        <div className=\"mb-5\" >\r\n          {this.state.queries.map((queryText, index) => (\r\n            <span style={{whiteSpace: 'pre-wrap'}} key={index}>{queryText}<br/></span>\r\n          ))}\r\n        </div> : <div></div>}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DeleteJobForm\r\n","import React, { Component } from 'react';\r\nimport './jobForms.css'\r\n\r\n\r\nclass SearchJobLocationsForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      showSQL: false,\r\n    };\r\n    \r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleClear = this.handleClear.bind(this);\r\n    this.toggleSQL = this.toggleSQL.bind(this);\r\n  }\r\n\r\n  toggleSQL = async(event) => {\r\n    if (this.state.queries) {\r\n      this.setState({\r\n        showSQL: !this.state.showSQL\r\n      });\r\n    }\r\n  }\r\n\r\n  handleChange = async (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.listenForFormSubmission();\r\n  }\r\n\r\n  listenForFormSubmission() {\r\n    const form = document.querySelector('#searchFormHTML');\r\n\r\n    form.addEventListener('submit', (event) => {\r\n      if (!form.checkValidity()) {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n      }\r\n      form.classList.add('was-validated');\r\n    }, false);\r\n  }\r\n\r\n  assertValidGETResponse(body) {\r\n    if (!(\"rows\" in body)) {\r\n      throw new Error(\"Something went wrong; GET Request to Database did not return results object.\");\r\n    }\r\n    else if (!Array.isArray(body.rows)) {\r\n      throw new Error(\"Something went wrong; GET Request to Database returned results object that is not recognized by webpage.\");\r\n    }\r\n  }\r\n\r\n  handleSubmit = async (event) => {\r\n    event.preventDefault();    \r\n    try {\r\n      const response = await fetch('/job/location');\r\n      const body = await response.json();\r\n      // console.log(\"Body rows:\", body.rows);\r\n\r\n      this.assertValidGETResponse(body);\r\n      this.setState({\r\n        returnedJobLocations: body.rows,\r\n        queries: body.queries\r\n      });\r\n    }\r\n    catch (e) {\r\n      console.log(\"Error occurred while sending GET request to /job/location endpoint,\", e);\r\n      document.getElementById(\"errorModal\").style.display = \"block\"\r\n      document.getElementById(\"errorModal\").classList.add(\"show\")\r\n    }\r\n\r\n    const form = document.querySelector('#searchFormHTML');\r\n    form.classList.remove('was-validated');\r\n  };\r\n\r\n  closeModal = () => {\r\n    document.getElementById(\"errorModal\").style.display = \"none\"\r\n    document.getElementById(\"errorModal\").classList.remove(\"show\");\r\n  }\r\n\r\n  handleClear = async (event) => {\r\n    this.setState({\r\n      returnedJobLocations: null,\r\n      queries: null,\r\n      showSQL: false\r\n    });\r\n\r\n    const form = document.querySelector('#searchFormHTML');\r\n    form.classList.remove('was-validated');\r\n  } \r\n  \r\n  render() {\r\n    return (\r\n      <div className=\"container mt-5 px-5\">\r\n        <div className=\"modal fade\" id=\"errorModal\" tabIndex=\"-1\" role=\"dialog\" aria-hidden=\"true\">\r\n          <div className=\"modal-dialog\" role=\"document\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header\">\r\n                <h5 className=\"modal-title\" id=\"exampleModalLabel\">Error Occurred</h5>\r\n              </div>\r\n              <div className=\"modal-body\">\r\n                Something went wrong while processing your database request, please try again later. <br />\r\n\r\n              </div>\r\n              <div className=\"modal-footer\">\r\n                <button type=\"button\" className=\"btn btn-primary\" onClick={this.closeModal} >Close</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <h3>View All Job Locations</h3>\r\n\r\n        <form className=\"border border-secondary mt-3 px-5 py-4 rounded needs-validation\" id=\"searchFormHTML\" onSubmit={this.handleSubmit} noValidate>\r\n          <button type=\"submit\" className=\"btn btn-outline-secondary mt-3\">Submit</button>\r\n          <button type=\"button\" className=\"btn btn-outline-secondary mt-3 mx-3\" onClick={this.handleClear} >Clear</button>\r\n        </form>\r\n\r\n        {this.state.returnedJobLocations ? \r\n        <div>\r\n          <table align=\"center\" className=\"table mt-5 border\" >\r\n            <thead className=\"table-dark\">\r\n              <tr>\r\n                <th scope=\"col\">#</th>\r\n                <th scope=\"col\">Location ID</th>\r\n                <th scope=\"col\">Address ID</th>\r\n                <th scope=\"col\">Location Name</th>\r\n                <th scope=\"col\">Airport ID</th>\r\n                <th scope=\"col\">Flight ID</th>\r\n              </tr>\r\n            </thead>\r\n            \r\n            <tbody>\r\n              {this.state.returnedJobLocations && this.state.returnedJobLocations.map((jobLocationObj, index) => (\r\n                <tr key={jobLocationObj.location_id}>\r\n                  <th scope=\"col\">{index + 1}</th>\r\n                  <th scope=\"col\">{jobLocationObj.location_id}</th>\r\n                  <th scope=\"col\">{jobLocationObj.address_id}</th>\r\n                  <th scope=\"col\">{jobLocationObj.location_name}</th>\r\n                  <th scope=\"col\">{jobLocationObj.airport_id}</th>\r\n                  <th scope=\"col\">{jobLocationObj.flight_id}</th>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table> \r\n\r\n          <button type=\"button\" className=\"btn btn-outline-secondary mx-3 mb-3\" onClick={this.toggleSQL} >Toggle SQL</button>\r\n          {this.state.showSQL ? \r\n          <div className=\"mb-5\" >\r\n            {this.state.queries.map((queryText, index) => (\r\n              <span style={{whiteSpace: 'pre-wrap'}} key={index}>{queryText}<br/></span>\r\n            ))}\r\n          </div> : <div></div>}\r\n        </div>:\r\n        <div></div>}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchJobLocationsForm\r\n","import React, { Component } from 'react';\r\nimport './jobForms.css'\r\n\r\n\r\nclass CreateJobLocationForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      address_id: '',\r\n      location_name: '',\r\n      airport_id: '',\r\n      flight_id: '',\r\n      showSQL: false,\r\n    };\r\n    \r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleClear = this.handleClear.bind(this);\r\n    this.toggleSQL = this.toggleSQL.bind(this);\r\n  }\r\n\r\n  toggleSQL = async(event) => {\r\n    if (this.state.queries) {\r\n      this.setState({\r\n        showSQL: !this.state.showSQL\r\n      });\r\n    }\r\n  }\r\n\r\n  handleChange = async (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.listenForFormSubmission();\r\n  }\r\n\r\n  listenForFormSubmission() {\r\n    const form = document.querySelector('#insertFormHTML');\r\n\r\n    form.addEventListener('submit', (event) => {\r\n      if (!form.checkValidity()) {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n      }\r\n      form.classList.add('was-validated');\r\n    }, false);\r\n  }\r\n\r\n  assertValidDBResponse(body) {\r\n    if (!(\"rows\" in body)) {\r\n      throw new Error(\"Something went wrong; POST Request to Database did not return results object.\");\r\n    }\r\n    else if (!Array.isArray(body.rows)) {\r\n      throw new Error(\"Something went wrong; POST Request to Database returned results object that is not recognized by webpage.\");\r\n    }\r\n  }\r\n\r\n  handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      const body = { \r\n        address_id: this.state.address_id, \r\n        location_name: this.state.location_name,\r\n        airport_id: this.state.airport_id,\r\n        flight_id: this.state.flight_id\r\n      };\r\n      // console.log(\"Sending insert new job location POST request with:\", body);\r\n  \r\n      const response = await fetch(\"/job/location \", {\r\n        method: \"POST\",\r\n        headers: {\"Content-Type\": \"application/json\"},\r\n        body: JSON.stringify(body)\r\n      });\r\n  \r\n      const responseBody = await response.json();\r\n      // console.log(responseBody);\r\n      this.assertValidDBResponse(responseBody);\r\n  \r\n      this.setState({\r\n        insertedJobLocation: responseBody.rows,\r\n        queries: responseBody.queries\r\n      });\r\n    }\r\n    catch (err) {\r\n      console.log(\"Error occurred while sending Insert Job Location POST request to server:\", err.message);\r\n      document.getElementById(\"errorModal\").style.display = \"block\"\r\n      document.getElementById(\"errorModal\").classList.add(\"show\")\r\n    }\r\n  };\r\n\r\n  closeModal = () => {\r\n    document.getElementById(\"errorModal\").style.display = \"none\"\r\n    document.getElementById(\"errorModal\").classList.remove(\"show\");\r\n  }\r\n\r\n  handleClear = async (event) => {\r\n    this.setState({\r\n      address_id: '',\r\n      location_name: '',\r\n      airport_id: '',\r\n      flight_id: '',\r\n      insertedJobLocation: null,\r\n      queries: null,\r\n      showSQL: false\r\n    });\r\n\r\n    // Remove was-validated class from form to reset its appearance\r\n    const form = document.querySelector('#insertFormHTML');\r\n    form.classList.remove('was-validated');\r\n  }\r\n  \r\n  render() {\r\n    return (\r\n      <div className=\"container mt-5 px-5\">\r\n        <div className=\"modal fade\" id=\"errorModal\" tabIndex=\"-1\" role=\"dialog\" aria-hidden=\"true\">\r\n          <div className=\"modal-dialog\" role=\"document\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header\">\r\n                <h5 className=\"modal-title\" id=\"exampleModalLabel\">Error Occurred</h5>\r\n              </div>\r\n              <div className=\"modal-body\">\r\n                Something went wrong while processing your database request. Please try again and check your form inputs, especially inputted IDs! <br />\r\n              </div>\r\n              <div className=\"modal-footer\">\r\n                <button type=\"button\" className=\"btn btn-primary\" onClick={this.closeModal} >Close</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <h3>Create New Job Location</h3>\r\n\r\n        <form className=\"border border-secondary mt-3 px-5 py-4 rounded needs-validation\" id=\"insertFormHTML\" onSubmit={this.handleSubmit} noValidate>\r\n\r\n          <div className=\"form-group\">\r\n            <label className=\"sr-only\" htmlFor=\"inputOfficeAddressID\">Office Address ID</label>\r\n            <input type=\"number\" step=\"1\"  pattern=\"[0-9]+\" className=\"form-control\" id=\"inputOfficeAddressID\" placeholder=\"0 (Must be an existing ID)\" value={this.state.address_id} name=\"address_id\" onChange={this.handleChange} required />\r\n            <div className=\"invalid-feedback\">Please provide a valid office address ID.</div>\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label className=\"sr-only\" htmlFor=\"inputJobLocationName\">Job Location Name</label>\r\n            <input type=\"text\" pattern=\"[A-Za-z ]+\" className=\"form-control\" id=\"inputJobLocationName\" placeholder=\"(e.g. New York Office)\" value={this.state.location_name} name=\"location_name\" onChange={this.handleChange} required />\r\n            <div className=\"invalid-feedback\">Please provide a valid job location name.</div>\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label className=\"sr-only\" htmlFor=\"inputAirportID\">Airport ID</label>\r\n            <input type=\"number\" step=\"1\" min=\"0\" pattern=\"[0-9]*\" className=\"form-control\" id=\"inputAirportID\" placeholder=\"0 (Must be an existing ID)\" value={this.state.airport_id} name=\"airport_id\" onChange={this.handleChange}  />\r\n            <div className=\"invalid-feedback\">Please provide a valid airport ID.</div>\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label className=\"sr-only\" htmlFor=\"inputFlightID\">Flight ID</label>\r\n            <input type=\"number\" step=\"1\" min=\"0\" pattern=\"[0-9]*\" className=\"form-control\" id=\"inputFlightID\" placeholder=\"0 (Must be an existing ID)\" value={this.state.flight_id} name=\"flight_id\" onChange={this.handleChange} />\r\n            <div className=\"invalid-feedback\">Please provide valid flight ID.</div>\r\n          </div>\r\n\r\n          <button type=\"submit\" className=\"btn btn-outline-secondary mt-3\">Submit</button>\r\n          <button type=\"button\" className=\"btn btn-outline-secondary mt-3 mx-3\" onClick={this.handleClear} >Clear</button>\r\n        </form>\r\n\r\n        {this.state.insertedJobLocation ? \r\n        <div>\r\n          <h3 className=\"mt-5 \">Inserted Job Location</h3>\r\n          <table align=\"center\" className=\"table border mt-3 mb-5\" >\r\n            <thead className=\"table-dark\">\r\n              <tr>\r\n                <th scope=\"col\">Location ID</th>\r\n                <th scope=\"col\">Address ID</th>\r\n                <th scope=\"col\">Location Name</th>\r\n                <th scope=\"col\">Airport ID</th>\r\n                <th scope=\"col\">Flight ID</th>\r\n              </tr>\r\n            </thead>\r\n            \r\n            <tbody>\r\n              {this.state.insertedJobLocation && this.state.insertedJobLocation.map(jobLocationObj => (\r\n                <tr key={jobLocationObj.location_id}>\r\n                  <th scope=\"col\">{jobLocationObj.location_id}</th>\r\n                  <th scope=\"col\">{jobLocationObj.address_id}</th>\r\n                  <th scope=\"col\">{jobLocationObj.location_name}</th>\r\n                  <th scope=\"col\">{jobLocationObj.airport_id}</th>\r\n                  <th scope=\"col\">{jobLocationObj.flight_id}</th>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n\r\n          <button type=\"button\" className=\"btn btn-outline-secondary mx-3 mb-3\" onClick={this.toggleSQL} >Toggle SQL</button>\r\n          {this.state.showSQL ? \r\n          <div className=\"mb-5\" >\r\n            {this.state.queries.map((queryText, index) => (\r\n              <span style={{whiteSpace: 'pre-wrap'}} key={index}>{queryText}<br/></span>\r\n            ))}\r\n          </div> : <div></div>}\r\n        </div>:\r\n        <div></div>}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CreateJobLocationForm\r\n","import React, { Component } from 'react';\r\nimport { Outlet } from \"react-router-dom\";\r\nimport './sidePanels.css'\r\n\r\n\r\nclass JobsSidePanel extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"container-fluid\" >\r\n        <div className=\"row\">\r\n          <div className=\"col-3\" id=\"sidebar-wrapper\" >\r\n            <nav className=\"sidebar-nav\" align=\"center\" >\r\n              <ul className=\"sidebar-ul\" >\r\n                <li className=\"sidebar-li\"><a href=\"/leave/search\" >Search All Leave Entries</a></li>\r\n                <li className=\"sidebar-li\"><a href=\"/leave/getEmployee\" >Employee Leave Entries</a></li>\r\n                <li className=\"sidebar-li\"><a href=\"/leave/create\" >Create New Leave</a></li>\r\n                <li className=\"sidebar-li\"><a href=\"/leave/update\" >Update Leave Details</a></li>\r\n              </ul>\r\n            </nav>\r\n          </div>\r\n          <div className=\"col-9\" >\r\n            <Outlet />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport default JobsSidePanel","import React, { Component } from 'react';\r\nimport './leaveForms.css'\r\n\r\n\r\nclass SearchAllLeaveForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      searchBy: 'all',\r\n      searchText: '',\r\n      searchID: '',\r\n      searchDate: '',\r\n      searchStatus: '',\r\n      searchReason: '',\r\n      page: 1,\r\n      sort: 'id',\r\n      order: 'asc',\r\n      limit: 10,\r\n      showSQL: false,\r\n    };\r\n    \r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleClear = this.handleClear.bind(this);\r\n    this.toggleSQL = this.toggleSQL.bind(this);\r\n  }\r\n\r\n  toggleSQL = async(event) => {\r\n    if (this.state.queries) {\r\n      this.setState({\r\n        showSQL: !this.state.showSQL\r\n      });\r\n    }\r\n  }\r\n\r\n  handleChange = async (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n\r\n    if (event.target.name === \"searchBy\") {\r\n      this.setState({\r\n        searchText: '',\r\n        searchID: '',\r\n        searchDate: '',\r\n        searchStatus: '',\r\n        searchReason: ''\r\n      });\r\n      this.handleClear();\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.listenForFormSubmission();\r\n  }\r\n\r\n  listenForFormSubmission() {\r\n    const form = document.querySelector('#searchFormHTML');\r\n\r\n    form.addEventListener('submit', (event) => {\r\n      if (!form.checkValidity()) {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n      }\r\n      form.classList.add('was-validated');\r\n    }, false);\r\n  }\r\n\r\n  assertValidGETResponse(body) {\r\n    if (!(\"rows\" in body)) {\r\n      throw new Error(\"Something went wrong; GET Request to Database did not return results object.\");\r\n    }\r\n    else if (!Array.isArray(body.rows)) {\r\n      throw new Error(\"Something went wrong; GET Request to Database returned results object that is not recognized by webpage.\");\r\n    }\r\n  }\r\n\r\n  handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    \r\n    let query = \"\";\r\n    switch(this.state.searchBy) {\r\n      case \"all\":\r\n        query = \"\";\r\n        break;\r\n      \r\n      case \"text\":\r\n        query = this.state.searchText.trim();\r\n        break;\r\n      \r\n      case \"id\": {\r\n        query = this.state.searchID;\r\n        break;\r\n      }\r\n\r\n      case \"date\":\r\n        query = String(this.state.searchDate.trim());\r\n        break;\r\n      \r\n      case \"status\":\r\n        query = this.state.searchStatus.trim();\r\n        break;\r\n        \r\n      case \"reason\":\r\n        query = this.state.searchReason.trim();\r\n        break;\r\n\r\n      default:\r\n        query = \"\";\r\n    }\r\n    \r\n    try {\r\n      const response = await fetch(`/leave?q=${query}&searchBy=${this.state.searchBy}&page=${this.state.page}&sort=${this.state.sort}&order=${this.state.order}&limit=${this.state.limit}`);\r\n      const body = await response.json();\r\n      // console.log(\"Response body rows:\", body.rows);\r\n\r\n      this.assertValidGETResponse(body);\r\n      this.setState({\r\n        returnedLeaves: body.rows,\r\n        queries: body.queries\r\n      });\r\n    }\r\n    catch (e) {\r\n      console.log(\"Error occurred while sending GET request to /job endpoint,\", e);\r\n      document.getElementById(\"errorModal\").style.display = \"block\"\r\n      document.getElementById(\"errorModal\").classList.add(\"show\")\r\n    }\r\n\r\n    // Remove was-validated class from form to reset its appearance\r\n    const form = document.querySelector('#searchFormHTML');\r\n    form.classList.remove('was-validated');\r\n  };\r\n\r\n  closeModal = () => {\r\n    document.getElementById(\"errorModal\").style.display = \"none\"\r\n    document.getElementById(\"errorModal\").classList.remove(\"show\");\r\n  }\r\n\r\n  handleClear = async (event) => {\r\n    this.setState({\r\n      searchText: '',\r\n      searchID: '',\r\n      searchDate: '',\r\n      searchStatus: '',\r\n      searchReason: '',\r\n      returnedLeaves: null,\r\n      queries: null,\r\n      showSQL: false\r\n    });\r\n\r\n    const form = document.querySelector('#searchFormHTML');\r\n    form.classList.remove('was-validated');\r\n  }\r\n\r\n  SearchByInputElement(searchBy) {\r\n    if (searchBy === \"all\") {\r\n      return <div></div>\r\n    }\r\n    else if (searchBy === \"text\") {\r\n      return (<div className=\"form-group\">\r\n      <input type=\"text\" pattern=\"[A-Za-z0-9-_ ]+\"  className=\"form-control\" id=\"inputLeaveText\" placeholder=\"Any text in leave status or reason description\" name=\"searchText\" value={this.state.searchText} onChange={this.handleChange} required />\r\n      <div className=\"invalid-feedback\">Please provide a valid search text.</div>\r\n      <div className=\"valid-feedback\">Valid search text.</div>\r\n    </div>)\r\n    }\r\n    else if (searchBy === \"id\") {\r\n      return (<div className=\"form-group\">\r\n      <input type=\"number\" min=\"0\" pattern=\"[0-9]+\"  className=\"form-control\" id=\"inputLeaveID\" placeholder=\"0\" name=\"searchID\" value={this.state.searchID} onChange={this.handleChange} required />\r\n      <div className=\"invalid-feedback\">Please provide a valid leave ID.</div>\r\n      <div className=\"valid-feedback\">Valid leave ID number.</div>\r\n    </div>)\r\n    }\r\n    else if (searchBy === \"date\") {\r\n      return <div className=\"form-group\">\r\n        <input type=\"date\" className=\"form-control\" id=\"inputLeaveDate\" name=\"searchDate\" value={this.state.searchDate} onChange={this.handleChange} required />\r\n        <div className=\"invalid-feedback\">Please provide a valid leave date.</div>\r\n        <div className=\"valid-feedback\">Valid leave date.</div>\r\n      </div>\r\n    }\r\n    else if (searchBy === \"status\") {\r\n      return <div className=\"form-group\">\r\n      <input type=\"text\" pattern=\"[A-Za-z0-9-_ ]+\"  className=\"form-control\" id=\"inputLeaveStatus\" placeholder=\"(e.g. Returned)\" name=\"searchStatus\" value={this.state.searchStatus} onChange={this.handleChange} required />\r\n      <div className=\"invalid-feedback\">Please provide valid status text to search.</div>\r\n      <div className=\"valid-feedback\">Valid status text.</div>\r\n    </div>\r\n    }\r\n    else if (searchBy === \"reason\") {\r\n      return <div className=\"form-group\">\r\n      <input type=\"text\" pattern=\"[A-Za-z0-9-_ ]+\"  className=\"form-control\" id=\"inputLeaveReason\" placeholder=\"(e.g. Doctor appointment on January 1st, 2021)\" name=\"searchReason\" value={this.state.searchReason} onChange={this.handleChange} required />\r\n      <div className=\"invalid-feedback\">Please provide valid reason text to search.</div>\r\n      <div className=\"valid-feedback\">Valid reason text.</div>\r\n    </div>\r\n    }\r\n    else {\r\n      return <div></div>\r\n    }\r\n  } \r\n  \r\n  render() {\r\n    let searchByInputElement = this.SearchByInputElement(this.state.searchBy)\r\n    return (\r\n      <div className=\"container mt-5 px-5\">\r\n        <div className=\"modal fade\" id=\"errorModal\" tabIndex=\"-1\" role=\"dialog\" aria-hidden=\"true\">\r\n          <div className=\"modal-dialog\" role=\"document\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header\">\r\n                <h5 className=\"modal-title\" id=\"exampleModalLabel\">Error Occurred</h5>\r\n              </div>\r\n              <div className=\"modal-body\">\r\n                Something went wrong while processing your database request, please try again later. <br />\r\n\r\n              </div>\r\n              <div className=\"modal-footer\">\r\n                <button type=\"button\" className=\"btn btn-primary\" onClick={this.closeModal} >Close</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <h3>Search Through All Database Leave Entries</h3>\r\n\r\n        <form className=\"border border-secondary mt-3 px-5 py-4 rounded needs-validation\" id=\"searchFormHTML\" onSubmit={this.handleSubmit} noValidate>\r\n\r\n          <div className=\"form-group mb-2\" >\r\n            <label className=\"sr-only\" htmlFor=\"inputSearchBy\">Search by:</label>\r\n            <select name=\"searchBy\" className=\"form-select \" id=\"inputSearchBy\" defaultValue=\"all\" onChange={this.handleChange}>\r\n              <option value=\"all\">Get All Leave Entries</option>\r\n              <option value=\"text\">Leave General Text</option>\r\n              <option value=\"id\">Leave Entry ID</option>\r\n              <option value=\"date\">Date</option>\r\n              <option value=\"status\">Leave Status</option>\r\n              <option value=\"reason\">Leave Reason/Description</option>\r\n            </select>\r\n          </div>\r\n          {searchByInputElement}\r\n            \r\n          <div className=\"form-group mt-2\" >\r\n            <label className=\"sr-only\" htmlFor=\"inputSortBy\">Sort by:</label>\r\n            <select name=\"sort\" className=\"form-select\" id=\"inputSortBy\" defaultValue=\"id\" onChange={this.handleChange}>\r\n              <option value=\"id\">Leave ID</option>\r\n              <option value=\"date\">Leave Date</option>\r\n              <option value=\"status\">Status</option>\r\n              <option value=\"reason\">Reason</option>\r\n            </select>\r\n          </div>\r\n\r\n          <div className=\"form-group mt-2\" >\r\n            <label className=\"sr-only\" htmlFor=\"inputOrderBy\">Order:</label>\r\n            <select name=\"order\" className=\"form-select\" id=\"inputOrderBy\" defaultValue=\"asc\" onChange={this.handleChange}>\r\n              <option value=\"asc\">Ascending</option>\r\n              <option value=\"desc\">Descending</option>\r\n            </select>\r\n          </div>\r\n\r\n          <div className=\"input-group mt-3\" >\r\n            <div className=\"input-group-prepend\">\r\n              <span className=\"input-group-text\" id=\"\">Results per Page, Page Number</span>\r\n            </div>\r\n            <input type=\"number\" min=\"1\" className=\"form-control\" id=\"inputSearchLimit\" name=\"limit\" value={this.state.limit} onChange={this.handleChange} />\r\n            <input type=\"number\" min=\"1\" className=\"form-control\" id=\"inputSearchPage\" name=\"page\" value={this.state.page} onChange={this.handleChange} />\r\n          </div>\r\n\r\n          <button type=\"submit\" className=\"btn btn-outline-secondary mt-3\">Submit</button>\r\n          <button type=\"button\" className=\"btn btn-outline-secondary mt-3 mx-3\" onClick={this.handleClear} >Clear</button>\r\n        </form>\r\n\r\n        {this.state.returnedLeaves ? \r\n        <div>\r\n          <table align=\"center\" className=\"table mt-5 border\" >\r\n            <thead className=\"table-dark\">\r\n              <tr>\r\n                <th scope=\"col\">#</th>\r\n                <th scope=\"col\">Leave ID</th>\r\n                <th scope=\"col\">Employee ID</th>\r\n                <th scope=\"col\">Date</th>\r\n                <th scope=\"col\">Reason</th>\r\n                <th scope=\"col\">Status</th>\r\n              </tr>\r\n            </thead>\r\n            \r\n            <tbody>\r\n              {this.state.returnedLeaves && this.state.returnedLeaves.map((leaveObj, index) => (\r\n                <tr key={leaveObj.leave_id}>\r\n                  <th scope=\"col\">{index + 1}</th>\r\n                  <th scope=\"col\">{leaveObj.leave_id}</th>\r\n                  <th scope=\"col\">{leaveObj.employee_id}</th>\r\n                  <th scope=\"col\">{leaveObj.date.split(\"T\")[0]}</th>\r\n                  <th scope=\"col\">{leaveObj.reason}</th>\r\n                  <th scope=\"col\">{leaveObj.status}</th>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n\r\n          <button type=\"button\" className=\"btn btn-outline-secondary mx-3 mb-3\" onClick={this.toggleSQL} >Toggle SQL</button>\r\n          {this.state.showSQL ? \r\n          <div className=\"mb-5\" >\r\n            {this.state.queries.map((queryText, index) => (\r\n              <span style={{whiteSpace: 'pre-wrap'}} key={index}>{queryText}<br/></span>\r\n            ))}\r\n          </div> : <div></div>}\r\n        </div> :\r\n        <div></div>}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchAllLeaveForm\r\n","import React, { Component } from 'react';\r\nimport './leaveForms.css'\r\n\r\n\r\nclass SearchEmployeeLeaveForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      employeeID: '',\r\n      searchBy: 'all',\r\n      searchText: '',\r\n      searchID: '',\r\n      searchDate: '',\r\n      searchStatus: '',\r\n      searchReason: '',\r\n      page: 1,\r\n      sort: 'id',\r\n      order: 'asc',\r\n      limit: 10,\r\n      showSQL: false,\r\n    };\r\n    \r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleClear = this.handleClear.bind(this);\r\n    this.toggleSQL = this.toggleSQL.bind(this);\r\n  }\r\n\r\n  toggleSQL = async(event) => {\r\n    if (this.state.queries) {\r\n      this.setState({\r\n        showSQL: !this.state.showSQL\r\n      });\r\n    }\r\n  }\r\n\r\n  handleChange = async (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n\r\n    if (event.target.name === \"searchBy\") {\r\n      this.setState({\r\n        searchText: '',\r\n        searchID: '',\r\n        searchDate: '',\r\n        searchStatus: '',\r\n        searchReason: '',\r\n      });\r\n      this.handleClear();\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.listenForFormSubmission();\r\n  }\r\n\r\n  listenForFormSubmission() {\r\n    const form = document.querySelector('#searchFormHTML');\r\n\r\n    form.addEventListener('submit', (event) => {\r\n      if (!form.checkValidity()) {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n      }\r\n      form.classList.add('was-validated');\r\n    }, false);\r\n  }\r\n\r\n  assertValidGETResponse(body) {\r\n    if (!(\"rows\" in body)) {\r\n      throw new Error(\"Something went wrong; GET Request to Database did not return results object.\");\r\n    }\r\n    else if (!Array.isArray(body.rows)) {\r\n      throw new Error(\"Something went wrong; GET Request to Database returned results object that is not recognized by webpage.\");\r\n    }\r\n  }\r\n\r\n  handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    \r\n    let query = \"\";\r\n    switch(this.state.searchBy) {\r\n      case \"all\":\r\n        query = \"\";\r\n        break;\r\n      \r\n      case \"text\":\r\n        query = this.state.searchText.trim();\r\n        break;\r\n      \r\n      case \"id\": {\r\n        query = this.state.searchID;\r\n        break;\r\n      }\r\n\r\n      case \"date\":\r\n        query = String(this.state.searchDate.trim());\r\n        break;\r\n      \r\n      case \"status\":\r\n        query = this.state.searchStatus.trim();\r\n        break;\r\n        \r\n      case \"reason\":\r\n        query = this.state.searchReason.trim();\r\n        break;\r\n\r\n      default:\r\n        query = \"\";\r\n    }\r\n    \r\n    try {\r\n      const response = await fetch(`/employee/${this.state.employeeID}/leave?q=${query}&searchBy=${this.state.searchBy}&page=${this.state.page}&sort=${this.state.sort}&order=${this.state.order}&limit=${this.state.limit}`);\r\n      const body = await response.json();\r\n      // console.log(\"Response body rows:\", body.rows);\r\n\r\n      this.assertValidGETResponse(body);\r\n      this.setState({\r\n        returnedLeaves: body.rows,\r\n        queries: body.queries\r\n      });\r\n    }\r\n    catch (e) {\r\n      console.log(\"Error occurred while sending GET request to /employee/:id/leave endpoint,\", e);\r\n      document.getElementById(\"errorModal\").style.display = \"block\"\r\n      document.getElementById(\"errorModal\").classList.add(\"show\")\r\n    }\r\n\r\n    const form = document.querySelector('#searchFormHTML');\r\n    form.classList.remove('was-validated');\r\n  };\r\n\r\n  closeModal = () => {\r\n    document.getElementById(\"errorModal\").style.display = \"none\"\r\n    document.getElementById(\"errorModal\").classList.remove(\"show\");\r\n  }\r\n\r\n  handleClear = async (event) => {\r\n    this.setState({\r\n      searchText: '',\r\n      searchID: '',\r\n      searchDate: '',\r\n      searchStatus: '',\r\n      searchReason: '',\r\n      returnedLeaves: null,\r\n      queries: null,\r\n      showSQL: false\r\n    });\r\n\r\n    const form = document.querySelector('#searchFormHTML');\r\n    form.classList.remove('was-validated');\r\n  }\r\n\r\n  SearchByInputElement(searchBy) {\r\n    if (searchBy === \"all\") {\r\n      return <div></div>\r\n    }\r\n    else if (searchBy === \"text\") {\r\n      return (<div className=\"form-group\">\r\n      <input type=\"text\" pattern=\"[A-Za-z0-9-_ ]+\"  className=\"form-control\" id=\"inputLeaveText\" placeholder=\"Any text in leave status or reason description\" name=\"searchText\" value={this.state.searchText} onChange={this.handleChange} required />\r\n      <div className=\"invalid-feedback\">Please provide a valid search text.</div>\r\n      <div className=\"valid-feedback\">Valid search text.</div>\r\n    </div>)\r\n    }\r\n    else if (searchBy === \"id\") {\r\n      return (<div className=\"form-group\">\r\n      <input type=\"number\" min=\"0\" pattern=\"[0-9]+\"  className=\"form-control\" id=\"inputLeaveID\" placeholder=\"0\" name=\"searchID\" value={this.state.searchID} onChange={this.handleChange} required />\r\n      <div className=\"invalid-feedback\">Please provide a valid leave ID.</div>\r\n      <div className=\"valid-feedback\">Valid leave ID number.</div>\r\n    </div>)\r\n    }\r\n    else if (searchBy === \"date\") {\r\n      return <div className=\"form-group\">\r\n        <input type=\"date\" className=\"form-control\" id=\"inputLeaveDate\" name=\"searchDate\" value={this.state.searchDate} onChange={this.handleChange} required />\r\n        <div className=\"invalid-feedback\">Please provide a valid leave date.</div>\r\n        <div className=\"valid-feedback\">Valid leave date.</div>\r\n      </div>\r\n    }\r\n    else if (searchBy === \"status\") {\r\n      return <div className=\"form-group\">\r\n      <input type=\"text\" pattern=\"[A-Za-z0-9-_ ]+\"  className=\"form-control\" id=\"inputLeaveStatus\" placeholder=\"(e.g. Returned)\" name=\"searchStatus\" value={this.state.searchStatus} onChange={this.handleChange} required />\r\n      <div className=\"invalid-feedback\">Please provide valid status text to search.</div>\r\n      <div className=\"valid-feedback\">Valid status text.</div>\r\n    </div>\r\n    }\r\n    else if (searchBy === \"reason\") {\r\n      return <div className=\"form-group\">\r\n      <input type=\"text\" pattern=\"[A-Za-z0-9-_ ]+\"  className=\"form-control\" id=\"inputLeaveReason\" placeholder=\"(e.g. Doctor appointment on January 1st, 2021)\" name=\"searchReason\" value={this.state.searchReason} onChange={this.handleChange} required />\r\n      <div className=\"invalid-feedback\">Please provide valid reason text to search.</div>\r\n      <div className=\"valid-feedback\">Valid reason text.</div>\r\n    </div>\r\n    }\r\n    else {\r\n      return <div></div>\r\n    }\r\n  } \r\n  \r\n  render() {\r\n    let searchByInputElement = this.SearchByInputElement(this.state.searchBy)\r\n    return (\r\n      <div className=\"container mt-5 px-5\">\r\n        <div className=\"modal fade\" id=\"errorModal\" tabIndex=\"-1\" role=\"dialog\" aria-hidden=\"true\">\r\n          <div className=\"modal-dialog\" role=\"document\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header\">\r\n                <h5 className=\"modal-title\" id=\"exampleModalLabel\">Error Occurred</h5>\r\n              </div>\r\n              <div className=\"modal-body\">\r\n                Something went wrong while processing your database request, please try again later. <br />\r\n\r\n              </div>\r\n              <div className=\"modal-footer\">\r\n                <button type=\"button\" className=\"btn btn-primary\" onClick={this.closeModal} >Close</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <h3>Search Through an Employee's Leave Entries</h3>\r\n\r\n        <form className=\"border border-secondary mt-3 px-5 py-4 rounded needs-validation\" id=\"searchFormHTML\" onSubmit={this.handleSubmit} noValidate>\r\n\r\n          <h5 className=\"mb-2\" >Employee to Query Leave Entries For:</h5>\r\n          <div className=\"form-group\">\r\n            <label className=\"sr-only\" htmlFor=\"inputEmployeeID\">Employee ID</label>\r\n            <input type=\"number\" step=\"1\" min=\"0\"  pattern=\"[0-9]+\" className=\"form-control\" id=\"inputEmployeeID\" placeholder=\"1000000\" value={this.state.employeeID} name=\"employeeID\" onChange={this.handleChange} required />\r\n            <div className=\"invalid-feedback\">Please provide a valid existing employee ID.</div>\r\n          </div>\r\n\r\n          <h5 className=\"mt-4\" >Leave Entry Parameters:</h5>\r\n          <div className=\"form-group mb-2\" >\r\n            <label className=\"sr-only\" htmlFor=\"inputSearchBy\">Search by:</label>\r\n            <select name=\"searchBy\" className=\"form-select \" id=\"inputSearchBy\" defaultValue=\"all\" onChange={this.handleChange}>\r\n              <option value=\"all\">Get All Leave Entries</option>\r\n              <option value=\"text\">Leave General Text</option>\r\n              <option value=\"id\">Leave Entry ID</option>\r\n              <option value=\"date\">Date</option>\r\n              <option value=\"status\">Leave Status</option>\r\n              <option value=\"reason\">Leave Reason/Description</option>\r\n            </select>\r\n          </div>\r\n          {searchByInputElement}\r\n            \r\n          <div className=\"form-group mt-2\" >\r\n            <label className=\"sr-only\" htmlFor=\"inputSortBy\">Sort by:</label>\r\n            <select name=\"sort\" className=\"form-select\" id=\"inputSortBy\" defaultValue=\"id\" onChange={this.handleChange}>\r\n              <option value=\"id\">Leave ID</option>\r\n              <option value=\"date\">Leave Date</option>\r\n              <option value=\"status\">Status</option>\r\n              <option value=\"reason\">Reason</option>\r\n            </select>\r\n          </div>\r\n\r\n          <div className=\"form-group mt-2\" >\r\n            <label className=\"sr-only\" htmlFor=\"inputOrderBy\">Order:</label>\r\n            <select name=\"order\" className=\"form-select\" id=\"inputOrderBy\" defaultValue=\"asc\" onChange={this.handleChange}>\r\n              <option value=\"asc\">Ascending</option>\r\n              <option value=\"desc\">Descending</option>\r\n            </select>\r\n          </div>\r\n\r\n          <div className=\"input-group mt-3\" >\r\n            <div className=\"input-group-prepend\">\r\n              <span className=\"input-group-text\" id=\"\">Results per Page, Page Number</span>\r\n            </div>\r\n            <input type=\"number\" min=\"1\" className=\"form-control\" id=\"inputSearchLimit\" name=\"limit\" value={this.state.limit} onChange={this.handleChange} />\r\n            <input type=\"number\" min=\"1\" className=\"form-control\" id=\"inputSearchPage\" name=\"page\" value={this.state.page} onChange={this.handleChange} />\r\n          </div>\r\n\r\n          <button type=\"submit\" className=\"btn btn-outline-secondary mt-3\">Submit</button>\r\n          <button type=\"button\" className=\"btn btn-outline-secondary mt-3 mx-3\" onClick={this.handleClear} >Clear</button>\r\n        </form>\r\n\r\n        {this.state.returnedLeaves ? \r\n        <div>\r\n          <table align=\"center\" className=\"table mt-5 border\" >\r\n            <thead className=\"table-dark\">\r\n              <tr>\r\n                <th scope=\"col\">#</th>\r\n                <th scope=\"col\">Leave ID</th>\r\n                <th scope=\"col\">Employee ID</th>\r\n                <th scope=\"col\">Date</th>\r\n                <th scope=\"col\">Reason</th>\r\n                <th scope=\"col\">Status</th>\r\n              </tr>\r\n            </thead>\r\n            \r\n            <tbody>\r\n              {this.state.returnedLeaves && this.state.returnedLeaves.map((leaveObj, index) => (\r\n                <tr key={leaveObj.leave_id}>\r\n                  <th scope=\"col\">{index + 1}</th>\r\n                  <th scope=\"col\">{leaveObj.leave_id}</th>\r\n                  <th scope=\"col\">{leaveObj.employee_id}</th>\r\n                  <th scope=\"col\">{leaveObj.date.split(\"T\")[0]}</th>\r\n                  <th scope=\"col\">{leaveObj.reason}</th>\r\n                  <th scope=\"col\">{leaveObj.status}</th>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n\r\n          <button type=\"button\" className=\"btn btn-outline-secondary mx-3 mb-3\" onClick={this.toggleSQL} >Toggle SQL</button>\r\n          {this.state.showSQL ? \r\n          <div className=\"mb-5\" >\r\n            {this.state.queries.map((queryText, index) => (\r\n              <span style={{whiteSpace: 'pre-wrap'}} key={index}>{queryText}<br/></span>\r\n            ))}\r\n          </div> : <div></div>}\r\n        </div> :\r\n        <div></div>}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchEmployeeLeaveForm\r\n","import React, { Component } from 'react';\r\nimport './leaveForms.css'\r\n\r\n\r\nclass InsertLeaveForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      insertEmployeeID: '',\r\n      insertDate: '',\r\n      insertReason: '',\r\n      insertStatus: '',\r\n      showSQL: false,\r\n    };\r\n    \r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleClear = this.handleClear.bind(this);\r\n    this.toggleSQL = this.toggleSQL.bind(this);\r\n  }\r\n\r\n  toggleSQL = async(event) => {\r\n    if (this.state.queries) {\r\n      this.setState({\r\n        showSQL: !this.state.showSQL\r\n      });\r\n    }\r\n  }\r\n\r\n  handleChange = async (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.listenForFormSubmission();\r\n  }\r\n\r\n  listenForFormSubmission() {\r\n    const form = document.querySelector('#insertFormHTML');\r\n\r\n    form.addEventListener('submit', (event) => {\r\n      if (!form.checkValidity()) {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n      }\r\n      form.classList.add('was-validated');\r\n    }, false);\r\n  }\r\n\r\n  assertValidDBResponse(body) {\r\n    if (!(\"rows\" in body)) {\r\n      throw new Error(\"Something went wrong; GET Request to Database did not return results object.\");\r\n    }\r\n    else if (!Array.isArray(body.rows)) {\r\n      throw new Error(\"Something went wrong; GET Request to Database returned results object that is not recognized by webpage.\");\r\n    }\r\n  }\r\n\r\n  handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      const body = { \r\n        id: this.state.insertEmployeeID,\r\n        date: this.state.insertDate, \r\n        reason: this.state.insertReason,\r\n        status: this.state.insertStatus\r\n      };\r\n      // console.log(\"Sending inserting new employee POST request with:\", body);\r\n  \r\n      const response = await fetch(\"/employee/\" + String(this.state.insertEmployeeID) + '/leave', {\r\n        method: \"POST\",\r\n        headers: {\"Content-Type\": \"application/json\"},\r\n        body: JSON.stringify(body)\r\n      });\r\n  \r\n      const responseBody = await response.json();\r\n      // console.log(responseBody);\r\n      this.assertValidDBResponse(responseBody);\r\n  \r\n      this.setState({\r\n        insertedLeaveEntry: responseBody.rows,\r\n        queries: responseBody.queries\r\n      });\r\n    }\r\n    catch (err) {\r\n      console.log(\"Error occurred while sending Insert Leave POST request to server:\", err.message);\r\n      document.getElementById(\"errorModal\").style.display = \"block\"\r\n      document.getElementById(\"errorModal\").classList.add(\"show\")\r\n    }\r\n  };\r\n\r\n  closeModal = () => {\r\n    document.getElementById(\"errorModal\").style.display = \"none\"\r\n    document.getElementById(\"errorModal\").classList.remove(\"show\");\r\n  }\r\n\r\n  handleClear = async (event) => {\r\n    this.setState({\r\n      insertEmployeeID: '',\r\n      insertDate: '',\r\n      insertReason: '',\r\n      insertStatus: '',\r\n      insertedLeaveEntry: null,\r\n      queries: null,\r\n      showSQL: false\r\n    });\r\n\r\n    // Remove was-validated class from form to reset its appearance\r\n    const form = document.querySelector('#insertFormHTML');\r\n    form.classList.remove('was-validated');\r\n  }\r\n  \r\n  render() {\r\n    return (\r\n      <div className=\"container mt-5 px-5\">\r\n        <div className=\"modal fade\" id=\"errorModal\" tabIndex=\"-1\" role=\"dialog\" aria-hidden=\"true\">\r\n          <div className=\"modal-dialog\" role=\"document\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header\">\r\n                <h5 className=\"modal-title\" id=\"exampleModalLabel\">Error Occurred</h5>\r\n              </div>\r\n              <div className=\"modal-body\">\r\n                Something went wrong while processing your database request. Please try again and check your form inputs, especially Manager ID! <br />\r\n              </div>\r\n              <div className=\"modal-footer\">\r\n                <button type=\"button\" className=\"btn btn-primary\" onClick={this.closeModal} >Close</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <h3>Create New Leave Entry in Database</h3>\r\n\r\n        <form className=\"border border-secondary mt-3 px-5 py-4 rounded needs-validation\" id=\"insertFormHTML\" onSubmit={this.handleSubmit} noValidate>\r\n\r\n          <div className=\"form-group\">\r\n            <label className=\"sr-only\" htmlFor=\"inputEmployeeID\">Employee ID</label>\r\n            <input type=\"number\" step=\"1\" min=\"0\" pattern=\"[0-9]+\" className=\"form-control\" id=\"inputEmployeeID\" placeholder=\"1000000 (Must be an existing ID)\" value={this.state.insertEmployeeID} name=\"insertEmployeeID\" onChange={this.handleChange} required />\r\n            <div className=\"invalid-feedback\">Please provide a valid employee ID.</div>\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label className=\"sr-only\" htmlFor=\"inputLeaveDate\">Date</label>\r\n            <input type=\"date\" className=\"form-control\" id=\"inputLeaveDate\" value={this.state.insertDate} name=\"insertDate\" onChange={this.handleChange} required />\r\n            <div className=\"invalid-feedback\">Please select a date for the leave entry.</div>\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label className=\"sr-only\" htmlFor=\"inputLeaveStatus\">Status</label>\r\n            <input type=\"text\" pattern=\"[A-Za-z-., ]+\" className=\"form-control\" id=\"inputLeaveStatus\" placeholder=\"(e.g. Returned)\" value={this.state.insertStatus} name=\"insertStatus\" onChange={this.handleChange} required />\r\n            <div className=\"invalid-feedback\">Please provide a valid leave status.</div>\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label className=\"sr-only\" htmlFor=\"inputLeaveReason\">Reason</label>\r\n            <input type=\"text\" pattern=\"[A-Za-z-_.,() ]+\" className=\"form-control\" id=\"inputLeaveReason\" placeholder=\"(e.g. Doctor's appointment)\" value={this.state.insertReason} name=\"insertReason\" onChange={this.handleChange} required />\r\n            <div className=\"invalid-feedback\">Please provide a valid leave reason/description.</div>\r\n          </div>\r\n\r\n          <button type=\"submit\" className=\"btn btn-outline-secondary mt-3\">Submit</button>\r\n          <button type=\"button\" className=\"btn btn-outline-secondary mt-3 mx-3\" onClick={this.handleClear} >Clear</button>\r\n        </form>\r\n\r\n        {this.state.insertedLeaveEntry ? \r\n        <div>\r\n          <h3 className=\"mt-5 \">New Leave Entry</h3>\r\n          <table align=\"center\" className=\"table border mt-3 mb-5\" >\r\n            <thead className=\"table-dark\">\r\n              <tr>\r\n                <th scope=\"col\">Leave ID</th>\r\n                <th scope=\"col\">Employee ID</th>\r\n                <th scope=\"col\">Date</th>\r\n                <th scope=\"col\">Reason</th>\r\n                <th scope=\"col\">Status</th>\r\n              </tr>\r\n            </thead>\r\n            \r\n            <tbody>\r\n              {this.state.insertedLeaveEntry && this.state.insertedLeaveEntry.map(leaveObj => (\r\n                <tr key={leaveObj.leave_id}>\r\n                  <th scope=\"col\">{leaveObj.leave_id}</th>\r\n                  <th scope=\"col\">{leaveObj.employee_id}</th>\r\n                  <th scope=\"col\">{leaveObj.date.split(\"T\")[0]}</th>\r\n                  <th scope=\"col\">{leaveObj.reason}</th>\r\n                  <th scope=\"col\">{leaveObj.status}</th>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n\r\n          <button type=\"button\" className=\"btn btn-outline-secondary mx-3 mb-3\" onClick={this.toggleSQL} >Toggle SQL</button>\r\n          {this.state.showSQL ? \r\n          <div className=\"mb-5\" >\r\n            {this.state.queries.map((queryText, index) => (\r\n              <span style={{whiteSpace: 'pre-wrap'}} key={index}>{queryText}<br/></span>\r\n            ))}\r\n          </div> : <div></div>}\r\n        </div>:\r\n        <div></div>}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default InsertLeaveForm\r\n","import React, { Component } from 'react';\r\nimport './leaveForms.css'\r\n\r\n\r\nclass UpdateLeaveForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      editLeaveID: '',\r\n      editLeaveDate: '',\r\n      editLeaveReason: '',\r\n      editLeaveStatus: '',\r\n      showSQL: false,\r\n    };\r\n    \r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleClear = this.handleClear.bind(this);\r\n    this.toggleSQL = this.toggleSQL.bind(this);\r\n  }\r\n\r\n  toggleSQL = async(event) => {\r\n    if (this.state.queries) {\r\n      this.setState({\r\n        showSQL: !this.state.showSQL\r\n      });\r\n    }\r\n  }\r\n\r\n  handleChange = async (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.listenForFormSubmission();\r\n  }\r\n\r\n  listenForFormSubmission() {\r\n    const form = document.querySelector('#updateFormHTML');\r\n\r\n    form.addEventListener('submit', (event) => {\r\n      if (!form.checkValidity()) {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n      }\r\n      form.classList.add('was-validated');\r\n    }, false);\r\n  }\r\n\r\n  assertValidDBResponse(body) {\r\n    if (!(\"rows\" in body)) {\r\n      throw new Error(\"Something went wrong; PUT Request to Database did not return results object.\");\r\n    }\r\n    else if (!Array.isArray(body.rows)) {\r\n      throw new Error(\"Something went wrong; PUT Request to Database returned results object that is not recognized by webpage.\");\r\n    }\r\n  }\r\n\r\n  handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      let body = { \r\n        date: this.state.editLeaveDate,\r\n        reason: this.state.editLeaveReason,\r\n        status: this.state.editLeaveStatus\r\n      };\r\n\r\n      for (let [key, value] of Object.entries(body)) {\r\n        if (value===\"\") {\r\n          delete body[key];\r\n        }\r\n      }\r\n      // console.log(\"Updating leave with \", body);\r\n  \r\n      const response = await fetch(`/leave/${this.state.editLeaveID}`, {\r\n        method: \"PUT\",\r\n        headers: {\"Content-Type\": \"application/json\"},\r\n        body: JSON.stringify(body)\r\n      });\r\n      const responseBody = await response.json();\r\n      // console.log(\"Server Response:\", responseBody);\r\n\r\n      this.assertValidDBResponse(responseBody);\r\n\r\n      this.setState({\r\n        returnedLeave: responseBody.rows,\r\n        queries: responseBody.queries\r\n      });\r\n\r\n      document.getElementById(\"successModal\").style.display = \"block\"\r\n      document.getElementById(\"successModal\").classList.add(\"show\")\r\n    }\r\n    catch (err) {\r\n      console.log(\"Error occurred while sending Update Employee POST request to server:\", err.message);\r\n      document.getElementById(\"errorModal\").style.display = \"block\"\r\n      document.getElementById(\"errorModal\").classList.add(\"show\")\r\n    }\r\n  };\r\n\r\n  closeModal = () => {\r\n    document.getElementById(\"errorModal\").style.display = \"none\"\r\n    document.getElementById(\"errorModal\").classList.remove(\"show\");\r\n  }\r\n\r\n  closeSuccessModal = () => {\r\n    document.getElementById(\"successModal\").style.display = \"none\"\r\n    document.getElementById(\"successModal\").classList.remove(\"show\");\r\n  }\r\n\r\n  handleClear = async (event) => {\r\n    this.setState({\r\n      editLeaveID: '',\r\n      editLeaveDate: '',\r\n      editLeaveReason: '',\r\n      editLeaveStatus: '',\r\n      returnedLeave: null,\r\n      queries: null,\r\n      showSQL: false\r\n    });\r\n\r\n    const form = document.querySelector('#updateFormHTML');\r\n    form.classList.remove('was-validated');\r\n  }\r\n  \r\n  render() {\r\n    return (\r\n      <div className=\"container mt-5 px-5\">\r\n        <div className=\"modal fade\" id=\"errorModal\" tabIndex=\"-1\" role=\"dialog\" aria-hidden=\"true\">\r\n          <div className=\"modal-dialog\" role=\"document\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header\">\r\n                <h5 className=\"modal-title\" id=\"exampleModalLabel\">Error Occurred</h5>\r\n              </div>\r\n              <div className=\"modal-body\">\r\n                Something went wrong while processing your database request, one of your inputs may have been invalid. Please check your inputs, especially the leave ID! This needs to be an existing ID in the database. Cross reference IDs by searching through other tables, and contact airport database assistance if necessary. <br />\r\n              </div>\r\n              <div className=\"modal-footer\">\r\n                <button type=\"button\" className=\"btn btn-primary\" onClick={this.closeModal} >Close</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"modal fade\" id=\"successModal\" tabIndex=\"-1\" role=\"dialog\" aria-hidden=\"true\">\r\n          <div className=\"modal-dialog\" role=\"document\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header\">\r\n                <h5 className=\"modal-title\" >Success</h5>\r\n              </div>\r\n              { this.state.returnedLeave ? <div className=\"modal-body\">\r\n                Leave with ID {this.state.returnedLeave[0][\"leave_id\"]} was updated. <br />\r\n              </div> : <div></div>}\r\n              <div className=\"modal-footer\">\r\n                <button type=\"button\" className=\"btn btn-primary\" onClick={this.closeSuccessModal} >Close</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <h3>Update an Leave Entry's Information</h3>\r\n\r\n        <form className=\"border border-secondary mt-3 px-5 py-4 rounded needs-validation\" id=\"updateFormHTML\" onSubmit={this.handleSubmit} noValidate>\r\n\r\n          <h5>Leave Entry to Update</h5>\r\n          <div className=\"form-group\">\r\n            <label className=\"sr-only\" htmlFor=\"inputLeaveID\">Leave ID</label>\r\n            <input type=\"number\" step=\"1\" min=\"0\"  pattern=\"[0-9]+\" className=\"form-control\" id=\"inputLeaveID\" placeholder=\"0\" value={this.state.editLeaveID} name=\"editLeaveID\" onChange={this.handleChange} required />\r\n            <div className=\"invalid-feedback\">Please provide a valid Job ID to update.</div>\r\n          </div>\r\n\r\n          <h5 className=\"mt-3\" >Update Fields:</h5>\r\n          <small className=\"form-text text-muted\">Note: Only enter in fields that you want updated.</small>\r\n\r\n          <div className=\"form-group\">\r\n            <label className=\"sr-only\" htmlFor=\"inputLeaveDate\">Leave Date</label>\r\n            <input type=\"date\" className=\"form-control\" id=\"inputLeaveDate\" value={this.state.editLeaveDate} name=\"editLeaveDate\" onChange={this.handleChange} />\r\n            <div className=\"invalid-feedback\">Please select a valid leave date.</div>\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label className=\"sr-only\" htmlFor=\"inputLeaveStatus\">Status</label>\r\n            <input type=\"text\" pattern=\"[A-Za-z ]*\" className=\"form-control\" id=\"inputLeaveStatus\" placeholder=\"(e.g. Returned)\" value={this.state.editLeaveStatus} name=\"editLeaveStatus\" onChange={this.handleChange} />\r\n            <div className=\"invalid-feedback\">Please provide a valid status phrase. Only alphabetic characters allowed.</div>\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label className=\"sr-only\" htmlFor=\"inputLeaveReason\">Reason</label>\r\n            <input type=\"text\" pattern=\"[A-Za-z ]*\" className=\"form-control\" id=\"inputLeaveReason\" placeholder=\"(e.g. Doctor's Appointment)\" value={this.state.editLeaveReason} name=\"editLeaveReason\" onChange={this.handleChange} />\r\n            <div className=\"invalid-feedback\">Please provide a valid reason/description. Only alphabetic characters allowed.</div>\r\n          </div>\r\n\r\n          <button type=\"submit\" className=\"btn btn-outline-secondary mt-3\">Submit</button>\r\n          <button type=\"button\" className=\"btn btn-outline-secondary mt-3 mx-3\" onClick={this.handleClear} >Clear</button>\r\n        </form>\r\n\r\n          <button type=\"button\" className=\"btn btn-outline-secondary mt-3 mx-3 mb-3\" onClick={this.toggleSQL} >Toggle SQL</button>\r\n          {this.state.showSQL ? \r\n          <div className=\"mb-5\" >\r\n            {this.state.queries.map((queryText, index) => (\r\n              <span style={{whiteSpace: 'pre-wrap'}} key={index}>{queryText}<br/></span>\r\n            ))}\r\n          </div> : <div></div>}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UpdateLeaveForm\r\n","import React, { Component } from 'react';\r\nimport { Outlet } from \"react-router-dom\";\r\nimport './sidePanels.css'\r\n\r\n\r\nclass DepartmentsSidePanel extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"container-fluid\" >\r\n        <div className=\"row\">\r\n          <div className=\"col-3\" id=\"sidebar-wrapper\" >\r\n            <nav className=\"sidebar-nav\" align=\"center\" >\r\n              <ul className=\"sidebar-ul\" >\r\n                <li className=\"sidebar-li\"><a href=\"/department/search\" >Search Departments</a></li>\r\n                <li className=\"sidebar-li\"><a href=\"/department/create\" >Create New Department</a></li>\r\n                <li className=\"sidebar-li\"><a href=\"/department/update\" >Update Department Details</a></li>\r\n                <li className=\"sidebar-li\"><a href=\"/department/delete\" >Delete a Department</a></li>\r\n              </ul>\r\n            </nav>\r\n          </div>\r\n          <div className=\"col-9\" >\r\n            <Outlet />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport default DepartmentsSidePanel","import React, { Component } from 'react';\r\nimport './departmentForms.css'\r\n\r\n\r\nclass CreateDepartmentForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      createDepartmentName: '',\r\n      createDepartmentDate: '',\r\n      createDepartmentHeadID: '',\r\n      showSQL: false,\r\n    };\r\n    \r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleClear = this.handleClear.bind(this);\r\n    this.toggleSQL = this.toggleSQL.bind(this);\r\n  }\r\n\r\n  toggleSQL = async(event) => {\r\n    if (this.state.queries) {\r\n      this.setState({\r\n        showSQL: !this.state.showSQL\r\n      });\r\n    }\r\n  }\r\n\r\n  handleChange = async (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.listenForFormSubmission();\r\n  }\r\n\r\n  listenForFormSubmission() {\r\n    const form = document.querySelector('#createFormHTML');\r\n\r\n    form.addEventListener('submit', (event) => {\r\n      if (!form.checkValidity()) {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n      }\r\n      form.classList.add('was-validated');\r\n    }, false);\r\n  }\r\n\r\n  assertValidDBResponse(body) {\r\n    if (!(\"rows\" in body)) {\r\n      throw new Error(\"Something went wrong; POST Request to Database did not return results object.\");\r\n    }\r\n    else if (!Array.isArray(body.rows)) {\r\n      throw new Error(\"Something went wrong; POST Request to Database returned results object that is not recognized by webpage.\");\r\n    }\r\n  }\r\n\r\n  handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      const body = { \r\n        department_name: this.state.createDepartmentName, \r\n        creation_date: this.state.createDepartmentDate,\r\n        department_head_id: this.state.createDepartmentHeadID\r\n      };\r\n      // console.log(\"Sending creating new department POST request with:\", body);\r\n  \r\n      const response = await fetch(\"/department\", {\r\n        method: \"POST\",\r\n        headers: {\"Content-Type\": \"application/json\"},\r\n        body: JSON.stringify(body)\r\n      });\r\n  \r\n      const responseBody = await response.json();\r\n      // console.log(\"Response:\", responseBody);\r\n      this.assertValidDBResponse(responseBody);\r\n  \r\n      this.setState({\r\n        createdDepartment: responseBody.rows,\r\n        queries: responseBody.queries\r\n      });\r\n    }\r\n    catch (err) {\r\n      console.log(\"Error occurred while sending create Department POST request to server:\", err.message);\r\n      document.getElementById(\"errorModal\").style.display = \"block\"\r\n      document.getElementById(\"errorModal\").classList.add(\"show\")\r\n    }\r\n  };\r\n\r\n  closeModal = () => {\r\n    document.getElementById(\"errorModal\").style.display = \"none\"\r\n    document.getElementById(\"errorModal\").classList.remove(\"show\");\r\n  }\r\n\r\n  handleClear = async (event) => {\r\n    this.setState({\r\n      createDepartmentName: '',\r\n      createDepartmentDate: '',\r\n      createDepartmentHeadID: '',\r\n      createdDepartment: null,\r\n      queries: null,\r\n      showSQL: false\r\n    });\r\n\r\n    // Remove was-validated class from form to reset its appearance\r\n    const form = document.querySelector('#createFormHTML');\r\n    form.classList.remove('was-validated');\r\n  }\r\n  \r\n  render() {\r\n    return (\r\n      <div className=\"container mt-5 px-5\">\r\n        <div className=\"modal fade\" id=\"errorModal\" tabIndex=\"-1\" role=\"dialog\" aria-hidden=\"true\">\r\n          <div className=\"modal-dialog\" role=\"document\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header\">\r\n                <h5 className=\"modal-title\" id=\"exampleModalLabel\">Error Occurred</h5>\r\n              </div>\r\n              <div className=\"modal-body\">\r\n                Something went wrong while processing your database request. Please try again and check your form inputs, especially Department Head ID! Contact airport database assistance if further problems persist. <br />\r\n              </div>\r\n              <div className=\"modal-footer\">\r\n                <button type=\"button\" className=\"btn btn-primary\" onClick={this.closeModal} >Close</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <h3>Create New Department</h3>\r\n\r\n        <form className=\"border border-secondary mt-3 px-5 py-4 rounded needs-validation\" id=\"createFormHTML\" onSubmit={this.handleSubmit} noValidate>\r\n\r\n          <div className=\"form-group\">\r\n            <label className=\"sr-only\" htmlFor=\"inputDepartmentName\">Department Name</label>\r\n            <input type=\"text\" pattern=\"[A-Za-z ]+\" className=\"form-control\" id=\"inputDepartmentName\" placeholder=\"(e.g. Flight Personnel)\" value={this.state.createDepartmentName} name=\"createDepartmentName\" onChange={this.handleChange} required />\r\n            <div className=\"invalid-feedback\">Please provide a valid department name.</div>\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label className=\"sr-only\" htmlFor=\"inputCreationDate\">Creation Date</label>\r\n            <input type=\"date\" className=\"form-control\" id=\"inputCreationDate\" name=\"createDepartmentDate\" value={this.state.createDepartmentDate} onChange={this.handleChange} required />\r\n            <div className=\"invalid-feedback\">Please select a valid creation date.</div>\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label className=\"sr-only\" htmlFor=\"inputDepartmentHeadID\">Department Head ID</label>\r\n            <input type=\"number\" step=\"1\" min=\"0\" pattern=\"[0-9]+\" className=\"form-control\" id=\"inputDepartmentHeadID\" placeholder=\"1000000 (Must be an existing ID)\" value={this.state.createDepartmentHeadID} name=\"createDepartmentHeadID\" onChange={this.handleChange} required />\r\n            <div className=\"invalid-feedback\">Please provide a valid department ID.</div>\r\n          </div>\r\n\r\n          <button type=\"submit\" className=\"btn btn-outline-secondary mt-3\">Submit</button>\r\n          <button type=\"button\" className=\"btn btn-outline-secondary mt-3 mx-3\" onClick={this.handleClear} >Clear</button>\r\n        </form>\r\n\r\n        {this.state.createdDepartment ? \r\n        <div>\r\n          <h3 className=\"mt-5 \">Created Department</h3>\r\n          <table align=\"center\" className=\"table border mt-3 mb-5\" >\r\n            <thead className=\"table-dark\">\r\n              <tr>\r\n                <th scope=\"col\">Department ID</th>\r\n                <th scope=\"col\">Department Name</th>\r\n                <th scope=\"col\">Creation Date</th>\r\n                <th scope=\"col\">Department Head ID</th>\r\n                <th scope=\"col\">First Name</th>\r\n                <th scope=\"col\">Last Name</th>\r\n              </tr>\r\n            </thead>\r\n            \r\n            <tbody>\r\n              {this.state.createdDepartment && this.state.createdDepartment.map(deptObj => (\r\n                <tr key={deptObj.department_id}>\r\n                  <th scope=\"col\">{deptObj.department_id}</th>\r\n                  <th scope=\"col\">{deptObj.department_name}</th>\r\n                  <th scope=\"col\">{deptObj.creation_date.split(\"T\")[0]}</th>\r\n                  <th scope=\"col\">{deptObj.department_head_id}</th>\r\n                  <th scope=\"col\">{deptObj.first_name}</th>\r\n                  <th scope=\"col\">{deptObj.last_name}</th>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n\r\n          <button type=\"button\" className=\"btn btn-outline-secondary mx-3 mb-3\" onClick={this.toggleSQL} >Toggle SQL</button>\r\n          {this.state.showSQL ? \r\n          <div className=\"mb-5\" >\r\n            {this.state.queries.map((queryText, index) => (\r\n              <span style={{whiteSpace: 'pre-wrap'}} key={index}>{queryText}<br/></span>\r\n            ))}\r\n          </div> : <div></div>}\r\n        </div>:\r\n        <div></div>}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CreateDepartmentForm\r\n","import React, { Component } from 'react';\r\nimport './departmentForms.css'\r\n\r\n\r\nclass SearchDepartmentsForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      searchBy: 'all',\r\n      searchID: '',\r\n      searchDepartmentName: '',\r\n      searchDate: '',\r\n      page: 1,\r\n      sort: 'id',\r\n      order: 'asc',\r\n      limit: 10,\r\n      showSQL: false,\r\n    };\r\n    \r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleClear = this.handleClear.bind(this);\r\n    this.toggleSQL = this.toggleSQL.bind(this);\r\n  }\r\n\r\n  toggleSQL = async(event) => {\r\n    if (this.state.queries) {\r\n      this.setState({\r\n        showSQL: !this.state.showSQL\r\n      });\r\n    }\r\n  }\r\n\r\n  handleChange = async (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n\r\n    if (event.target.name === \"searchBy\") {\r\n      this.setState({\r\n        searchID: '',\r\n        searchDepartmentName: '',\r\n        searchDate: '',\r\n      });\r\n      this.handleClear();\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.listenForFormSubmission();\r\n  }\r\n\r\n  listenForFormSubmission() {\r\n    const form = document.querySelector('#searchFormHTML');\r\n\r\n    form.addEventListener('submit', (event) => {\r\n      if (!form.checkValidity()) {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n      }\r\n      form.classList.add('was-validated');\r\n    }, false);\r\n  }\r\n\r\n  assertValidGETResponse(body) {\r\n    if (!(\"rows\" in body)) {\r\n      throw new Error(\"Something went wrong; GET Request to Database did not return results object.\");\r\n    }\r\n    else if (!Array.isArray(body.rows)) {\r\n      throw new Error(\"Something went wrong; GET Request to Database returned results object that is not recognized by webpage.\");\r\n    }\r\n  }\r\n\r\n  handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    \r\n    let query = \"\";\r\n    switch(this.state.searchBy) {\r\n      case \"all\":\r\n        query = \"\";\r\n        break;\r\n      \r\n      case \"id\": {\r\n        query = this.state.searchID;\r\n        break;\r\n      }\r\n\r\n      case \"name\":\r\n        query = this.state.searchDepartmentName.trim();\r\n        break;\r\n      \r\n      case \"date\":\r\n        query = query = String(this.state.searchDate.trim());\r\n        break;\r\n\r\n      default:\r\n        query = \"\";\r\n    }\r\n\r\n    console.log(\"Sending query:\", query);\r\n    \r\n    try {\r\n      const response = await fetch(`/department?q=${query}&searchBy=${this.state.searchBy}&page=${this.state.page}&sort=${this.state.sort}&order=${this.state.order}&limit=${this.state.limit}`);\r\n      const body = await response.json();\r\n      console.log(\"Body rows:\", body.rows);\r\n\r\n      this.assertValidGETResponse(body);\r\n      this.setState({\r\n        returnedDepartments: body.rows,\r\n        queries: body.queries\r\n      });\r\n    }\r\n    catch (e) {\r\n      console.log(\"Error occurred while sending GET request to /department endpoint,\", e);\r\n      document.getElementById(\"errorModal\").style.display = \"block\"\r\n      document.getElementById(\"errorModal\").classList.add(\"show\")\r\n    }\r\n\r\n    // Remove was-validated class from form to reset its appearance\r\n    const form = document.querySelector('#searchFormHTML');\r\n    form.classList.remove('was-validated');\r\n  };\r\n\r\n  closeModal = () => {\r\n    document.getElementById(\"errorModal\").style.display = \"none\"\r\n    document.getElementById(\"errorModal\").classList.remove(\"show\");\r\n  }\r\n\r\n  handleClear = async (event) => {\r\n    this.setState({\r\n      searchID: '',\r\n      searchJobTitle: '',\r\n      searchDepartment: '',\r\n      searchLocation: '',\r\n      returnedDepartments: null,\r\n      queries: null,\r\n      showSQL: false\r\n    });\r\n\r\n    const form = document.querySelector('#searchFormHTML');\r\n    form.classList.remove('was-validated');\r\n  }\r\n\r\n  SearchByInputElement(searchBy) {\r\n    if (searchBy === \"all\") {\r\n      return <div></div>\r\n    }\r\n    else if (searchBy === \"id\") {\r\n      return (<div className=\"form-group\">\r\n      <input type=\"number\" min=\"0\" pattern=\"[0-9]+\"  className=\"form-control\" id=\"inputSearchID\" placeholder=\"0\" name=\"searchID\" value={this.state.searchID} onChange={this.handleChange} required />\r\n      <div className=\"invalid-feedback\">Please provide a valid department ID number.</div>\r\n      <div className=\"valid-feedback\">Valid department ID.</div>\r\n    </div>\r\n      )\r\n    }\r\n    else if (searchBy === \"name\") {\r\n      return <div className=\"form-group\">\r\n        <input type=\"text\" pattern=\"[A-Za-z ]+\"  className=\"form-control\" id=\"inputSearchJobTitle\" placeholder=\"(e.g. Flight Crew)\" name=\"searchDepartmentName\" value={this.state.searchDepartmentName} onChange={this.handleChange} required />\r\n        <div className=\"invalid-feedback\">Please provide a valid department name.</div>\r\n        <div className=\"valid-feedback\">Valid department name.</div>\r\n      </div>\r\n    }\r\n    else if (searchBy === \"date\") {\r\n      return <div className=\"form-group\">\r\n      <input type=\"date\" className=\"form-control\" id=\"inputLeaveDate\" name=\"searchDate\" value={this.state.searchDate} onChange={this.handleChange} required />\r\n      <div className=\"invalid-feedback\">Please select a department creation date.</div>\r\n      <div className=\"valid-feedback\">Valid date.</div>\r\n    </div>\r\n    }\r\n    else {\r\n      return <div></div>\r\n    }\r\n  } \r\n  \r\n  render() {\r\n    let searchByInputElement = this.SearchByInputElement(this.state.searchBy)\r\n    return (\r\n      <div className=\"container mt-5 px-5\">\r\n        <div className=\"modal fade\" id=\"errorModal\" tabIndex=\"-1\" role=\"dialog\" aria-hidden=\"true\">\r\n          <div className=\"modal-dialog\" role=\"document\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header\">\r\n                <h5 className=\"modal-title\" id=\"exampleModalLabel\">Error Occurred</h5>\r\n              </div>\r\n              <div className=\"modal-body\">\r\n                Something went wrong while processing your database request, please try again later. <br />\r\n\r\n              </div>\r\n              <div className=\"modal-footer\">\r\n                <button type=\"button\" className=\"btn btn-primary\" onClick={this.closeModal} >Close</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <h3>Search Database for Departments</h3>\r\n\r\n        <form className=\"border border-secondary mt-3 px-5 py-4 rounded needs-validation\" id=\"searchFormHTML\" onSubmit={this.handleSubmit} noValidate>\r\n\r\n          <div className=\"form-group mb-2\" >\r\n            <label className=\"sr-only\" htmlFor=\"inputSearchBy\">Search by:</label>\r\n            <select name=\"searchBy\" className=\"form-select \" id=\"inputSearchBy\" defaultValue=\"all\" onChange={this.handleChange}>\r\n              <option value=\"all\">Get All Departments</option>\r\n              <option value=\"id\">Department ID</option>\r\n              <option value=\"name\">Department Name</option>\r\n              <option value=\"date\">Creation Date</option>\r\n            </select>\r\n          </div>\r\n          {searchByInputElement}\r\n            \r\n          <div className=\"form-group mt-2\" >\r\n            <label className=\"sr-only\" htmlFor=\"inputSortBy\">Sort by:</label>\r\n            <select name=\"sort\" className=\"form-select\" id=\"inputSortBy\" defaultValue=\"id\" onChange={this.handleChange}>\r\n              <option value=\"id\">Department ID</option>\r\n              <option value=\"name\">Department Name</option>\r\n              <option value=\"date\">Creation Date</option>\r\n            </select>\r\n          </div>\r\n\r\n          <div className=\"form-group mt-2\" >\r\n            <label className=\"sr-only\" htmlFor=\"inputOrderBy\">Order:</label>\r\n            <select name=\"order\" className=\"form-select\" id=\"inputOrderBy\" defaultValue=\"asc\" onChange={this.handleChange}>\r\n              <option value=\"asc\">Ascending</option>\r\n              <option value=\"desc\">Descending</option>\r\n            </select>\r\n          </div>\r\n\r\n          <div className=\"input-group mt-3\" >\r\n            <div className=\"input-group-prepend\">\r\n              <span className=\"input-group-text\" id=\"\">Results per Page, Page Number</span>\r\n            </div>\r\n            <input type=\"number\" min=\"1\" className=\"form-control\" id=\"inputSearchLimit\" name=\"limit\" value={this.state.limit} onChange={this.handleChange} />\r\n            <input type=\"number\" min=\"1\" className=\"form-control\" id=\"inputSearchPage\" name=\"page\" value={this.state.page} onChange={this.handleChange} />\r\n          </div>\r\n\r\n          <button type=\"submit\" className=\"btn btn-outline-secondary mt-3\">Submit</button>\r\n          <button type=\"button\" className=\"btn btn-outline-secondary mt-3 mx-3\" onClick={this.handleClear} >Clear</button>\r\n        </form>\r\n\r\n        {this.state.returnedDepartments ? \r\n        <div>\r\n          <table align=\"center\" className=\"table mt-5 border\" >\r\n            <thead className=\"table-dark\">\r\n              <tr>\r\n                <th scope=\"col\">#</th>\r\n                <th scope=\"col\">Job Count</th>\r\n                <th scope=\"col\">Employee Count</th>\r\n                <th scope=\"col\">Department ID</th>\r\n                <th scope=\"col\">Department Name</th>\r\n                <th scope=\"col\">Creation Date</th>\r\n                <th scope=\"col\">Department Head ID</th>\r\n                <th scope=\"col\">First Name</th>\r\n                <th scope=\"col\">Last Name</th>\r\n              </tr>\r\n            </thead>\r\n            \r\n            <tbody>\r\n              {this.state.returnedDepartments && this.state.returnedDepartments.map((deptObj, index) => (\r\n                <tr key={deptObj.department_id}>\r\n                  <th scope=\"col\">{index + 1}</th>\r\n                  <th scope=\"col\">{deptObj.job_count}</th>\r\n                  <th scope=\"col\">{deptObj.employee_count}</th>\r\n                  <th scope=\"col\">{deptObj.department_id}</th>\r\n                  <th scope=\"col\">{deptObj.department_name}</th>\r\n                  <th scope=\"col\">{deptObj.creation_date.split(\"T\")[0]}</th>\r\n                  <th scope=\"col\">{deptObj.department_head_id}</th>\r\n                  <th scope=\"col\">{deptObj.first_name}</th>\r\n                  <th scope=\"col\">{deptObj.last_name}</th>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n\r\n          <button type=\"button\" className=\"btn btn-outline-secondary mx-3 mb-3\" onClick={this.toggleSQL} >Toggle SQL</button>\r\n          {this.state.showSQL ? \r\n          <div className=\"mb-5\" >\r\n            {this.state.queries.map((queryText, index) => (\r\n              <span style={{whiteSpace: 'pre-wrap'}} key={index}>{queryText}<br/></span>\r\n            ))}\r\n          </div> : <div></div>}\r\n        </div>:\r\n        <div></div>}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchDepartmentsForm\r\n","import React, { Component } from 'react';\r\nimport './departmentForms.css'\r\n\r\n\r\nclass UpdateDepartmentForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      departmentID: '',\r\n      updateDepartmentName: '',\r\n      updateCreationDate: '',\r\n      updateDepartmentHeadID: '',\r\n      showSQL: false,\r\n    };\r\n    \r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleClear = this.handleClear.bind(this);\r\n    this.toggleSQL = this.toggleSQL.bind(this);\r\n  }\r\n\r\n  toggleSQL = async(event) => {\r\n    if (this.state.queries) {\r\n      this.setState({\r\n        showSQL: !this.state.showSQL\r\n      });\r\n    }\r\n  }\r\n\r\n  handleChange = async (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.listenForFormSubmission();\r\n  }\r\n\r\n  listenForFormSubmission() {\r\n    const form = document.querySelector('#updateFormHTML');\r\n\r\n    form.addEventListener('submit', (event) => {\r\n      if (!form.checkValidity()) {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n      }\r\n      form.classList.add('was-validated');\r\n    }, false);\r\n  }\r\n\r\n  assertValidDBResponse(body) {\r\n    if (!(\"rows\" in body)) {\r\n      throw new Error(\"Something went wrong; PUT Request to Database did not return results object.\");\r\n    }\r\n    else if (!Array.isArray(body.rows)) {\r\n      throw new Error(\"Something went wrong; PUT Request to Database returned results object that is not recognized by webpage.\");\r\n    }\r\n  }\r\n\r\n  handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      let body = { \r\n        department_name: this.state.updateDepartmentName, \r\n        creation_date: this.state.updateCreationDate,\r\n        department_head_id: this.state.updateDepartmentHeadID\r\n      };\r\n\r\n      for (let [key, value] of Object.entries(body)) {\r\n        if (value===\"\") {\r\n          delete body[key];\r\n        }\r\n      }\r\n      // console.log(\"Updating department with \", body);\r\n  \r\n      const response = await fetch(`/department/${this.state.departmentID}`, {\r\n        method: \"PUT\",\r\n        headers: {\"Content-Type\": \"application/json\"},\r\n        body: JSON.stringify(body)\r\n      });\r\n      const responseBody = await response.json();\r\n\r\n      this.assertValidDBResponse(responseBody);\r\n\r\n      this.setState({\r\n        returnedDepartment: responseBody.rows,\r\n        queries: responseBody.queries\r\n      });\r\n\r\n      document.getElementById(\"successModal\").style.display = \"block\"\r\n      document.getElementById(\"successModal\").classList.add(\"show\")\r\n    }\r\n    catch (err) {\r\n      console.log(\"Error occurred while sending Update Department PUT request to server:\", err.message);\r\n      document.getElementById(\"errorModal\").style.display = \"block\"\r\n      document.getElementById(\"errorModal\").classList.add(\"show\")\r\n    }\r\n  };\r\n\r\n  closeModal = () => {\r\n    document.getElementById(\"errorModal\").style.display = \"none\"\r\n    document.getElementById(\"errorModal\").classList.remove(\"show\");\r\n  }\r\n\r\n  closeSuccessModal = () => {\r\n    document.getElementById(\"successModal\").style.display = \"none\"\r\n    document.getElementById(\"successModal\").classList.remove(\"show\");\r\n  }\r\n\r\n  handleClear = async (event) => {\r\n    this.setState({\r\n      departmentID: '',\r\n      updateDepartmentName: '',\r\n      updateCreationDate: '',\r\n      updateDepartmentHeadID: '',\r\n      returnedDepartment: null,\r\n      queries: null,\r\n      showSQL: false\r\n    });\r\n\r\n    const form = document.querySelector('#updateFormHTML');\r\n    form.classList.remove('was-validated');\r\n  }\r\n  \r\n  render() {\r\n    return (\r\n      <div className=\"container mt-5 px-5\">\r\n        <div className=\"modal fade\" id=\"errorModal\" tabIndex=\"-1\" role=\"dialog\" aria-hidden=\"true\">\r\n          <div className=\"modal-dialog\" role=\"document\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header\">\r\n                <h5 className=\"modal-title\" id=\"exampleModalLabel\">Error Occurred</h5>\r\n              </div>\r\n              <div className=\"modal-body\">\r\n                Something went wrong while processing your database request, one of your inputs may have been invalid. Please check your inputs, especially inputted IDs! These need to be existing IDs in the database. Cross reference IDs by searching through other tables, and contact airport database assistance if necessary. <br />\r\n              </div>\r\n              <div className=\"modal-footer\">\r\n                <button type=\"button\" className=\"btn btn-primary\" onClick={this.closeModal} >Close</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"modal fade\" id=\"successModal\" tabIndex=\"-1\" role=\"dialog\" aria-hidden=\"true\">\r\n          <div className=\"modal-dialog\" role=\"document\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header\">\r\n                <h5 className=\"modal-title\" >Success</h5>\r\n              </div>\r\n              { this.state.returnedDepartment ? <div className=\"modal-body\">\r\n                Department with ID {this.state.departmentID} was updated. <br />\r\n              </div> : <div></div>}\r\n              <div className=\"modal-footer\">\r\n                <button type=\"button\" className=\"btn btn-primary\" onClick={this.closeSuccessModal} >Close</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <h3>Update a Department's Information</h3>\r\n\r\n        <form className=\"border border-secondary mt-3 px-5 py-4 rounded needs-validation\" id=\"updateFormHTML\" onSubmit={this.handleSubmit} noValidate>\r\n\r\n          <h5>Department to Update</h5>\r\n          <div className=\"form-group\">\r\n            <label className=\"sr-only\" htmlFor=\"inputDepartmentID\">Department ID</label>\r\n            <input type=\"number\" step=\"1\" min=\"0\"  pattern=\"[0-9]+\" className=\"form-control\" id=\"inputDepartmentID\" placeholder=\"0\" value={this.state.departmentID} name=\"departmentID\" onChange={this.handleChange} required />\r\n            <div className=\"invalid-feedback\">Please provide a valid department ID to update.</div>\r\n          </div>\r\n\r\n          <h5 className=\"mt-3\" >Update Fields:</h5>\r\n          <small className=\"form-text text-muted\">Note: Only enter in fields that you want updated.</small>\r\n\r\n          <div className=\"form-group\">\r\n            <label className=\"sr-only\" htmlFor=\"inputDepartmentName\">Department Name</label>\r\n            <input type=\"text\" pattern=\"[A-Za-z ]*\" className=\"form-control\" id=\"inputDepartmentName\" placeholder=\"(e.g. Flight Crew)\" value={this.state.updateDepartmentName} name=\"updateDepartmentName\" onChange={this.handleChange} />\r\n            <div className=\"invalid-feedback\">Please provide a valid department name.</div>\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label className=\"sr-only\" htmlFor=\"inputCreationDate\">Creation Date</label>\r\n            <input type=\"date\" className=\"form-control\" id=\"inputCreationDate\" value={this.state.updateCreationDate} name=\"updateCreationDate\" onChange={this.handleChange} />\r\n            <div className=\"invalid-feedback\">Please provide a valid creation date.</div>\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label className=\"sr-only\" htmlFor=\"inputDepartmentHeadID\">Department Head ID</label>\r\n            <input type=\"number\" step=\"1\" min=\"0\"  pattern=\"[0-9]*\" className=\"form-control\" id=\"inputDepartmentHeadID\" placeholder=\"0 (Needs to be an existing ID)\" value={this.state.updateDepartmentHeadID} name=\"updateDepartmentHeadID\" onChange={this.handleChange} />\r\n            <div className=\"invalid-feedback\">Please provide a valid department head ID.</div>\r\n          </div>\r\n\r\n          <button type=\"submit\" className=\"btn btn-outline-secondary mt-3\">Submit</button>\r\n          <button type=\"button\" className=\"btn btn-outline-secondary mt-3 mx-3\" onClick={this.handleClear} >Clear</button>\r\n          </form>\r\n\r\n          <button type=\"button\" className=\"btn btn-outline-secondary mt-3 mx-3 mb-3\" onClick={this.toggleSQL} >Toggle SQL</button>\r\n          {this.state.showSQL ? \r\n          <div className=\"mb-5\" >\r\n            {this.state.queries.map((queryText, index) => (\r\n              <span style={{whiteSpace: 'pre-wrap'}} key={index}>{queryText}<br/></span>\r\n            ))}\r\n          </div> : <div></div>}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UpdateDepartmentForm\r\n","import React, { Component } from 'react';\r\nimport './departmentForms.css'\r\n\r\n\r\nclass DeleteDepartmentForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      id: '',\r\n      showSQL: false,\r\n    };\r\n    \r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleClear = this.handleClear.bind(this);\r\n    this.toggleSQL = this.toggleSQL.bind(this);\r\n  }\r\n\r\n  toggleSQL = async(event) => {\r\n    if (this.state.queries) {\r\n      this.setState({\r\n        showSQL: !this.state.showSQL\r\n      });\r\n    }\r\n  }\r\n\r\n  handleChange = async (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.listenForFormSubmission();\r\n  }\r\n\r\n  listenForFormSubmission() {\r\n    const form = document.querySelector('#deleteFormHTML');\r\n\r\n    form.addEventListener('submit', (event) => {\r\n      if (!form.checkValidity()) {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n      }\r\n      form.classList.add('was-validated');\r\n    }, false);\r\n  }\r\n\r\n  assertValidDBResponse(body) {\r\n    if (!(\"rowCount\" in body)) {\r\n      throw new Error(\"Something went wrong; DELETE Request to Database did not return results object.\");\r\n    }\r\n  }\r\n\r\n  handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      const response = await fetch(`/department/${this.state.id}`, {\r\n        method: \"DELETE\",\r\n        headers: {\"Content-Type\": \"application/json\"}\r\n      });\r\n  \r\n      const responseBody = await response.json();\r\n      // console.log(\"Response body:\", responseBody);\r\n      this.assertValidDBResponse(responseBody);\r\n      \r\n      if (responseBody[\"rowCount\"] === 1) {\r\n        this.setState({\r\n          deletedDepartment: responseBody,\r\n          queries: responseBody.queries\r\n        });\r\n        \r\n        document.getElementById(\"successModal\").style.display = \"block\"\r\n        document.getElementById(\"successModal\").classList.add(\"show\")\r\n      }\r\n      else {\r\n        document.getElementById(\"errorModal\").style.display = \"block\"\r\n        document.getElementById(\"errorModal\").classList.add(\"show\")\r\n      }\r\n    }\r\n    catch (err) {\r\n      console.log(\"Error occurred while sending create Department POST request to server:\", err.message);\r\n      document.getElementById(\"errorModal\").style.display = \"block\"\r\n      document.getElementById(\"errorModal\").classList.add(\"show\")\r\n    }\r\n  };\r\n\r\n  closeModal = () => {\r\n    document.getElementById(\"errorModal\").style.display = \"none\"\r\n    document.getElementById(\"errorModal\").classList.remove(\"show\");\r\n  }\r\n\r\n  closeSuccessModal = () => {\r\n    document.getElementById(\"successModal\").style.display = \"none\"\r\n    document.getElementById(\"successModal\").classList.remove(\"show\");\r\n  }\r\n\r\n  handleClear = async (event) => {\r\n    this.setState({\r\n      id: '',\r\n      deletedDepartment: null,\r\n      queries: null,\r\n      showSQL: false\r\n    });\r\n\r\n    const form = document.querySelector('#deleteFormHTML');\r\n    form.classList.remove('was-validated');\r\n  }\r\n  \r\n  render() {\r\n    return (\r\n      <div className=\"container mt-5 px-5\">\r\n        <div className=\"modal fade\" id=\"errorModal\" tabIndex=\"-1\" role=\"dialog\" aria-hidden=\"true\">\r\n          <div className=\"modal-dialog\" role=\"document\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header\">\r\n                <h5 className=\"modal-title\" id=\"exampleModalLabel\">Error Occurred</h5>\r\n              </div>\r\n              <div className=\"modal-body\">\r\n                Something went wrong while processing your database request. Please check that the inputted Department ID exists in the database. Contact airport database assistance if further problems persist. <br />\r\n              </div>\r\n              <div className=\"modal-footer\">\r\n                <button type=\"button\" className=\"btn btn-primary\" onClick={this.closeModal} >Close</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"modal fade\" id=\"successModal\" tabIndex=\"-1\" role=\"dialog\" aria-hidden=\"true\">\r\n          <div className=\"modal-dialog\" role=\"document\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header\">\r\n                <h5 className=\"modal-title\" >Success</h5>\r\n              </div>\r\n              { this.state.deletedDepartment ? <div className=\"modal-body\">\r\n                Department with ID {this.state.id} was deleted. <br />\r\n              </div> : <div></div>}\r\n              <div className=\"modal-footer\">\r\n                <button type=\"button\" className=\"btn btn-primary\" onClick={this.closeSuccessModal} >Close</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <h3>Delete a Department</h3>\r\n        <form className=\"border border-secondary mt-3 px-5 py-4 rounded needs-validation\" id=\"deleteFormHTML\" onSubmit={this.handleSubmit} noValidate>\r\n\r\n          <div className=\"form-group\">\r\n            <label className=\"sr-only\" htmlFor=\"inputDepartmentID\">Department ID</label>\r\n            <input type=\"number\" step=\"1\" min=\"0\" pattern=\"[0-9]+\" className=\"form-control\" id=\"inputDepartmentID\" placeholder=\"(e.g. 1)\" value={this.state.id} name=\"id\" onChange={this.handleChange} required />\r\n            <div className=\"invalid-feedback\">Please provide an existing department ID.</div>\r\n          </div>\r\n\r\n          <button type=\"submit\" className=\"btn btn-outline-secondary mt-3\">Submit</button>\r\n          <button type=\"button\" className=\"btn btn-outline-secondary mt-3 mx-3\" onClick={this.handleClear} >Clear</button>\r\n        </form>\r\n\r\n        <button type=\"button\" className=\"btn btn-outline-secondary mt-3 mx-3 mb-3\" onClick={this.toggleSQL} >Toggle SQL</button>\r\n        {this.state.showSQL ? \r\n        <div className=\"mb-5\" >\r\n          {this.state.queries.map((queryText, index) => (\r\n            <span style={{whiteSpace: 'pre-wrap'}} key={index}>{queryText}<br/></span>\r\n          ))}\r\n        </div> : <div></div>}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DeleteDepartmentForm\r\n","import React, { Component } from 'react';\r\nimport { Outlet } from \"react-router-dom\";\r\nimport './sidePanels.css'\r\n\r\n\r\nclass BenefitsSidePanel extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"container-fluid\" >\r\n        <div className=\"row\">\r\n          <div className=\"col-3\" id=\"sidebar-wrapper\" >\r\n            <nav className=\"sidebar-nav\" align=\"center\" >\r\n              <ul className=\"sidebar-ul\" >\r\n                <li className=\"sidebar-li\"><a href=\"/benefits/search\" >Search All Benefit Packages</a></li>\r\n                <li className=\"sidebar-li\"><a href=\"/benefits/create\" >Create New Benefits Package</a></li>\r\n                <li className=\"sidebar-li\"><a href=\"/benefits/update\" >Update Benefits Package Details</a></li>\r\n              </ul>\r\n            </nav>\r\n          </div>\r\n          <div className=\"col-9\" >\r\n            <Outlet />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport default BenefitsSidePanel","import React, { Component } from 'react';\r\nimport './benefitsForm.css'\r\n\r\n\r\nclass CreateBenefitsForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      health_insurance_provider: '',\r\n      amount: '',\r\n      stock_options: '',\r\n      retirement_plan: '',\r\n      showSQL: false,\r\n    };\r\n    \r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleClear = this.handleClear.bind(this);\r\n    this.toggleSQL = this.toggleSQL.bind(this);\r\n  }\r\n\r\n  toggleSQL = async(event) => {\r\n    if (this.state.queries) {\r\n      this.setState({\r\n        showSQL: !this.state.showSQL\r\n      });\r\n    }\r\n  }\r\n\r\n  handleChange = async (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.listenForFormSubmission();\r\n  }\r\n\r\n  listenForFormSubmission() {\r\n    const form = document.querySelector('#createFormHTML');\r\n\r\n    form.addEventListener('submit', (event) => {\r\n      if (!form.checkValidity()) {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n      }\r\n      form.classList.add('was-validated');\r\n    }, false);\r\n  }\r\n\r\n  assertValidDBResponse(body) {\r\n    if (!(\"rows\" in body)) {\r\n      throw new Error(\"Something went wrong; POST Request to Database did not return results object.\");\r\n    }\r\n    else if (!Array.isArray(body.rows)) {\r\n      throw new Error(\"Something went wrong; POST Request to Database returned results object that is not recognized by webpage.\");\r\n    }\r\n  }\r\n\r\n  handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      const body = { \r\n        health_insurance_provider: this.state.health_insurance_provider, \r\n        amount: this.state.amount,\r\n        stock_options: this.state.stock_options,\r\n        retirement_plan: this.state.retirement_plan\r\n      };\r\n      // console.log(\"Sending creating new benefits package POST request with:\", body);\r\n  \r\n      const response = await fetch(\"/benefits\", {\r\n        method: \"POST\",\r\n        headers: {\"Content-Type\": \"application/json\"},\r\n        body: JSON.stringify(body)\r\n      });\r\n  \r\n      const responseBody = await response.json();\r\n      // console.log(\"Response body:\", responseBody);\r\n      this.assertValidDBResponse(responseBody);\r\n  \r\n      this.setState({\r\n        createdBenefitsPackage: responseBody.rows,\r\n        queries: responseBody.queries\r\n      });\r\n    }\r\n    catch (err) {\r\n      console.log(\"Error occurred while sending create Department POST request to server:\", err.message);\r\n      document.getElementById(\"errorModal\").style.display = \"block\"\r\n      document.getElementById(\"errorModal\").classList.add(\"show\")\r\n    }\r\n  };\r\n\r\n  closeModal = () => {\r\n    document.getElementById(\"errorModal\").style.display = \"none\"\r\n    document.getElementById(\"errorModal\").classList.remove(\"show\");\r\n  }\r\n\r\n  handleClear = async (event) => {\r\n    this.setState({\r\n      health_insurance_provider: '',\r\n      amount: '',\r\n      stock_options: '',\r\n      retirement_plan: '',\r\n      createdDepartment: null,\r\n      queries: null,\r\n      showSQL: false\r\n    });\r\n\r\n    // Remove was-validated class from form to reset its appearance\r\n    const form = document.querySelector('#createFormHTML');\r\n    form.classList.remove('was-validated');\r\n  }\r\n  \r\n  render() {\r\n    return (\r\n      <div className=\"container mt-5 px-5\">\r\n        <div className=\"modal fade\" id=\"errorModal\" tabIndex=\"-1\" role=\"dialog\" aria-hidden=\"true\">\r\n          <div className=\"modal-dialog\" role=\"document\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header\">\r\n                <h5 className=\"modal-title\" id=\"exampleModalLabel\">Error Occurred</h5>\r\n              </div>\r\n              <div className=\"modal-body\">\r\n                Something went wrong while processing your database request. Please try again and check your form inputs, especially Department Head ID! Contact airport database assistance if further problems persist. <br />\r\n              </div>\r\n              <div className=\"modal-footer\">\r\n                <button type=\"button\" className=\"btn btn-primary\" onClick={this.closeModal} >Close</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <h3>Create New Benefits Package</h3>\r\n\r\n        <form className=\"border border-secondary mt-3 px-5 py-4 rounded needs-validation\" id=\"createFormHTML\" onSubmit={this.handleSubmit} noValidate>\r\n\r\n          <div className=\"form-group\">\r\n            <label className=\"sr-only\" htmlFor=\"inputDepartmentName\">Health Insurance Provider</label>\r\n            <input type=\"text\" pattern=\"[A-Za-z ]+\" className=\"form-control\" id=\"inputInsuranceProvider\" placeholder=\"(e.g. AllState)\" value={this.state.health_insurance_provider} name=\"health_insurance_provider\" onChange={this.handleChange} required />\r\n            <div className=\"invalid-feedback\">Please provide a valid health insurance provider name.</div>\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label className=\"sr-only\" htmlFor=\"inputDepartmentHeadID\">Amount</label>\r\n            <input type=\"number\" step=\"0.01\" min=\"0\" pattern=\"[0-9]*\" className=\"form-control\" id=\"inputPackageAmount\" placeholder=\"(e.g. 5000.00)\" value={this.state.amount} name=\"amount\" onChange={this.handleChange} />\r\n            <div className=\"invalid-feedback\">Please provide a valid package monetary amount.</div>\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label className=\"sr-only\" htmlFor=\"inputDepartmentName\">Stock Options</label>\r\n            <input type=\"text\" pattern=\"[A-Za-z ]*\" className=\"form-control\" id=\"inputDepartmentName\" placeholder=\"(e.g. NASDAQ)\" value={this.state.stock_options} name=\"stock_options\" onChange={this.handleChange} />\r\n            <div className=\"invalid-feedback\">Please provide a valid stock options phrase.</div>\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label className=\"sr-only\" htmlFor=\"inputDepartmentName\">Retirement Plan</label>\r\n            <input type=\"text\" pattern=\"[A-Za-z0-9 ]*\" className=\"form-control\" id=\"inputRetirementPlan\" placeholder=\"(e.g. 2065 Retirement Plus)\" value={this.state.retirement_plan} name=\"retirement_plan\" onChange={this.handleChange} />\r\n            <div className=\"invalid-feedback\">Please provide a valid retirement plan name.</div>\r\n          </div>\r\n\r\n          <button type=\"submit\" className=\"btn btn-outline-secondary mt-3\">Submit</button>\r\n          <button type=\"button\" className=\"btn btn-outline-secondary mt-3 mx-3\" onClick={this.handleClear} >Clear</button>\r\n        </form>\r\n\r\n        {this.state.createdBenefitsPackage ? \r\n        <div>\r\n          <h3 className=\"mt-5 \">Created Benefits Package</h3>\r\n          <table align=\"center\" className=\"table border mt-3 mb-5\" >\r\n            <thead className=\"table-dark\">\r\n              <tr>\r\n                <th scope=\"col\">Benefits Package ID</th>\r\n                <th scope=\"col\">Amount</th>\r\n                <th scope=\"col\">Stock Options</th>\r\n                <th scope=\"col\">Health Insurance Provider</th>\r\n                <th scope=\"col\">Retirement Plan</th>\r\n              </tr>\r\n            </thead>\r\n            \r\n            <tbody>\r\n              {this.state.createdBenefitsPackage && this.state.createdBenefitsPackage.map(benefitsObj => (\r\n                <tr key={benefitsObj.benefits_package_id}>\r\n                  <th scope=\"col\">{benefitsObj.benefits_package_id}</th>\r\n                  <th scope=\"col\">{benefitsObj.amount}</th>\r\n                  <th scope=\"col\">{benefitsObj.stock_options}</th>\r\n                  <th scope=\"col\">{benefitsObj.health_insurance_provider}</th>\r\n                  <th scope=\"col\">{benefitsObj.retirement_plan}</th>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n\r\n          <button type=\"button\" className=\"btn btn-outline-secondary mx-3 mb-3\" onClick={this.toggleSQL} >Toggle SQL</button>\r\n          {this.state.showSQL ? \r\n          <div className=\"mb-5\" >\r\n            {this.state.queries.map((queryText, index) => (\r\n              <span style={{whiteSpace: 'pre-wrap'}} key={index}>{queryText}<br/></span>\r\n            ))}\r\n          </div> : <div></div>}\r\n        </div>:\r\n        <div></div>}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CreateBenefitsForm\r\n","import React, { Component } from 'react';\r\nimport './benefitsForm.css'\r\n\r\n\r\nclass SearchBenefitsForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      searchBy: 'all',\r\n      searchText: '',\r\n      searchID: '',\r\n      searchAmount: '',\r\n      searchStock: '',\r\n      searchProvider: '',\r\n      searchRetirement: '',\r\n      page: 1,\r\n      sort: 'id',\r\n      order: 'asc',\r\n      limit: 10,\r\n      showSQL: false,\r\n    };\r\n    \r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleClear = this.handleClear.bind(this);\r\n    this.toggleSQL = this.toggleSQL.bind(this);\r\n  }\r\n\r\n  toggleSQL = async(event) => {\r\n    if (this.state.queries) {\r\n      this.setState({\r\n        showSQL: !this.state.showSQL\r\n      });\r\n    }\r\n  }\r\n\r\n  handleChange = async (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n\r\n    if (event.target.name === \"searchBy\") {\r\n      this.setState({\r\n        searchText: '',\r\n        searchID: '',\r\n        searchAmount: '',\r\n        searchStock: '',\r\n        searchProvider: '',\r\n        searchRetirement: '',\r\n      });\r\n      this.handleClear();\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.listenForFormSubmission();\r\n  }\r\n\r\n  listenForFormSubmission() {\r\n    const form = document.querySelector('#searchFormHTML');\r\n\r\n    form.addEventListener('submit', (event) => {\r\n      if (!form.checkValidity()) {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n      }\r\n      form.classList.add('was-validated');\r\n    }, false);\r\n  }\r\n\r\n  assertValidGETResponse(body) {\r\n    if (!(\"rows\" in body)) {\r\n      throw new Error(\"Something went wrong; GET Request to Database did not return results object.\");\r\n    }\r\n    else if (!Array.isArray(body.rows)) {\r\n      throw new Error(\"Something went wrong; GET Request to Database returned results object that is not recognized by webpage.\");\r\n    }\r\n  }\r\n\r\n  handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    \r\n    let query = \"\";\r\n    switch(this.state.searchBy) {\r\n      case \"all\":\r\n        query = \"\";\r\n        break;\r\n      \r\n      case \"text\": {\r\n        query = this.state.searchText.trim();\r\n        break;\r\n      }\r\n      \r\n      case \"id\": {\r\n        query = this.state.searchID;\r\n        break;\r\n      }\r\n\r\n      case \"amount\":\r\n        query = this.state.searchAmount.trim();\r\n        break;\r\n      \r\n      case \"stock\":\r\n        query = query = String(this.state.searchStock.trim());\r\n        break;\r\n\r\n      case \"provider\":\r\n        query = query = String(this.state.searchProvider.trim());\r\n        break;\r\n\r\n      case \"retirement\":\r\n        query = query = String(this.state.searchRetirement.trim());\r\n        break;\r\n\r\n      default:\r\n        query = \"\";\r\n    }\r\n\r\n    // console.log(\"Sending query:\", query);\r\n    \r\n    try {\r\n      const response = await fetch(`/benefits?q=${query}&searchBy=${this.state.searchBy}&page=${this.state.page}&sort=${this.state.sort}&order=${this.state.order}&limit=${this.state.limit}`);\r\n      const body = await response.json();\r\n      // console.log(\"Response Body rows:\", body.rows);\r\n\r\n      this.assertValidGETResponse(body);\r\n      this.setState({\r\n        returnedBenefits: body.rows,\r\n        queries: body.queries\r\n      });\r\n    }\r\n    catch (e) {\r\n      console.log(\"Error occurred while sending GET request to /benefits endpoint,\", e);\r\n      document.getElementById(\"errorModal\").style.display = \"block\"\r\n      document.getElementById(\"errorModal\").classList.add(\"show\")\r\n    }\r\n\r\n    // Remove was-validated class from form to reset its appearance\r\n    const form = document.querySelector('#searchFormHTML');\r\n    form.classList.remove('was-validated');\r\n  };\r\n\r\n  closeModal = () => {\r\n    document.getElementById(\"errorModal\").style.display = \"none\"\r\n    document.getElementById(\"errorModal\").classList.remove(\"show\");\r\n  }\r\n\r\n  handleClear = async (event) => {\r\n    this.setState({\r\n      searchText: '',\r\n      searchID: '',\r\n      searchAmount: '',\r\n      searchStock: '',\r\n      searchProvider: '',\r\n      searchRetirement: '',\r\n      returnedBenefits: null,\r\n      queries: null,\r\n      showSQL: false\r\n    });\r\n\r\n    const form = document.querySelector('#searchFormHTML');\r\n    form.classList.remove('was-validated');\r\n  }\r\n\r\n  SearchByInputElement(searchBy) {\r\n    if (searchBy === \"all\") {\r\n      return <div></div>\r\n    }\r\n    else if (searchBy === \"text\") {\r\n      return <div className=\"form-group\">\r\n        <input type=\"text\" pattern=\"[A-Za-z ]+\"  className=\"form-control\" id=\"inputBenefitsText\" placeholder=\"(e.g. Entry Level Plan)\" name=\"searchText\" value={this.state.searchText} onChange={this.handleChange} required />\r\n        <div className=\"invalid-feedback\">Please provide a valid text phrase.</div>\r\n        <div className=\"valid-feedback\">Valid text.</div>\r\n      </div>\r\n    }\r\n    else if (searchBy === \"id\") {\r\n      return (<div className=\"form-group\">\r\n      <input type=\"number\" min=\"0\" pattern=\"[0-9]+\"  className=\"form-control\" id=\"inputPackageID\" placeholder=\"0\" name=\"searchID\" value={this.state.searchID} onChange={this.handleChange} required />\r\n      <div className=\"invalid-feedback\">Please provide a valid benefits package ID number.</div>\r\n      <div className=\"valid-feedback\">Valid benefits package ID.</div>\r\n    </div>\r\n      )\r\n    }\r\n    else if (searchBy === \"amount\") {\r\n      return <div className=\"form-group\">\r\n      <input type=\"number\" min=\"0\" step=\"0.01\" pattern=\"[0-9.]+\"  className=\"form-control\" id=\"inputPackageAmount\" placeholder=\"2000.00\" name=\"searchAmount\" value={this.state.searchAmount} onChange={this.handleChange} required />\r\n      <div className=\"invalid-feedback\">Please provide a valid benefits package amount.</div>\r\n      <div className=\"valid-feedback\">Valid benefits package amount.</div>\r\n    </div>\r\n    }\r\n    else if (searchBy === \"stock\") {\r\n      return <div className=\"form-group\">\r\n        <input type=\"text\" pattern=\"[A-Za-z ]+\"  className=\"form-control\" id=\"inputPackageStock\" placeholder=\"(e.g. NASDAQ)\" name=\"searchStock\" value={this.state.searchStock} onChange={this.handleChange} required />\r\n        <div className=\"invalid-feedback\">Please provide a valid stock option phrase.</div>\r\n        <div className=\"valid-feedback\">Valid stock option phrase.</div>\r\n      </div>\r\n    }\r\n    else if (searchBy === \"provider\") {\r\n      return <div className=\"form-group\">\r\n        <input type=\"text\" pattern=\"[A-Za-z ]+\"  className=\"form-control\" id=\"inputInsuranceProvider\" placeholder=\"(e.g. AllState)\" name=\"searchProvider\" value={this.state.searchProvider} onChange={this.handleChange} required />\r\n        <div className=\"invalid-feedback\">Please provide a valid insurance provider.</div>\r\n        <div className=\"valid-feedback\">Valid insurance provider.</div>\r\n      </div>\r\n    }\r\n    else if (searchBy === \"retirement\") {\r\n      return <div className=\"form-group\">\r\n        <input type=\"text\" pattern=\"[A-Za-z ]+\"  className=\"form-control\" id=\"inputRetirement\" placeholder=\"(e.g. 2065 Retirement Plus)\" name=\"searchRetirement\" value={this.state.searchRetirement} onChange={this.handleChange} required />\r\n        <div className=\"invalid-feedback\">Please provide a valid retirement plan title.</div>\r\n        <div className=\"valid-feedback\">Valid retirement plan title.</div>\r\n      </div>\r\n    }\r\n    else {\r\n      return <div></div>\r\n    }\r\n  } \r\n  \r\n  render() {\r\n    let searchByInputElement = this.SearchByInputElement(this.state.searchBy)\r\n    return (\r\n      <div className=\"container mt-5 px-5\">\r\n        <div className=\"modal fade\" id=\"errorModal\" tabIndex=\"-1\" role=\"dialog\" aria-hidden=\"true\">\r\n          <div className=\"modal-dialog\" role=\"document\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header\">\r\n                <h5 className=\"modal-title\" id=\"exampleModalLabel\">Error Occurred</h5>\r\n              </div>\r\n              <div className=\"modal-body\">\r\n                Something went wrong while processing your database request, please try again later. <br />\r\n\r\n              </div>\r\n              <div className=\"modal-footer\">\r\n                <button type=\"button\" className=\"btn btn-primary\" onClick={this.closeModal} >Close</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <h3>Search Database for Benefits Packages</h3>\r\n\r\n        <form className=\"border border-secondary mt-3 px-5 py-4 rounded needs-validation\" id=\"searchFormHTML\" onSubmit={this.handleSubmit} noValidate>\r\n\r\n          <div className=\"form-group mb-2\" >\r\n            <label className=\"sr-only\" htmlFor=\"inputSearchBy\">Search by:</label>\r\n            <select name=\"searchBy\" className=\"form-select \" id=\"inputSearchBy\" defaultValue=\"all\" onChange={this.handleChange}>\r\n              <option value=\"all\">Get All Departments</option>\r\n              <option value=\"text\">Benefits Package Text</option>\r\n              <option value=\"id\">Benefits Package ID</option>\r\n              <option value=\"amount\">Amount</option>\r\n              <option value=\"stock\">Stock</option>\r\n              <option value=\"provider\">Provider</option>\r\n              <option value=\"retirement\">Retirement</option>\r\n            </select>\r\n          </div>\r\n          {searchByInputElement}\r\n            \r\n          <div className=\"form-group mt-2\" >\r\n            <label className=\"sr-only\" htmlFor=\"inputSortBy\">Sort by:</label>\r\n            <select name=\"sort\" className=\"form-select\" id=\"inputSortBy\" defaultValue=\"id\" onChange={this.handleChange}>\r\n              <option value=\"id\">Benefits Package ID</option>\r\n              <option value=\"amount\">Amount</option>\r\n              <option value=\"stock\">Stock</option>\r\n              <option value=\"provider\">Provider</option>\r\n              <option value=\"retirement\">Retirement</option>\r\n            </select>\r\n          </div>\r\n\r\n          <div className=\"form-group mt-2\" >\r\n            <label className=\"sr-only\" htmlFor=\"inputOrderBy\">Order:</label>\r\n            <select name=\"order\" className=\"form-select\" id=\"inputOrderBy\" defaultValue=\"asc\" onChange={this.handleChange}>\r\n              <option value=\"asc\">Ascending</option>\r\n              <option value=\"desc\">Descending</option>\r\n            </select>\r\n          </div>\r\n\r\n          <div className=\"input-group mt-3\" >\r\n            <div className=\"input-group-prepend\">\r\n              <span className=\"input-group-text\" id=\"\">Results per Page, Page Number</span>\r\n            </div>\r\n            <input type=\"number\" min=\"1\" className=\"form-control\" id=\"inputSearchLimit\" name=\"limit\" value={this.state.limit} onChange={this.handleChange} />\r\n            <input type=\"number\" min=\"1\" className=\"form-control\" id=\"inputSearchPage\" name=\"page\" value={this.state.page} onChange={this.handleChange} />\r\n          </div>\r\n\r\n          <button type=\"submit\" className=\"btn btn-outline-secondary mt-3\">Submit</button>\r\n          <button type=\"button\" className=\"btn btn-outline-secondary mt-3 mx-3\" onClick={this.handleClear} >Clear</button>\r\n        </form>\r\n\r\n        {this.state.returnedBenefits ? \r\n        <div>\r\n          <table align=\"center\" className=\"table mt-5 border\" >\r\n            <thead className=\"table-dark\">\r\n              <tr>\r\n                <th scope=\"col\">#</th>\r\n                <th scope=\"col\">Benefits Package ID</th>\r\n                <th scope=\"col\">Amount</th>\r\n                <th scope=\"col\">Stock Options</th>\r\n                <th scope=\"col\">Health Insurance Provider</th>\r\n                <th scope=\"col\">Retirement Plan</th>\r\n              </tr>\r\n            </thead>\r\n            \r\n            <tbody>\r\n              {this.state.returnedBenefits && this.state.returnedBenefits.map((benefitsObj, index) => (\r\n                <tr key={benefitsObj.benefits_package_id\t}>\r\n                  <th scope=\"col\">{index + 1}</th>\r\n                  <th scope=\"col\">{benefitsObj.benefits_package_id}</th>\r\n                  <th scope=\"col\">{benefitsObj.amount}</th>\r\n                  <th scope=\"col\">{benefitsObj.stock_options}</th>\r\n                  <th scope=\"col\">{benefitsObj.health_insurance_provider}</th>\r\n                  <th scope=\"col\">{benefitsObj.retirement_plan}</th>\r\n                  <th scope=\"col\">{benefitsObj.department_head_id}</th>\r\n                  <th scope=\"col\">{benefitsObj.first_name}</th>\r\n                  <th scope=\"col\">{benefitsObj.last_name}</th>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n\r\n          <button type=\"button\" className=\"btn btn-outline-secondary mx-3 mb-3\" onClick={this.toggleSQL} >Toggle SQL</button>\r\n          {this.state.showSQL ? \r\n          <div className=\"mb-5\" >\r\n            {this.state.queries.map((queryText, index) => (\r\n              <span style={{whiteSpace: 'pre-wrap'}} key={index}>{queryText}<br/></span>\r\n            ))}\r\n          </div> : <div></div>}\r\n        </div> :\r\n        <div></div>}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchBenefitsForm\r\n","import React, { Component } from 'react';\r\nimport './benefitsForm.css'\r\n\r\n\r\nclass UpdateBenefitsForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      benefitsPackageID: '',\r\n      health_insurance_provider: '',\r\n      amount: '',\r\n      stock_options: '',\r\n      retirement_plan: '',\r\n      showSQL: false,\r\n    };\r\n    \r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleClear = this.handleClear.bind(this);\r\n    this.toggleSQL = this.toggleSQL.bind(this);\r\n  }\r\n\r\n  toggleSQL = async(event) => {\r\n    if (this.state.queries) {\r\n      this.setState({\r\n        showSQL: !this.state.showSQL\r\n      });\r\n    }\r\n  }\r\n\r\n  handleChange = async (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.listenForFormSubmission();\r\n  }\r\n\r\n  listenForFormSubmission() {\r\n    const form = document.querySelector('#updateFormHTML');\r\n\r\n    form.addEventListener('submit', (event) => {\r\n      if (!form.checkValidity()) {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n      }\r\n      form.classList.add('was-validated');\r\n    }, false);\r\n  }\r\n\r\n  assertValidDBResponse(body) {\r\n    if (!(\"rows\" in body)) {\r\n      throw new Error(\"Something went wrong; PUT Request to Database did not return results object.\");\r\n    }\r\n    else if (!Array.isArray(body.rows)) {\r\n      throw new Error(\"Something went wrong; PUT Request to Database returned results object that is not recognized by webpage.\");\r\n    }\r\n  }\r\n\r\n  handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      let body = { \r\n        health_insurance_provider: this.state.health_insurance_provider, \r\n        amount: this.state.amount,\r\n        stock_options: this.state.stock_options,\r\n        retirement_plan: this.state.retirement_plan\r\n      };\r\n\r\n      for (let [key, value] of Object.entries(body)) {\r\n        if (value===\"\") {\r\n          delete body[key];\r\n        }\r\n      }\r\n      // console.log(\"Updating department with \", body);\r\n  \r\n      const response = await fetch(`/benefits/${this.state.benefitsPackageID}`, {\r\n        method: \"PUT\",\r\n        headers: {\"Content-Type\": \"application/json\"},\r\n        body: JSON.stringify(body)\r\n      });\r\n\r\n      const responseBody = await response.json();\r\n      // console.log(\"Response Body:\", responseBody);\r\n      this.assertValidDBResponse(responseBody);\r\n\r\n      this.setState({\r\n        returnedBenefitPackage: responseBody.rows,\r\n        queries: responseBody.queries\r\n      });\r\n\r\n      document.getElementById(\"successModal\").style.display = \"block\"\r\n      document.getElementById(\"successModal\").classList.add(\"show\")\r\n    }\r\n    catch (err) {\r\n      console.log(\"Error occurred while sending Update Department PUT request to server:\", err.message);\r\n      document.getElementById(\"errorModal\").style.display = \"block\"\r\n      document.getElementById(\"errorModal\").classList.add(\"show\")\r\n    }\r\n  };\r\n\r\n  closeModal = () => {\r\n    document.getElementById(\"errorModal\").style.display = \"none\"\r\n    document.getElementById(\"errorModal\").classList.remove(\"show\");\r\n  }\r\n\r\n  closeSuccessModal = () => {\r\n    document.getElementById(\"successModal\").style.display = \"none\"\r\n    document.getElementById(\"successModal\").classList.remove(\"show\");\r\n  }\r\n\r\n  handleClear = async (event) => {\r\n    this.setState({\r\n      benefitsPackageID: '',\r\n      health_insurance_provider: '',\r\n      amount: '',\r\n      stock_options: '',\r\n      retirement_plan: '',\r\n      returnedBenefitPackage: null,\r\n      queries: null,\r\n      showSQL: false\r\n    });\r\n\r\n    const form = document.querySelector('#updateFormHTML');\r\n    form.classList.remove('was-validated');\r\n  }\r\n  \r\n  render() {\r\n    return (\r\n      <div className=\"container mt-5 px-5\">\r\n        <div className=\"modal fade\" id=\"errorModal\" tabIndex=\"-1\" role=\"dialog\" aria-hidden=\"true\">\r\n          <div className=\"modal-dialog\" role=\"document\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header\">\r\n                <h5 className=\"modal-title\" id=\"exampleModalLabel\">Error Occurred</h5>\r\n              </div>\r\n              <div className=\"modal-body\">\r\n                Something went wrong while processing your database request, one of your inputs may have been invalid. Please check your inputs, especially inputted IDs! These need to be existing IDs in the database. Cross reference IDs by searching through other tables, and contact airport database assistance if necessary. <br />\r\n              </div>\r\n              <div className=\"modal-footer\">\r\n                <button type=\"button\" className=\"btn btn-primary\" onClick={this.closeModal} >Close</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"modal fade\" id=\"successModal\" tabIndex=\"-1\" role=\"dialog\" aria-hidden=\"true\">\r\n          <div className=\"modal-dialog\" role=\"document\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header\">\r\n                <h5 className=\"modal-title\" >Success</h5>\r\n              </div>\r\n              { this.state.returnedBenefitPackage ? <div className=\"modal-body\">\r\n                Benefits Package with ID {this.state.benefitsPackageID} was updated. <br />\r\n              </div> : <div></div>}\r\n              <div className=\"modal-footer\">\r\n                <button type=\"button\" className=\"btn btn-primary\" onClick={this.closeSuccessModal} >Close</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <h3>Update a Benefits Package:</h3>\r\n\r\n        <form className=\"border border-secondary mt-3 px-5 py-4 rounded needs-validation\" id=\"updateFormHTML\" onSubmit={this.handleSubmit} noValidate>\r\n\r\n          <h5>Benefits Package to Update</h5>\r\n          <div className=\"form-group\">\r\n            <label className=\"sr-only\" htmlFor=\"inputBenefitsPackageID\">Benefits Package ID</label>\r\n            <input type=\"number\" step=\"1\" min=\"0\"  pattern=\"[0-9]+\" className=\"form-control\" id=\"inputBenefitsPackageID\" placeholder=\"(e.g. 0)\" value={this.state.benefitsPackageID} name=\"benefitsPackageID\" onChange={this.handleChange} required />\r\n            <div className=\"invalid-feedback\">Please provide a valid department ID to update.</div>\r\n          </div>\r\n\r\n          <h5 className=\"mt-3\" >Update Fields:</h5>\r\n          <small className=\"form-text text-muted\">Note: Only enter in fields that you want updated.</small>\r\n\r\n          <div className=\"form-group\">\r\n            <label className=\"sr-only\" htmlFor=\"inputInsuranceProvider\">Health Insurance Provider</label>\r\n            <input type=\"text\" pattern=\"[A-Za-z ]*\" className=\"form-control\" id=\"inputInsuranceProvider\" placeholder=\"(e.g. AllState)\" value={this.state.health_insurance_provider} name=\"health_insurance_provider\" onChange={this.handleChange} />\r\n            <div className=\"invalid-feedback\">Please provide a valid health insurance provider.</div>\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label className=\"sr-only\" htmlFor=\"inputPackageAmount\">Amount</label>\r\n            <input type=\"number\" step=\"0.01\" min=\"0\"  pattern=\"[0-9]*\" className=\"form-control\" id=\"inputPackageAmount\" placeholder=\"(e.g. 30000.00)\" value={this.state.amount} name=\"amount\" onChange={this.handleChange} />\r\n            <div className=\"invalid-feedback\">Please provide a valid package amount.</div>\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label className=\"sr-only\" htmlFor=\"inputStockOptions\">Stock Options</label>\r\n          <input type=\"text\" pattern=\"[A-Za-z ]*\" className=\"form-control\" id=\"inputStockOptions\" placeholder=\"(e.g. NASDAQ)\" value={this.state.stock_options} name=\"stock_options\" onChange={this.handleChange} />\r\n            <div className=\"invalid-feedback\">Please provide a valid stock options phrase.</div>\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label className=\"sr-only\" htmlFor=\"inputRetirementPlan\">Retirement Plan</label>\r\n            <input type=\"text\" pattern=\"[A-Za-z0-9 ]*\" className=\"form-control\" id=\"inputRetirementPlan\" placeholder=\"(e.g. 2065 Retirement Plus)\" value={this.state.retirement_plan} name=\"retirement_plan\" onChange={this.handleChange} />\r\n            <div className=\"invalid-feedback\">Please provide a valid retirement plan name.</div>\r\n          </div>\r\n\r\n          <button type=\"submit\" className=\"btn btn-outline-secondary mt-3\">Submit</button>\r\n          <button type=\"button\" className=\"btn btn-outline-secondary mt-3 mx-3\" onClick={this.handleClear} >Clear</button>\r\n          </form>\r\n\r\n          <button type=\"button\" className=\"btn btn-outline-secondary mt-3 mx-3 mb-3\" onClick={this.toggleSQL} >Toggle SQL</button>\r\n          {this.state.showSQL ? \r\n          <div className=\"mb-5\" >\r\n            {this.state.queries.map((queryText, index) => (\r\n              <span style={{whiteSpace: 'pre-wrap'}} key={index}>{queryText}<br/></span>\r\n            ))}\r\n          </div> : <div></div>}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UpdateBenefitsForm\r\n","import React, { Component } from 'react';\r\nimport { Outlet } from \"react-router-dom\";\r\nimport './sidePanels.css'\r\n\r\n\r\nclass PayrollSidePanel extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"container-fluid\" >\r\n        <div className=\"row\">\r\n          <div className=\"col-3\" id=\"sidebar-wrapper\" >\r\n            <nav className=\"sidebar-nav\" align=\"center\" >\r\n              <ul className=\"sidebar-ul\" >\r\n                <li className=\"sidebar-li\"><a href=\"/payroll/search\" >Search All Payroll Entries</a></li>\r\n                <li className=\"sidebar-li\"><a href=\"/payroll/create\" >Create a Payroll Entry</a></li>\r\n                <li className=\"sidebar-li\"><a href=\"/payroll/createAll\" >Calculate Payroll For All Employees</a></li>\r\n              </ul>\r\n            </nav>\r\n          </div>\r\n          <div className=\"col-9\" >\r\n            <Outlet />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport default PayrollSidePanel","import React, { Component } from 'react';\r\nimport './payrollForms.css'\r\n\r\n\r\nclass SearchPayrollForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      searchBy: 'all',\r\n      searchID: '',\r\n      searchPeriod: '',\r\n      searchEmployee: '',\r\n      searchIncome: '',\r\n      page: 1,\r\n      sort: 'id',\r\n      order: 'asc',\r\n      limit: 10,\r\n      showSQL: false,\r\n    };\r\n    \r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleClear = this.handleClear.bind(this);\r\n    this.toggleSQL = this.toggleSQL.bind(this);\r\n  }\r\n\r\n  toggleSQL = async(event) => {\r\n    if (this.state.queries) {\r\n      this.setState({\r\n        showSQL: !this.state.showSQL\r\n      });\r\n    }\r\n  }\r\n\r\n  handleChange = async (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n\r\n    if (event.target.name === \"searchBy\") {\r\n      this.setState({\r\n        searchID: '',\r\n        searchPeriod: '',\r\n        searchEmployee: '',\r\n        searchIncome: ''\r\n      });\r\n      this.handleClear();\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.listenForFormSubmission();\r\n  }\r\n\r\n  listenForFormSubmission() {\r\n    const form = document.querySelector('#searchFormHTML');\r\n\r\n    form.addEventListener('submit', (event) => {\r\n      if (!form.checkValidity()) {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n      }\r\n      form.classList.add('was-validated');\r\n    }, false);\r\n  }\r\n\r\n  assertValidGETResponse(body) {\r\n    if (!(\"rows\" in body)) {\r\n      throw new Error(\"Something went wrong; GET Request to Database did not return results object.\");\r\n    }\r\n    else if (!Array.isArray(body.rows)) {\r\n      throw new Error(\"Something went wrong; GET Request to Database returned results object that is not recognized by webpage.\");\r\n    }\r\n  }\r\n\r\n  handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    \r\n    let query = \"\";\r\n    switch(this.state.searchBy) {\r\n      case \"all\":\r\n        query = \"\";\r\n        break;\r\n      \r\n      case \"id\": {\r\n        query = this.state.searchID;\r\n        break;\r\n      }\r\n\r\n      case \"period\":\r\n        query = this.state.searchPeriod;\r\n        break;\r\n      \r\n      case \"employee\":\r\n        query = query = this.state.searchEmployee;\r\n        break;\r\n\r\n      case \"income\":\r\n        query = query = this.state.searchIncome;\r\n        break;\r\n\r\n      default:\r\n        query = \"\";\r\n    }\r\n\r\n    // console.log(\"Sending query:\", query);\r\n    \r\n    try {\r\n      const response = await fetch(`/payroll?q=${query}&searchBy=${this.state.searchBy}&page=${this.state.page}&sort=${this.state.sort}&order=${this.state.order}&limit=${this.state.limit}`);\r\n      const body = await response.json();\r\n      // console.log(\"Response Body rows:\", body.rows);\r\n\r\n      this.assertValidGETResponse(body);\r\n      this.setState({\r\n        returnedPayrollEntries: body.rows,\r\n        queries: body.queries\r\n      });\r\n    }\r\n    catch (e) {\r\n      console.log(\"Error occurred while sending GET request to /payroll endpoint,\", e);\r\n      document.getElementById(\"errorModal\").style.display = \"block\"\r\n      document.getElementById(\"errorModal\").classList.add(\"show\")\r\n    }\r\n\r\n    const form = document.querySelector('#searchFormHTML');\r\n    form.classList.remove('was-validated');\r\n  };\r\n\r\n  closeModal = () => {\r\n    document.getElementById(\"errorModal\").style.display = \"none\"\r\n    document.getElementById(\"errorModal\").classList.remove(\"show\");\r\n  }\r\n\r\n  handleClear = async (event) => {\r\n    this.setState({\r\n      searchID: '',\r\n      searchPeriod: '',\r\n      searchEmployee: '',\r\n      searchIncome: '',\r\n      returnedBenefits: null,\r\n      queries: null,\r\n      showSQL: false\r\n    });\r\n\r\n    const form = document.querySelector('#searchFormHTML');\r\n    form.classList.remove('was-validated');\r\n  }\r\n\r\n  SearchByInputElement(searchBy) {\r\n    if (searchBy === \"all\") {\r\n      return <div></div>\r\n    }\r\n    else if (searchBy === \"id\") {\r\n      return (<div className=\"form-group\">\r\n      <input type=\"number\" min=\"0\" pattern=\"[0-9]+\"  className=\"form-control\" id=\"inputPackageID\" placeholder=\"0\" name=\"searchID\" value={this.state.searchID} onChange={this.handleChange} required />\r\n      <div className=\"invalid-feedback\">Please provide a valid benefits package ID number.</div>\r\n      <div className=\"valid-feedback\">Valid benefits package ID.</div>\r\n    </div>\r\n      )\r\n    }\r\n    else if (searchBy === \"period\") {\r\n      return <div className=\"form-group\">\r\n      <input type=\"date\" className=\"form-control\" id=\"inputPayPeriod\" name=\"searchPeriod\" value={this.state.searchPeriod} onChange={this.handleChange} required />\r\n      <div className=\"invalid-feedback\">Please select a valid pay period date.</div>\r\n      <div className=\"valid-feedback\">Valid pay period date.</div>\r\n    </div>\r\n    }\r\n    else if (searchBy === \"employee\") {\r\n      return <div className=\"form-group\">\r\n      <input type=\"number\" min=\"0\" step=\"1\" pattern=\"[0-9.]+\"  className=\"form-control\" id=\"inputEmployeeID\" placeholder=\"(e.g. 1000000)\" name=\"searchEmployee\" value={this.state.searchEmployee} onChange={this.handleChange} required />\r\n      <div className=\"invalid-feedback\">Please provide a valid employee ID.</div>\r\n      <div className=\"valid-feedback\">Valid employee ID.</div>\r\n    </div>\r\n    }\r\n    else if (searchBy === \"income\") {\r\n      return <div className=\"form-group\">\r\n      <input type=\"number\" min=\"0\" step=\"0.01\" pattern=\"[0-9.]+\"  className=\"form-control\" id=\"inputIncome\" placeholder=\"(e.g. 2000.00)\" name=\"searchIncome\" value={this.state.searchIncome} onChange={this.handleChange} required />\r\n      <div className=\"invalid-feedback\">Please provide a valid income amount.</div>\r\n      <div className=\"valid-feedback\">Valid benefits income amount.</div>\r\n    </div>\r\n    }\r\n    else {\r\n      return <div></div>\r\n    }\r\n  } \r\n  \r\n  render() {\r\n    let searchByInputElement = this.SearchByInputElement(this.state.searchBy)\r\n    return (\r\n      <div className=\"container mt-5 px-5\">\r\n        <div className=\"modal fade\" id=\"errorModal\" tabIndex=\"-1\" role=\"dialog\" aria-hidden=\"true\">\r\n          <div className=\"modal-dialog\" role=\"document\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header\">\r\n                <h5 className=\"modal-title\" id=\"exampleModalLabel\">Error Occurred</h5>\r\n              </div>\r\n              <div className=\"modal-body\">\r\n                Something went wrong while processing your database request, please try again later. <br />\r\n\r\n              </div>\r\n              <div className=\"modal-footer\">\r\n                <button type=\"button\" className=\"btn btn-primary\" onClick={this.closeModal} >Close</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <h3>Search Database for Payroll Entries</h3>\r\n\r\n        <form className=\"border border-secondary mt-3 px-5 py-4 rounded needs-validation\" id=\"searchFormHTML\" onSubmit={this.handleSubmit} noValidate>\r\n\r\n          <div className=\"form-group mb-2\" >\r\n            <label className=\"sr-only\" htmlFor=\"inputSearchBy\">Search by:</label>\r\n            <select name=\"searchBy\" className=\"form-select \" id=\"inputSearchBy\" defaultValue=\"all\" onChange={this.handleChange}>\r\n              <option value=\"all\">Get All Payroll Entries</option>\r\n              <option value=\"id\">Payroll Entry ID</option>\r\n              <option value=\"period\">Pay Period</option>\r\n              <option value=\"employee\">Employee ID</option>\r\n              <option value=\"income\">Income</option>\r\n            </select>\r\n          </div>\r\n          {searchByInputElement}\r\n            \r\n          <div className=\"form-group mt-2\" >\r\n            <label className=\"sr-only\" htmlFor=\"inputSortBy\">Sort by:</label>\r\n            <select name=\"sort\" className=\"form-select\" id=\"inputSortBy\" defaultValue=\"id\" onChange={this.handleChange}>\r\n              <option value=\"id\">Payroll Entry ID</option>\r\n              <option value=\"period\">Pay Period</option>\r\n              <option value=\"employee\">Employee</option>\r\n              <option value=\"gross\">Gross income</option>\r\n              <option value=\"net\">Net income</option>\r\n            </select>\r\n          </div>\r\n\r\n          <div className=\"form-group mt-2\" >\r\n            <label className=\"sr-only\" htmlFor=\"inputOrderBy\">Order:</label>\r\n            <select name=\"order\" className=\"form-select\" id=\"inputOrderBy\" defaultValue=\"asc\" onChange={this.handleChange}>\r\n              <option value=\"asc\">Ascending</option>\r\n              <option value=\"desc\">Descending</option>\r\n            </select>\r\n          </div>\r\n\r\n          <div className=\"input-group mt-3\" >\r\n            <div className=\"input-group-prepend\">\r\n              <span className=\"input-group-text\" id=\"\">Results per Page, Page Number</span>\r\n            </div>\r\n            <input type=\"number\" min=\"1\" className=\"form-control\" id=\"inputSearchLimit\" name=\"limit\" value={this.state.limit} onChange={this.handleChange} />\r\n            <input type=\"number\" min=\"1\" className=\"form-control\" id=\"inputSearchPage\" name=\"page\" value={this.state.page} onChange={this.handleChange} />\r\n          </div>\r\n\r\n          <button type=\"submit\" className=\"btn btn-outline-secondary mt-3\">Submit</button>\r\n          <button type=\"button\" className=\"btn btn-outline-secondary mt-3 mx-3\" onClick={this.handleClear} >Clear</button>\r\n        </form>\r\n\r\n        {this.state.returnedPayrollEntries ? \r\n        <div>\r\n          <table align=\"center\" className=\"table mt-5 border\" >\r\n            <thead className=\"table-dark\">\r\n              <tr>\r\n                <th scope=\"col\">#</th>\r\n                <th scope=\"col\">Payroll ID</th>\r\n                <th scope=\"col\">Employee ID</th>\r\n                <th scope=\"col\">Hours Worked</th>\r\n                <th scope=\"col\">Pay Period</th>\r\n                <th scope=\"col\">Tax Rate</th>\r\n                <th scope=\"col\">Gross Income</th>\r\n                <th scope=\"col\">Taxed Income</th>\r\n                <th scope=\"col\">Net Income</th>\r\n              </tr>\r\n            </thead>\r\n            \r\n            <tbody>\r\n              {this.state.returnedPayrollEntries && this.state.returnedPayrollEntries.map((payrollObj, index) => (\r\n                <tr key={payrollObj.payroll_id}>\r\n                  <th scope=\"col\">{index + 1}</th>\r\n                  <th scope=\"col\">{payrollObj.payroll_id}</th>\r\n                  <th scope=\"col\">{payrollObj.employee_id}</th>\r\n                  <th scope=\"col\">{payrollObj.hours_worked}</th>\r\n                  <th scope=\"col\">{payrollObj.pay_period.split(\"T\")[0]}</th>\r\n                  <th scope=\"col\">{payrollObj.tax_rate}</th>\r\n                  <th scope=\"col\">{payrollObj.gross_income}</th>\r\n                  <th scope=\"col\">{payrollObj.taxed_income}</th>\r\n                  <th scope=\"col\">{payrollObj.net_income}</th>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n\r\n          <button type=\"button\" className=\"btn btn-outline-secondary mx-3 mb-3\" onClick={this.toggleSQL} >Toggle SQL</button>\r\n          {this.state.showSQL ? \r\n          <div className=\"mb-5\" >\r\n            {this.state.queries.map((queryText, index) => (\r\n              <span style={{whiteSpace: 'pre-wrap'}} key={index}>{queryText}<br/></span>\r\n            ))}\r\n          </div> : <div></div>}\r\n        </div> :\r\n        <div></div>}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchPayrollForm\r\n","import React, { Component } from 'react';\r\nimport './payrollForms.css'\r\n\r\n\r\nclass CreatePayrollEntryForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      employee_id: '',\r\n      hours_worked: '',\r\n      pay_period: '',\r\n      tax_rate: '',\r\n      showSQL: false,\r\n    };\r\n    \r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleClear = this.handleClear.bind(this);\r\n    this.toggleSQL = this.toggleSQL.bind(this);\r\n  }\r\n\r\n  toggleSQL = async(event) => {\r\n    if (this.state.queries) {\r\n      this.setState({\r\n        showSQL: !this.state.showSQL\r\n      });\r\n    }\r\n  }\r\n\r\n  handleChange = async (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.listenForFormSubmission();\r\n  }\r\n\r\n  listenForFormSubmission() {\r\n    const form = document.querySelector('#createFormHTML');\r\n\r\n    form.addEventListener('submit', (event) => {\r\n      if (!form.checkValidity()) {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n      }\r\n      form.classList.add('was-validated');\r\n    }, false);\r\n  }\r\n\r\n  assertValidDBResponse(body) {\r\n    if (!(\"rows\" in body)) {\r\n      throw new Error(\"Something went wrong; POST Request to Database did not return results object.\");\r\n    }\r\n    else if (!Array.isArray(body.rows)) {\r\n      throw new Error(\"Something went wrong; POST Request to Database returned results object that is not recognized by webpage.\");\r\n    }\r\n  }\r\n\r\n  handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      const body = { \r\n        employee_id: this.state.employee_id, \r\n        hours_worked: this.state.hours_worked,\r\n        pay_period: this.state.pay_period,\r\n        tax_rate: this.state.tax_rate\r\n      };\r\n      // console.log(\"Sending creating new benefits package POST request with:\", body);\r\n  \r\n      const response = await fetch(\"/payroll\", {\r\n        method: \"POST\",\r\n        headers: {\"Content-Type\": \"application/json\"},\r\n        body: JSON.stringify(body)\r\n      });\r\n  \r\n      const responseBody = await response.json();\r\n      // console.log(\"Response body:\", responseBody);\r\n      this.assertValidDBResponse(responseBody);\r\n  \r\n      this.setState({\r\n        createdPayrollEntry: responseBody.rows,\r\n        queries: responseBody.queries\r\n      });\r\n    }\r\n    catch (err) {\r\n      console.log(\"Error occurred while sending create Department POST request to server:\", err.message);\r\n      document.getElementById(\"errorModal\").style.display = \"block\"\r\n      document.getElementById(\"errorModal\").classList.add(\"show\")\r\n    }\r\n  };\r\n\r\n  closeModal = () => {\r\n    document.getElementById(\"errorModal\").style.display = \"none\"\r\n    document.getElementById(\"errorModal\").classList.remove(\"show\");\r\n  }\r\n\r\n  handleClear = async (event) => {\r\n    this.setState({\r\n      employee_id: '',\r\n      hours_worked: '',\r\n      pay_period: '',\r\n      tax_rate: '',\r\n      createdPayrollEntry: null,\r\n      queries: null,\r\n      showSQL: false\r\n    });\r\n\r\n    const form = document.querySelector('#createFormHTML');\r\n    form.classList.remove('was-validated');\r\n  }\r\n  \r\n  render() {\r\n    return (\r\n      <div className=\"container mt-5 px-5\">\r\n        <div className=\"modal fade\" id=\"errorModal\" tabIndex=\"-1\" role=\"dialog\" aria-hidden=\"true\">\r\n          <div className=\"modal-dialog\" role=\"document\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header\">\r\n                <h5 className=\"modal-title\" id=\"exampleModalLabel\">Error Occurred</h5>\r\n              </div>\r\n              <div className=\"modal-body\">\r\n                Something went wrong while processing your database request. Please try again and check your form inputs, especially Department Head ID! Contact airport database assistance if further problems persist. <br />\r\n              </div>\r\n              <div className=\"modal-footer\">\r\n                <button type=\"button\" className=\"btn btn-primary\" onClick={this.closeModal} >Close</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <h3>Create New Payroll Entry For An Employee</h3>\r\n\r\n        <form className=\"border border-secondary mt-3 px-5 py-4 rounded needs-validation\" id=\"createFormHTML\" onSubmit={this.handleSubmit} noValidate>\r\n\r\n          <div className=\"form-group\">\r\n            <label className=\"sr-only\" htmlFor=\"inputEmployeeID\">Employee ID</label>\r\n            <input type=\"number\" step=\"1\" min=\"0\" pattern=\"[0-9]+\" className=\"form-control\" id=\"inputEmployeeID\" placeholder=\"(e.g. 1000000)\" value={this.state.employee_id} name=\"employee_id\" onChange={this.handleChange} required />\r\n            <div className=\"invalid-feedback\">Please provide a valid employee ID.</div>\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label className=\"sr-only\" htmlFor=\"inputHoursWorked\">Hours Worked</label>\r\n            <input type=\"number\" step=\"1\" min=\"0\" pattern=\"[0-9]+\" className=\"form-control\" id=\"inputHoursWorked\" placeholder=\"(e.g. 40)\" value={this.state.hours_worked} name=\"hours_worked\" onChange={this.handleChange} required />\r\n            <div className=\"invalid-feedback\">Please provide a valid number of hours worked.</div>\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label className=\"sr-only\" htmlFor=\"inputPayPeriod\">Pay Period</label>\r\n            <input type=\"date\" className=\"form-control\" id=\"inputPayPeriod\" value={this.state.pay_period} name=\"pay_period\" onChange={this.handleChange} required />\r\n            <div className=\"invalid-feedback\">Please select a valid pay period date.</div>\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label className=\"sr-only\" htmlFor=\"inputTaxRate\">Tax Rate</label>\r\n            <input type=\"number\" step=\"0.01\" min=\"0\" pattern=\"[0-9]+\" className=\"form-control\" id=\"inputTaxRate\" placeholder=\"(e.g. 0.10)\" value={this.state.tax_rate} name=\"tax_rate\" onChange={this.handleChange} required />\r\n            <div className=\"invalid-feedback\">Please provide a valid number of hours worked.</div>\r\n          </div>\r\n\r\n          <button type=\"submit\" className=\"btn btn-outline-secondary mt-3\">Submit</button>\r\n          <button type=\"button\" className=\"btn btn-outline-secondary mt-3 mx-3\" onClick={this.handleClear} >Clear</button>\r\n        </form>\r\n\r\n        {this.state.createdPayrollEntry ? \r\n        <div>\r\n          <h3 className=\"mt-5 \">Created Payroll Entry</h3>\r\n          <table align=\"center\" className=\"table border mt-3 mb-5\" >\r\n            <thead className=\"table-dark\">\r\n              <tr>\r\n                <th scope=\"col\">Payroll ID</th>\r\n                <th scope=\"col\">Employee ID</th>\r\n                <th scope=\"col\">Hours Worked</th>\r\n                <th scope=\"col\">Pay Period</th>\r\n                <th scope=\"col\">Tax Rate</th>\r\n                <th scope=\"col\">Gross Income</th>\r\n                <th scope=\"col\">Taxed Income</th>\r\n                <th scope=\"col\">Net Income</th>\r\n              </tr>\r\n            </thead>\r\n            \r\n            <tbody>\r\n              {this.state.createdPayrollEntry && this.state.createdPayrollEntry.map(payrollObj => (\r\n                <tr key={payrollObj.payroll_id}>\r\n                  <th scope=\"col\">{payrollObj.payroll_id}</th>\r\n                  <th scope=\"col\">{payrollObj.employee_id}</th>\r\n                  <th scope=\"col\">{payrollObj.hours_worked}</th>\r\n                  <th scope=\"col\">{payrollObj.pay_period.split(\"T\")[0]}</th>\r\n                  <th scope=\"col\">{payrollObj.tax_rate}</th>\r\n                  <th scope=\"col\">{payrollObj.gross_income}</th>\r\n                  <th scope=\"col\">{payrollObj.taxed_income}</th>\r\n                  <th scope=\"col\">{payrollObj.net_income}</th>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n\r\n          <button type=\"button\" className=\"btn btn-outline-secondary mx-3 mb-3\" onClick={this.toggleSQL} >Toggle SQL</button>\r\n          {this.state.showSQL ? \r\n          <div className=\"mb-5\" >\r\n            {this.state.queries.map((queryText, index) => (\r\n              <span style={{whiteSpace: 'pre-wrap'}} key={index}>{queryText}<br/></span>\r\n            ))}\r\n          </div> : <div></div>}\r\n        </div>:\r\n        <div></div>}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CreatePayrollEntryForm\r\n","import React, { Component } from 'react';\r\nimport './payrollForms.css'\r\n\r\n\r\nclass CreateAllPayrollForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      pay_period: '',\r\n      tax_rate: '',\r\n      showSQL: false,\r\n    };\r\n    \r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleClear = this.handleClear.bind(this);\r\n    this.toggleSQL = this.toggleSQL.bind(this);\r\n  }\r\n\r\n  toggleSQL = async(event) => {\r\n    if (this.state.queries) {\r\n      this.setState({\r\n        showSQL: !this.state.showSQL\r\n      });\r\n    }\r\n  }\r\n\r\n  handleChange = async (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.listenForFormSubmission();\r\n  }\r\n\r\n  listenForFormSubmission() {\r\n    const form = document.querySelector('#createFormHTML');\r\n\r\n    form.addEventListener('submit', (event) => {\r\n      if (!form.checkValidity()) {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n      }\r\n      form.classList.add('was-validated');\r\n    }, false);\r\n  }\r\n\r\n  assertValidDBResponse(body) {\r\n    if (!(\"rows\" in body)) {\r\n      throw new Error(\"Something went wrong; POST Request to Database did not return results object.\");\r\n    }\r\n    else if (!Array.isArray(body.rows)) {\r\n      throw new Error(\"Something went wrong; POST Request to Database returned results object that is not recognized by webpage.\");\r\n    }\r\n  }\r\n\r\n  handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      const body = {\r\n        pay_period: this.state.pay_period,\r\n        tax_rate: this.state.tax_rate\r\n      };\r\n      // console.log(\"Sending creating new benefits package POST request with:\", body);\r\n  \r\n      const response = await fetch(\"/payroll/all\", {\r\n        method: \"POST\",\r\n        headers: {\"Content-Type\": \"application/json\"},\r\n        body: JSON.stringify(body)\r\n      });\r\n  \r\n      const responseBody = await response.json();\r\n      // console.log(\"Response body:\", responseBody);\r\n      this.assertValidDBResponse(responseBody);\r\n  \r\n      this.setState({\r\n        createdPayrollEntries: responseBody.rows,\r\n        queries: responseBody.queries\r\n      });\r\n    }\r\n    catch (err) {\r\n      console.log(\"Error occurred while sending create Department POST request to server:\", err.message);\r\n      document.getElementById(\"errorModal\").style.display = \"block\"\r\n      document.getElementById(\"errorModal\").classList.add(\"show\")\r\n    }\r\n  };\r\n\r\n  closeModal = () => {\r\n    document.getElementById(\"errorModal\").style.display = \"none\"\r\n    document.getElementById(\"errorModal\").classList.remove(\"show\");\r\n  }\r\n\r\n  handleClear = async (event) => {\r\n    this.setState({\r\n      pay_period: '',\r\n      tax_rate: '',\r\n      createdPayrollEntries: null,\r\n      queries: null,\r\n      showSQL: false\r\n    });\r\n\r\n    const form = document.querySelector('#createFormHTML');\r\n    form.classList.remove('was-validated');\r\n  }\r\n  \r\n  render() {\r\n    return (\r\n      <div className=\"container mt-5 px-5\">\r\n        <div className=\"modal fade\" id=\"errorModal\" tabIndex=\"-1\" role=\"dialog\" aria-hidden=\"true\">\r\n          <div className=\"modal-dialog\" role=\"document\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header\">\r\n                <h5 className=\"modal-title\" id=\"exampleModalLabel\">Error Occurred</h5>\r\n              </div>\r\n              <div className=\"modal-body\">\r\n                Something went wrong while processing your database request. Please try again and check your form inputs, especially Department Head ID! Contact airport database assistance if further problems persist. <br />\r\n              </div>\r\n              <div className=\"modal-footer\">\r\n                <button type=\"button\" className=\"btn btn-primary\" onClick={this.closeModal} >Close</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <h3>Create Payroll For All Employees</h3>\r\n\r\n        <form className=\"border border-secondary mt-3 px-5 py-4 rounded needs-validation\" id=\"createFormHTML\" onSubmit={this.handleSubmit} noValidate>\r\n\r\n          <div className=\"form-group\">\r\n            <label className=\"sr-only\" htmlFor=\"inputPayPeriod\">Pay Period</label>\r\n            <input type=\"date\" className=\"form-control\" id=\"inputPayPeriod\" value={this.state.pay_period} name=\"pay_period\" onChange={this.handleChange} required />\r\n            <div className=\"invalid-feedback\">Please select a valid pay period date.</div>\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label className=\"sr-only\" htmlFor=\"inputTaxRate\">Tax Rate</label>\r\n            <input type=\"number\" step=\"0.01\" min=\"0\" pattern=\"[0-9]+\" className=\"form-control\" id=\"inputTaxRate\" placeholder=\"(e.g. 0.10)\" value={this.state.tax_rate} name=\"tax_rate\" onChange={this.handleChange} required />\r\n            <div className=\"invalid-feedback\">Please provide a valid number of hours worked.</div>\r\n          </div>\r\n\r\n          <button type=\"submit\" className=\"btn btn-outline-secondary mt-3\">Submit</button>\r\n          <button type=\"button\" className=\"btn btn-outline-secondary mt-3 mx-3\" onClick={this.handleClear} >Clear</button>\r\n        </form>\r\n\r\n        {this.state.createdPayrollEntries ? \r\n        <div>\r\n          <h3 className=\"mt-5 \">Created Payroll Entries</h3>\r\n          <table align=\"center\" className=\"table border mt-3 mb-5\" >\r\n            <thead className=\"table-dark\">\r\n              <tr>\r\n                <th scope=\"col\">Payroll ID</th>\r\n                <th scope=\"col\">Employee ID</th>\r\n                <th scope=\"col\">Hours Worked</th>\r\n                <th scope=\"col\">Pay Period</th>\r\n                <th scope=\"col\">Tax Rate</th>\r\n                <th scope=\"col\">Gross Income</th>\r\n                <th scope=\"col\">Taxed Income</th>\r\n                <th scope=\"col\">Net Income</th>\r\n              </tr>\r\n            </thead>\r\n            \r\n            <tbody>\r\n              {this.state.createdPayrollEntries && this.state.createdPayrollEntries.slice(0, 100).map(payrollObj => (\r\n                <tr key={payrollObj.payroll_id}>\r\n                  <th scope=\"col\">{payrollObj.payroll_id}</th>\r\n                  <th scope=\"col\">{payrollObj.employee_id}</th>\r\n                  <th scope=\"col\">{payrollObj.hours_worked}</th>\r\n                  <th scope=\"col\">{payrollObj.pay_period.split(\"T\")[0]}</th>\r\n                  <th scope=\"col\">{payrollObj.tax_rate}</th>\r\n                  <th scope=\"col\">{payrollObj.gross_income}</th>\r\n                  <th scope=\"col\">{payrollObj.taxed_income}</th>\r\n                  <th scope=\"col\">{payrollObj.net_income}</th>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n\r\n          <button type=\"button\" className=\"btn btn-outline-secondary mx-3 mb-3\" onClick={this.toggleSQL} >Toggle SQL</button>\r\n          {this.state.showSQL ? \r\n          <div className=\"mb-5\" >\r\n            {this.state.queries.map((queryText, index) => (\r\n              <span style={{whiteSpace: 'pre-wrap'}} key={index}>{queryText}<br/></span>\r\n            ))}\r\n          </div> : <div></div>}\r\n        </div>:\r\n        <div></div>}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CreateAllPayrollForm\r\n","import React, { Component } from 'react';\r\nimport { BrowserRouter, Routes, Route } from 'react-router-dom';\r\nimport Navbar from './Navbar';\r\n\r\nimport EmployeeSidePanel from './pages/EmployeeSidePanel';\r\nimport SearchAllForm from './pages/employees/SearchAllForm';\r\nimport InsertForm from './pages/employees/InsertForm';\r\nimport UpdateForm from './pages/employees/UpdateForm';\r\nimport GetForm from './pages/employees/GetForm';\r\nimport SearchManagersForm from './pages/employees/SearchManagersForm';\r\nimport SearchEmployeesUnderManagerForm from './pages/employees/EmployeesUnderManagerForm';\r\nimport DeleteEmployeeForm from './pages/employees/DeleteEmployeeForm';\r\n\r\nimport JobsSidePanel from './pages/JobsSidePanel';\r\nimport SearchAllJobsForm from './pages/jobs/SearchAllJobsForm';\r\nimport CreateJobForm from './pages/jobs/CreateJobForm';\r\nimport UpdateJobForm from './pages/jobs/UpdateJobForm';\r\nimport DeleteJobForm from './pages/jobs/DeleteJobForm';\r\nimport SearchJobLocationsForm from './pages/jobs/SearchJobLocationsForm';\r\nimport CreateJobLocationForm from './pages/jobs/CreateJobLocationsForm';\r\n\r\nimport LeaveSidePanel from './pages/LeaveSidePanel';\r\nimport SearchAllLeaveForm from './pages/leave/SearchAllLeaveForm';\r\nimport SearchEmployeeLeaveForm from './pages/leave/SearchEmployeeLeaveForm';\r\nimport CreateLeaveForm from './pages/leave/CreateLeaveForm';\r\nimport UpdateLeaveForm from './pages/leave/UpdateLeaveForm';\r\n\r\nimport DepartmentsSidePanel from './pages/DepartmentSidePanel';\r\nimport CreateDepartmentForm from './pages/departments/CreateDepartmentForm';\r\nimport SearchDepartmentsForm from './pages/departments/SearchDepartments';\r\nimport UpdateDepartmentForm from './pages/departments/UpdateDepartment';\r\nimport DeleteDepartmentForm from './pages/departments/DeleteDepartment';\r\n\r\nimport BenefitsSidePanel from './pages/BenefitsSidePanel';\r\nimport CreateBenefitsForm from './pages/benefits/CreateNewBenefitsForm';\r\nimport SearchBenefitsForm from './pages/benefits/SearchBenefitsPackagesForm';\r\nimport UpdateBenefitsForm from './pages/benefits/UpdateBenefitsPackage';\r\n\r\nimport PayrollSidePanel from './pages/PayrollSidePanel';\r\nimport SearchPayrollForm from './pages/payroll/SearchAllPayrollForm';\r\nimport CreatePayrollEntryForm from './pages/payroll/CreatePayrollEntryForm';\r\nimport CreateAllPayrollForm from './pages/payroll/CreateAllPayrollForm';\r\nimport './App.css'\r\n\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"App\" >\r\n        <BrowserRouter >\r\n          <div className=\"entire-page-container\" >\r\n            <Routes>\r\n              <Route exact path=\"/\" element={<Navbar />} >\r\n                <Route exact path=\"employees\" element={<EmployeeSidePanel />} >\r\n                  <Route exact path=\"search\" element={<SearchAllForm />} />\r\n                  <Route exact path=\"insert\" element={<InsertForm />} />\r\n                  <Route exact path=\"get\" element={<GetForm />} />\r\n                  <Route exact path=\"update\" element={<UpdateForm />} />\r\n                  <Route exact path=\"delete\" element={<DeleteEmployeeForm />} />\r\n                  <Route exact path=\"managers\" element={<SearchManagersForm />} />\r\n                  <Route exact path=\"employeesUnderManagers\" element={<SearchEmployeesUnderManagerForm />} />\r\n                </Route>\r\n\r\n                <Route exact path=\"jobs\" element={<JobsSidePanel />} >\r\n                  <Route exact path=\"search\" element={<SearchAllJobsForm />} />\r\n                  <Route exact path=\"create\" element={<CreateJobForm />} />\r\n                  <Route exact path=\"update\" element={<UpdateJobForm />} />\r\n                  <Route exact path=\"delete\" element={<DeleteJobForm />} />\r\n                  <Route exact path=\"searchLocations\" element={<SearchJobLocationsForm />} />\r\n                  <Route exact path=\"createLocation\" element={<CreateJobLocationForm />} />\r\n                </Route>\r\n\r\n                <Route exact path=\"leave\" element={<LeaveSidePanel />} >\r\n                  <Route exact path=\"search\" element={<SearchAllLeaveForm />} />\r\n                  <Route exact path=\"getEmployee\" element={<SearchEmployeeLeaveForm />} />\r\n                  <Route exact path=\"create\" element={<CreateLeaveForm />} />\r\n                  <Route exact path=\"update\" element={<UpdateLeaveForm />} />\r\n                </Route>\r\n\r\n                <Route exact path=\"department\" element={<DepartmentsSidePanel />} >\r\n                  <Route exact path=\"create\" element={<CreateDepartmentForm />} />\r\n                  <Route exact path=\"search\" element={<SearchDepartmentsForm />} />\r\n                  <Route exact path=\"update\" element={<UpdateDepartmentForm />} />\r\n                  <Route exact path=\"delete\" element={<DeleteDepartmentForm />} />\r\n                </Route>\r\n\r\n                <Route exact path=\"benefits\" element={<BenefitsSidePanel />} >\r\n                  <Route exact path=\"create\" element={<CreateBenefitsForm />} />\r\n                  <Route exact path=\"search\" element={<SearchBenefitsForm />} />\r\n                  <Route exact path=\"update\" element={<UpdateBenefitsForm />} />\r\n                </Route>\r\n\r\n                <Route exact path=\"payroll\" element={<PayrollSidePanel />} >\r\n                  <Route exact path=\"create\" element={<CreatePayrollEntryForm />} />\r\n                  <Route exact path=\"search\" element={<SearchPayrollForm />} />\r\n                  <Route exact path=\"createAll\" element={<CreateAllPayrollForm />} />\r\n                </Route>\r\n              </Route>\r\n              \r\n            </Routes>\r\n          </div>\r\n        </BrowserRouter>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}